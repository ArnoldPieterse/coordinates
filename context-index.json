{
  "code": [
    {
      "id": "test-file.js",
      "path": "src/test/test-file.js",
      "type": "code",
      "content": "console.log(\"test\");"
    },
    {
      "id": "src\\ai\\agents\\ai-agent-automation.js",
      "path": "src\\ai\\agents\\ai-agent-automation.js",
      "type": "code",
      "size": 16465,
      "modified": "2025-07-14T05:31:16.473Z",
      "metadata": {
        "lines": 511,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-14T05:31:16.473Z",
        "keywords": [
          "AIAgentAutomation",
          "FileChangeMonitor",
          "PerformanceMonitor",
          "AISystemsMonitor",
          "AUTOMATION_RULES",
          "files",
          "file",
          "metrics",
          "codebase",
          "trainingData"
        ]
      },
      "content": "/**\r\n * Coordinates - AI Agent Automation System\r\n * Automatically generates and queues jobs for AI agents\r\n * IDX-AI-017: Agent Automation Implementation\r\n * IDX-AI-018: Automated Job Generation\r\n * IDX-AI-019: Performance Monitoring\r\n * IDX-AI-020: Scheduled Task Management\r\n * \r\n * For index reference format, see INDEX_DESCRIBER.md\r\n */\r\n\r\nimport AIAgentManager, { AGENT_ROLES, JOB_TYPES } from './ai-agent-system.js';\r\n\r\n// ===== AUTOMATION RULES =====\r\n// IDX-AI-021: Automation Rule Definitions\r\nexport const AUTOMATION_RULES = {\r\n    CODE_QUALITY: {\r\n        trigger: 'file_change',\r\n        conditions: ['new_file', 'large_change', 'complex_code'],\r\n        actions: [\r\n            { type: JOB_TYPES.CODE_REVIEW, priority: 'high' },\r\n            { type: JOB_TYPES.SECURITY_AUDIT, priority: 'normal' }\r\n        ]\r\n    },\r\n    PERFORMANCE: {\r\n        trigger: 'performance_metrics',\r\n        conditions: ['fps_drop', 'memory_usage', 'load_time'],\r\n        actions: [\r\n            { type: JOB_"
    },
    {
      "id": "src\\ai\\agents\\ai-agent-dashboard.js",
      "path": "src\\ai\\agents\\ai-agent-dashboard.js",
      "type": "code",
      "size": 20122,
      "modified": "2025-07-14T05:31:06.318Z",
      "metadata": {
        "lines": 474,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-14T05:31:06.318Z",
        "keywords": [
          "AIAgentDashboard",
          "stats",
          "statsContainer",
          "agentsStatus",
          "agentsGrid",
          "jobQueue",
          "queueContainer",
          "jobHistory",
          "historyContainer",
          "modal"
        ]
      },
      "content": "/**\r\n * Coordinates - AI Agent Dashboard\r\n * Real-time monitoring and control interface for AI agents\r\n * IDX-AI-013: Agent Dashboard Implementation\r\n * IDX-AI-014: Real-time Monitoring System\r\n * IDX-AI-015: Agent Control Interface\r\n * \r\n * For index reference format, see INDEX_DESCRIBER.md\r\n */\r\n\r\nimport AIAgentManager, { AGENT_ROLES, JOB_TYPES } from './ai-agent-system.js';\r\n\r\n// ===== DASHBOARD CLASS =====\r\n// IDX-AI-016: Dashboard Core Implementation\r\nexport class AIAgentDashboard {\r\n    constructor(containerId) {\r\n        this.container = document.getElementById(containerId);\r\n        this.agentManager = new AIAgentManager();\r\n        this.updateInterval = null;\r\n        this.isInitialized = false;\r\n        \r\n        if (!this.container) {\r\n            throw new Error(`Container with ID '${containerId}' not found`);\r\n        }\r\n        \r\n        this.initialize();\r\n    }\r\n\r\n    async initialize() {\r\n        console.log('üéõÔ∏è Initializing AI Agent Dashboard...');\r\n        \r\n       "
    },
    {
      "id": "src\\ai\\agents\\ai-agent-manager.js",
      "path": "src\\ai\\agents\\ai-agent-manager.js",
      "type": "code",
      "size": 14435,
      "modified": "2025-07-14T05:30:56.899Z",
      "metadata": {
        "lines": 403,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-14T05:30:56.899Z",
        "keywords": [
          "ManagerAgent",
          "managerId",
          "agents",
          "agent",
          "update",
          "issues",
          "performance",
          "creativeAgentId",
          "creativeAgent",
          "baseLifespan"
        ]
      },
      "content": "/**\r\n * Coordinates - AI Agent Manager\r\n * Specialized manager agent for coordinating and optimizing the AI ecosystem\r\n * IDX-AI-008: Manager Agent Implementation\r\n * IDX-AI-009: Agent Coordination System\r\n * IDX-AI-010: Creative Agent Spawning\r\n * IDX-AI-011: Performance Monitoring\r\n * \r\n * For index reference format, see INDEX_DESCRIBER.md\r\n */\r\n\r\nimport AIAgentManager, { AGENT_ROLES, JOB_TYPES } from './ai-agent-system.js';\r\n\r\n// ===== MANAGER AGENT CLASS =====\r\n// IDX-AI-012: Manager Agent Core Implementation\r\nexport class ManagerAgent {\r\n    constructor(agentManager) {\r\n        this.agentManager = agentManager;\r\n        this.agent = null;\r\n        this.updateInterval = null;\r\n        this.promptOptimizationInterval = null;\r\n        this.agentEvaluationInterval = null;\r\n        this.memoryManagementInterval = null;\r\n        this.creativeAgents = new Map(); // Temporary creative agents\r\n        this.communicationLog = [];\r\n        this.performanceMetrics = new Map();\r\n        \r\n    "
    },
    {
      "id": "src\\ai\\agents\\AIAgentManager.js",
      "path": "src\\ai\\agents\\AIAgentManager.js",
      "type": "code",
      "size": 52077,
      "modified": "2025-07-21T04:35:20.448Z",
      "metadata": {
        "lines": 1495,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:35:20.448Z",
        "keywords": [
          "AgentMemory",
          "AIAgent",
          "AIAgentManager",
          "AGENT_ROLES",
          "JOB_TYPES",
          "relativity",
          "leastRelevantKey",
          "leastImportantKey",
          "context",
          "relevance"
        ]
      },
      "content": "/**\r\n * Coordinates - AI Agent System\r\n * Manages specialized AI agents with role-based job queuing and LLM integration\r\n * IDX-AI-001: AI Agent System Implementation\r\n * IDX-AI-002: Agent Memory System\r\n * IDX-AI-003: Enhanced Agent Capabilities\r\n * IDX-AI-004: Job Management and Queuing\r\n * IDX-AI-005: LLM-Enhanced Agent Intelligence\r\n * \r\n * For index reference format, see INDEX_DESCRIBER.md\r\n */\r\n\r\nimport MathematicalAI from '../neural/MathematicalAI.js';\r\nimport comfyUI from '../../utils/helpers/comfyui-integration.js';\r\nimport { LLMManager, AgentLLMEnhancer } from '../llm/LLMManager.js';\r\nimport { ProjectObjectives } from '../../core/relativity/project-objectives.js';\r\n\r\n// ===== AGENT ROLES =====\r\n// IDX-AI-005: Agent Role Definitions\r\nexport const AGENT_ROLES = {\r\n    PROJECT_MANAGER: 'project_manager',\r\n    CODE_REVIEWER: 'code_reviewer',\r\n    PERFORMANCE_OPTIMIZER: 'performance_optimizer',\r\n    AI_SYSTEMS_ENGINEER: 'ai_systems_engineer',\r\n    GAMEPLAY_DESIGNER: 'gameplay_desi"
    },
    {
      "id": "src\\ai\\llm\\LLMManager.js",
      "path": "src\\ai\\llm\\LLMManager.js",
      "type": "code",
      "size": 40240,
      "modified": "2025-07-21T03:56:25.786Z",
      "metadata": {
        "lines": 1091,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T03:56:25.786Z",
        "keywords": [
          "TerminalAccess",
          "LLMService",
          "LLMManager",
          "AgentLLMEnhancer",
          "LLM_PROVIDERS",
          "LLM_CONFIGS",
          "response",
          "startTime",
          "latency",
          "messageId"
        ]
      },
      "content": "/**\r\n * Coordinates - LLM Integration System\r\n * Provides unified interface for multiple LLM services\r\n * IDX-LLM-001: LLM Service Integration\r\n * IDX-LLM-002: Multi-Provider Support\r\n * IDX-LLM-003: Agent Enhancement System\r\n * IDX-LLM-004: Terminal Access for Fast Local Transfers\r\n * \r\n * For index reference format, see INDEX_DESCRIBER.md\r\n */\r\n\r\n// Import LM Studio SDK with proper CommonJS interop\r\nlet LMStudioClient = null;\r\n// Using browser's built-in fetch API instead of node-fetch\r\n\r\n// ===== LLM PROVIDER CONFIGURATIONS =====\r\n// IDX-LLM-004: Provider Configuration Management\r\nexport const LLM_PROVIDERS = {\r\n    LM_STUDIO_LOCAL: 'lm_studio_local', // User's local instance\r\n    LM_STUDIO: 'lm_studio',\r\n    OLLAMA: 'ollama',\r\n    OPENAI_FREE: 'openai_free',\r\n    ANTHROPIC_FREE: 'anthropic_free',\r\n    HUGGINGFACE_FREE: 'huggingface_free',\r\n    LOCAL_LLAMA: 'local_llama',\r\n    LOCAL_MISTRAL: 'local_mistral'\r\n};\r\n\r\n// ===== LLM SERVICE CONFIGURATIONS =====\r\nconst LLM_CONFIGS = {\r\n   "
    },
    {
      "id": "src\\ai\\neural\\MathematicalAI.js",
      "path": "src\\ai\\neural\\MathematicalAI.js",
      "type": "code",
      "size": 14016,
      "modified": "2025-07-21T04:37:47.319Z",
      "metadata": {
        "lines": 332,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:37:47.319Z",
        "keywords": [
          "MathematicalAI",
          "with",
          "currentLayer",
          "nextLayer",
          "neuronWeights",
          "weight",
          "analysis",
          "position",
          "velocity",
          "magnitude"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-MATHAI-01: Mathematical AI Module\r\n\r\nimport MathematicalEngine from '../../utils/math/MathEngine.js';\r\n\r\nclass MathematicalAI {\r\n    constructor(mathematicalEngine) {\r\n        this.mathEngine = mathematicalEngine || new MathematicalEngine();\r\n        \r\n        // AI State with mathematical integration\r\n        this.aiState = {\r\n            adaptiveDifficulty: 1.0 * this.mathEngine.ALPHA,\r\n            learningRate: 0.01 * this.mathEngine.ALPHA,\r\n            predictionAccuracy: 0.5 * this.mathEngine.SQRT_TEN.x,\r\n            memoryUsage: 0,\r\n            patternCount: 0,\r\n            mathematicalInfluence: this.mathEngine.ALPHA\r\n        };\r\n        \r\n        // Patterns with mathematical integration\r\n        this.patterns = {\r\n            fractal: { \r\n                complexity: 0 * this.mathEngine.ALPHA, \r\n                evolution: 0 * this.mathEngine.SQRT_POINT_ONE.x,\r\n                influence: 0\r\n            },\r"
    },
    {
      "id": "src\\ai\\social\\SocialAIMatching.js",
      "path": "src\\ai\\social\\SocialAIMatching.js",
      "type": "code",
      "size": 18665,
      "modified": "2025-07-21T04:29:47.965Z",
      "metadata": {
        "lines": 574,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:29:47.965Z",
        "keywords": [
          "SocialAIMatching",
          "userProfile",
          "needEntry",
          "abilityEntry",
          "user",
          "matches",
          "potentialHelpers",
          "helper",
          "matchScore",
          "potentialClients"
        ]
      },
      "content": "/**\r\n * Social AI Matching System\r\n * AI-powered system for connecting like-minded people with shared AI sessions\r\n * Users can advertise needs/abilities and get actionable suggestions\r\n */\r\n\r\nexport class SocialAIMatching {\r\n  constructor(config = {}) {\r\n    this.config = {\r\n      maxSessionSize: config.maxSessionSize || 5,\r\n      matchingThreshold: config.matchingThreshold || 0.7,\r\n      sessionTimeout: config.sessionTimeout || 30 * 60 * 1000, // 30 minutes\r\n      ...config\r\n    };\r\n\r\n    this.users = new Map();\r\n    this.sessions = new Map();\r\n    this.needs = new Map();\r\n    this.abilities = new Map();\r\n    this.matches = new Map();\r\n    this.conversations = new Map();\r\n  }\r\n\r\n  // User profile management\r\n  createUserProfile(userId, profile) {\r\n    const userProfile = {\r\n      id: userId,\r\n      name: profile.name || 'Anonymous',\r\n      avatar: profile.avatar || null,\r\n      needs: profile.needs || [],\r\n      abilities: profile.abilities || [],\r\n      interests: profile.interests "
    },
    {
      "id": "src\\ai\\thinking\\ChainOfThought.js",
      "path": "src\\ai\\thinking\\ChainOfThought.js",
      "type": "code",
      "size": 21325,
      "modified": "2025-07-20T10:04:39.657Z",
      "metadata": {
        "lines": 552,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T10:04:39.657Z",
        "keywords": [
          "ChainOfThoughtAPI",
          "thoughtRecord",
          "thoughts",
          "paginatedThoughts",
          "analysis",
          "patterns",
          "metrics",
          "progress",
          "results",
          "thoughtData"
        ]
      },
      "content": "/**\r\n * Chain-of-Thought API System\r\n * RESTful API and WebSocket endpoints for thought monitoring\r\n */\r\n\r\nimport express from 'express';\r\nimport { Server } from 'socket.io';\r\nimport http from 'http';\r\nimport cors from 'cors';\r\nimport ChainOfThoughtMonitor from './chain-of-thought-monitor.js';\r\n\r\nexport class ChainOfThoughtAPI {\r\n    constructor(config = {}) {\r\n        this.app = express();\r\n        this.server = http.createServer(this.app);\r\n        this.io = new Server(this.server, {\r\n            cors: {\r\n                origin: \"*\",\r\n                methods: [\"GET\", \"POST\"]\r\n            }\r\n        });\r\n        \r\n        this.port = config.port || 3003;\r\n        this.monitor = new ChainOfThoughtMonitor(config.monitorConfig);\r\n        \r\n        this.setupMiddleware();\r\n        this.setupRoutes();\r\n        this.setupWebSocket();\r\n        this.setupEventHandlers();\r\n    }\r\n\r\n    setupMiddleware() {\r\n        this.app.use(cors());\r\n        this.app.use(express.json({ limit: '10mb' }));\r\n "
    },
    {
      "id": "src\\ai\\thinking\\ReasoningEngine.js",
      "path": "src\\ai\\thinking\\ReasoningEngine.js",
      "type": "code",
      "size": 32212,
      "modified": "2025-07-20T10:02:40.282Z",
      "metadata": {
        "lines": 894,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-20T10:02:40.282Z",
        "keywords": [
          "ChainOfThoughtMonitor",
          "thoughtRecord",
          "depth",
          "coherence",
          "evidenceUsage",
          "alternatives",
          "text",
          "wordCount",
          "sentenceCount",
          "uniqueWords"
        ]
      },
      "content": "/**\r\n * Chain-of-Thought Monitoring System\r\n * Based on OpenAI's Chain-of-Thought Monitoring Research\r\n * Enhanced with APIs and Git repository integration\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\nexport class ChainOfThoughtMonitor extends EventEmitter {\r\n    constructor(config = {}) {\r\n        super();\r\n        \r\n        this.config = {\r\n            enableRealTimeMonitoring: true,\r\n            enableGitIntegration: true,\r\n            enableAPIIntegration: true,\r\n            thoughtHistoryLimit: 1000,\r\n            confidenceThreshold: 0.7,\r\n            reasoningQualityThreshold: 0.8,\r\n            gitCommitInterval: 30000, // 30 seconds\r\n            apiEndpoint: 'http://localhost:3001/api/thoughts',\r\n            gitRepoPath: './thought-history',\r\n            ...config\r\n        };\r\n\r\n        // Thought tracking\r\n        this.thoughtHistory = new Map(); // agentId -> thoughts[]\r\n        this.reasoningPatterns = new Map(); /"
    },
    {
      "id": "src\\ai\\thinking\\ThoughtFrames.js",
      "path": "src\\ai\\thinking\\ThoughtFrames.js",
      "type": "code",
      "size": 18127,
      "modified": "2025-07-21T04:47:21.442Z",
      "metadata": {
        "lines": 578,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:47:21.442Z",
        "keywords": [
          "ThoughtFrames",
          "codeContext",
          "docsContext",
          "testContext",
          "pastDecisions",
          "relevantCode",
          "relevantDocs",
          "pastUpgrades",
          "frame",
          "tradingCode"
        ]
      },
      "content": "/**\r\n * Thought Frames System - Strategic Planning and Implementation\r\n * AI-powered thought process for complex system upgrades with persistent context\r\n */\r\n\r\nimport ContextIndexer from '../../core/context/ContextIndexer.js';\r\nimport KnowledgeGraph from '../../core/context/KnowledgeGraph.js';\r\nimport ContextMemory from '../../core/context/ContextMemory.js';\r\n\r\nexport class ThoughtFrames {\r\n  constructor() {\r\n    this.frames = new Map();\r\n    this.currentFrame = null;\r\n    this.frameHistory = [];\r\n    \r\n    // Initialize context system\r\n    this.contextIndexer = new ContextIndexer();\r\n    this.knowledgeGraph = new KnowledgeGraph();\r\n    this.contextMemory = new ContextMemory();\r\n    \r\n    // Load existing context\r\n    this.loadContext();\r\n  }\r\n\r\n  // Load existing context from index and memory\r\n  loadContext() {\r\n    // Load code context\r\n    const codeContext = this.contextIndexer.getAll('code');\r\n    codeContext.forEach(item => {\r\n      this.knowledgeGraph.addNode(item.id, { ...item"
    },
    {
      "id": "src\\constants\\app.constants.js",
      "path": "src\\constants\\app.constants.js",
      "type": "code",
      "size": 3764,
      "modified": "2025-07-21T04:17:30.608Z",
      "metadata": {
        "lines": 179,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:17:30.608Z",
        "keywords": [
          "MATH_CONSTANTS",
          "COORDINATE_CONSTANTS",
          "AI_CONSTANTS",
          "GRAPHICS_CONSTANTS",
          "GAME_CONSTANTS",
          "UI_CONSTANTS",
          "PERFORMANCE_CONSTANTS",
          "ERROR_CODES",
          "STATUS_CODES",
          "PRIORITY_LEVELS"
        ]
      },
      "content": "/**\r\n * Rekursing - Application Constants\r\n * Centralized constants for the application\r\n */\r\n\r\n// Mathematical constants\r\nexport const MATH_CONSTANTS = {\r\n  PI: Math.PI,\r\n  E: Math.E,\r\n  GOLDEN_RATIO: 1.618033988749895,\r\n  FINE_STRUCTURE_CONSTANT: 1 / 137.035999084,\r\n  PLANCK_CONSTANT: 6.62607015e-34,\r\n  SPEED_OF_LIGHT: 299792458\r\n};\r\n\r\n// Coordinate system constants\r\nexport const COORDINATE_CONSTANTS = {\r\n  WORLD_SCALE: 1000,\r\n  CHUNK_SIZE: 16,\r\n  MAX_DISTANCE: 10000,\r\n  MIN_DISTANCE: 0.001\r\n};\r\n\r\n// AI system constants\r\nexport const AI_CONSTANTS = {\r\n  MAX_AGENTS: 50,\r\n  MAX_THOUGHTS_PER_AGENT: 100,\r\n  THINKING_INTERVAL: 1000,\r\n  MEMORY_CAPACITY: 1000,\r\n  LEARNING_RATE: 0.01\r\n};\r\n\r\n// Graphics constants\r\nexport const GRAPHICS_CONSTANTS = {\r\n  MAX_FPS: 144,\r\n  MIN_FPS: 30,\r\n  TARGET_FPS: 60,\r\n  MAX_DRAW_CALLS: 1000,\r\n  MAX_VERTICES: 1000000,\r\n  MAX_TEXTURES: 16\r\n};\r\n\r\n// Game constants\r\nexport const GAME_CONSTANTS = {\r\n  MAX_PLAYERS: 100,\r\n  TICK_RATE: 60,\r\n  MAX_ENTITIES: 1000,\r\n  W"
    },
    {
      "id": "src\\core\\config\\app.config.js",
      "path": "src\\core\\config\\app.config.js",
      "type": "code",
      "size": 2853,
      "modified": "2025-07-21T04:17:07.012Z",
      "metadata": {
        "lines": 120,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:17:07.012Z",
        "keywords": [
          "APP_CONFIG",
          "FEATURE_FLAGS",
          "DEV_CONFIG",
          "PROD_CONFIG",
          "const"
        ]
      },
      "content": "/**\r\n * Rekursing - Main Application Configuration\r\n * Central configuration for all application systems\r\n */\r\n\r\nexport const APP_CONFIG = {\r\n  // Application metadata\r\n  name: 'Rekursing',\r\n  version: '1.0.0',\r\n  description: 'Recursive AI Gaming System',\r\n  \r\n  // Environment\r\n  environment: process.env.NODE_ENV || 'development',\r\n  isProduction: process.env.NODE_ENV === 'production',\r\n  isDevelopment: process.env.NODE_ENV === 'development',\r\n  \r\n  // API endpoints\r\n  api: {\r\n    baseUrl: process.env.API_BASE_URL || 'http://localhost:3001/api',\r\n    timeout: 30000,\r\n    retries: 3\r\n  },\r\n  \r\n  // LLM configuration\r\n  llm: {\r\n    lmStudioUrl: process.env.LM_STUDIO_URL || 'http://10.3.129.26:1234',\r\n    defaultModel: 'meta-llama-3-70b-instruct-smashed',\r\n    maxTokens: 1000,\r\n    temperature: 0.7\r\n  },\r\n  \r\n  // Graphics configuration\r\n  graphics: {\r\n    enableAdvancedRendering: true,\r\n    enableCrysisEnhancement: true,\r\n    enableRealTimeMaterials: true,\r\n    enableProceduralGeneratio"
    },
    {
      "id": "src\\core\\context\\BuildHook.js",
      "path": "src\\core\\context\\BuildHook.js",
      "type": "code",
      "size": 4821,
      "modified": "2025-07-21T04:50:24.898Z",
      "metadata": {
        "lines": 169,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:50:24.898Z",
        "keywords": [
          "BuildHook",
          "startTime",
          "duration",
          "codeFiles",
          "file",
          "generatedTests",
          "generatedDocs",
          "class",
          "./ContextAutomation.js",
          "./ContextMemory.js"
        ]
      },
      "content": "/**\r\n * BuildHook - Automated context indexing during build process\r\n * Integrates with Vite build system to maintain context\r\n */\r\n\r\nimport ContextAutomation from './ContextAutomation.js';\r\nimport ContextMemory from './ContextMemory.js';\r\n\r\nexport class BuildHook {\r\n  constructor() {\r\n    this.automation = new ContextAutomation();\r\n    this.memory = new ContextMemory();\r\n  }\r\n\r\n  // Pre-build hook - index all files\r\n  async preBuild() {\r\n    console.log('üîç Pre-build: Indexing project context...');\r\n    \r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      // Index all project files\r\n      await this.automation.indexProject();\r\n      \r\n      // Generate tests for new code files\r\n      await this.generateTestsForNewCode();\r\n      \r\n      // Generate docs for new code files\r\n      await this.generateDocsForNewCode();\r\n      \r\n      const duration = Date.now() - startTime;\r\n      \r\n      // Record build preparation\r\n      this.memory.addSnapshot({\r\n        type: 'pre-build-complete"
    },
    {
      "id": "src\\core\\context\\ContextAutomation.js",
      "path": "src\\core\\context\\ContextAutomation.js",
      "type": "code",
      "size": 11512,
      "modified": "2025-07-21T04:48:21.290Z",
      "metadata": {
        "lines": 388,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": true,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:48:21.290Z",
        "keywords": [
          "ContextAutomation",
          "startTime",
          "dir",
          "files",
          "file",
          "duration",
          "scan",
          "items",
          "item",
          "fullPath"
        ]
      },
      "content": "/**\r\n * ContextAutomation - Automated context indexing and knowledge graph updates\r\n * Hooks into build process and file system monitoring\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport ContextIndexer from './ContextIndexer.js';\r\nimport KnowledgeGraph from './KnowledgeGraph.js';\r\nimport ContextMemory from './ContextMemory.js';\r\n\r\nexport class ContextAutomation {\r\n  constructor() {\r\n    this.contextIndexer = new ContextIndexer();\r\n    this.knowledgeGraph = new KnowledgeGraph();\r\n    this.contextMemory = new ContextMemory();\r\n    this.watchedDirectories = ['src', 'docs', 'tests', 'public'];\r\n    this.fileExtensions = ['.js', '.jsx', '.ts', '.tsx', '.md', '.html', '.css'];\r\n  }\r\n\r\n  // Auto-index the entire project\r\n  async indexProject() {\r\n    console.log('üîç Starting automated project indexing...');\r\n    \r\n    const startTime = Date.now();\r\n    let totalFiles = 0;\r\n    let indexedFiles = 0;\r\n\r\n    for (const dir of this.watchedDirectories) {\r\n      if (fs.existsSync(dir"
    },
    {
      "id": "src\\core\\context\\ContextIndexer.js",
      "path": "src\\core\\context\\ContextIndexer.js",
      "type": "code",
      "size": 1475,
      "modified": "2025-07-21T04:42:17.779Z",
      "metadata": {
        "lines": 56,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:42:17.779Z",
        "keywords": [
          "ContextIndexer",
          "existing",
          "class",
          "fs",
          "path"
        ]
      },
      "content": "/**\r\n * ContextIndexer - Project-wide context indexer for Rekursing\r\n * Scans code, docs, tests, and user stories, and builds a persistent index.\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport class ContextIndexer {\r\n  constructor(indexFile = 'context-index.json') {\r\n    this.indexFile = path.resolve(indexFile);\r\n    this.index = { code: [], docs: [], tests: [], stories: [] };\r\n    this.loadIndex();\r\n  }\r\n\r\n  // Load index from disk\r\n  loadIndex() {\r\n    if (fs.existsSync(this.indexFile)) {\r\n      this.index = JSON.parse(fs.readFileSync(this.indexFile, 'utf-8'));\r\n    }\r\n  }\r\n\r\n  // Save index to disk\r\n  saveIndex() {\r\n    fs.writeFileSync(this.indexFile, JSON.stringify(this.index, null, 2));\r\n  }\r\n\r\n  // Add or update a context item\r\n  addItem(type, item) {\r\n    if (!this.index[type]) this.index[type] = [];\r\n    const existing = this.index[type].find(i => i.id === item.id);\r\n    if (existing) {\r\n      Object.assign(existing, item);\r\n    } else {\r\n      this.index[typ"
    },
    {
      "id": "src\\core\\context\\ContextMemory.js",
      "path": "src\\core\\context\\ContextMemory.js",
      "type": "code",
      "size": 1126,
      "modified": "2025-07-21T04:42:28.529Z",
      "metadata": {
        "lines": 49,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:42:28.529Z",
        "keywords": [
          "ContextMemory",
          "class",
          "fs",
          "path"
        ]
      },
      "content": "/**\r\n * ContextMemory - Persistent memory for thought frames, decisions, and context snapshots.\r\n */\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport class ContextMemory {\r\n  constructor(memoryFile = 'context-memory.json') {\r\n    this.memoryFile = path.resolve(memoryFile);\r\n    this.memory = [];\r\n    this.load();\r\n  }\r\n\r\n  // Load memory from disk\r\n  load() {\r\n    if (fs.existsSync(this.memoryFile)) {\r\n      this.memory = JSON.parse(fs.readFileSync(this.memoryFile, 'utf-8'));\r\n    }\r\n  }\r\n\r\n  // Save memory to disk\r\n  save() {\r\n    fs.writeFileSync(this.memoryFile, JSON.stringify(this.memory, null, 2));\r\n  }\r\n\r\n  // Add a context snapshot\r\n  addSnapshot(snapshot) {\r\n    this.memory.push({ ...snapshot, timestamp: Date.now() });\r\n    this.save();\r\n  }\r\n\r\n  // Query by tag\r\n  queryByTag(tag) {\r\n    return this.memory.filter(s => s.tags && s.tags.includes(tag));\r\n  }\r\n\r\n  // Query by time range\r\n  queryByTime(start, end) {\r\n    return this.memory.filter(s => s.timestamp >= start"
    },
    {
      "id": "src\\core\\context\\KnowledgeGraph.js",
      "path": "src\\core\\context\\KnowledgeGraph.js",
      "type": "code",
      "size": 1252,
      "modified": "2025-07-21T04:42:23.235Z",
      "metadata": {
        "lines": 48,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:42:23.235Z",
        "keywords": [
          "KnowledgeGraph",
          "related",
          "class"
        ]
      },
      "content": "/**\r\n * KnowledgeGraph - Maintains relationships between features, code, docs, tests, and users.\r\n */\r\n\r\nexport class KnowledgeGraph {\r\n  constructor() {\r\n    this.nodes = new Map(); // id -> node\r\n    this.edges = []; // { from, to, type }\r\n  }\r\n\r\n  // Add a node (feature, code, doc, test, user, etc.)\r\n  addNode(id, data) {\r\n    this.nodes.set(id, { ...data, id });\r\n  }\r\n\r\n  // Add an edge (relationship)\r\n  addEdge(from, to, type) {\r\n    this.edges.push({ from, to, type });\r\n  }\r\n\r\n  // Get node by id\r\n  getNode(id) {\r\n    return this.nodes.get(id);\r\n  }\r\n\r\n  // Get all nodes of a type\r\n  getNodesByType(type) {\r\n    return Array.from(this.nodes.values()).filter(n => n.type === type);\r\n  }\r\n\r\n  // Get all edges of a type\r\n  getEdgesByType(type) {\r\n    return this.edges.filter(e => e.type === type);\r\n  }\r\n\r\n  // Get all relationships for a node\r\n  getRelationships(id) {\r\n    return this.edges.filter(e => e.from === id || e.to === id);\r\n  }\r\n\r\n  // Find related nodes\r\n  findRelated(id, t"
    },
    {
      "id": "src\\core\\relativity\\project-objectives.js",
      "path": "src\\core\\relativity\\project-objectives.js",
      "type": "code",
      "size": 5746,
      "modified": "2025-07-20T06:49:08.612Z",
      "metadata": {
        "lines": 189,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T06:49:08.612Z",
        "keywords": [
          "ProjectObjectives",
          "objective",
          "objectiveScore",
          "weightedScore",
          "relativityRating",
          "taskKeywords",
          "contextKeywords",
          "allKeywords",
          "criterion",
          "keyword"
        ]
      },
      "content": "/**\r\n * Project Objectives and Relativity Rating System\r\n * Manages project objectives and calculates task relativity ratings\r\n */\r\n\r\nexport class ProjectObjectives {\r\n  constructor() {\r\n    this.objectives = [\r\n      {\r\n        id: 'core_gameplay',\r\n        name: 'Core Gameplay Functionality',\r\n        priority: 10,\r\n        weight: 0.25,\r\n        criteria: ['multiplayer', 'combat', 'physics', 'planets']\r\n      },\r\n      {\r\n        id: 'ai_integration',\r\n        name: 'AI System Integration',\r\n        priority: 9,\r\n        weight: 0.20,\r\n        criteria: ['neural_networks', 'agent_coordination', 'llm_integration']\r\n      },\r\n      {\r\n        id: 'graphics_quality',\r\n        name: 'Crysis-Level Graphics',\r\n        priority: 8,\r\n        weight: 0.15,\r\n        criteria: ['pbr_materials', 'lighting', 'post_processing', 'performance']\r\n      },\r\n      {\r\n        id: 'procedural_generation',\r\n        name: 'Procedural Content Generation',\r\n        priority: 7,\r\n        weight: 0.15,\r\n     "
    },
    {
      "id": "src\\core\\services\\unifiedService.js",
      "path": "src\\core\\services\\unifiedService.js",
      "type": "code",
      "size": 10630,
      "modified": "2025-07-21T04:07:12.911Z",
      "metadata": {
        "lines": 394,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:07:12.911Z",
        "keywords": [
          "UnifiedService",
          "apiResponse",
          "lmResponse",
          "lmConnected",
          "response",
          "data",
          "prompt",
          "result",
          "eventListeners",
          "unifiedService"
        ]
      },
      "content": "/**\r\n * Unified Service - Single Service Layer for Rekursing\r\n * Consolidates AI, Game, and System services into one unified interface\r\n * Eliminates duplication and provides consistent API\r\n */\r\n\r\nclass UnifiedService {\r\n  constructor() {\r\n    this.baseUrl = 'http://localhost:3001/api';\r\n    this.lmStudioUrl = 'http://10.3.129.26:1234';\r\n    this.isConnected = false;\r\n    this.listeners = new Map();\r\n    this.currentPlayer = null;\r\n    \r\n    // Core systems\r\n    this.llmManager = null;\r\n    this.aiAgentSystem = null;\r\n    this.gameSystem = null;\r\n  }\r\n\r\n  // ===== CONNECTION MANAGEMENT =====\r\n  \r\n  async connect() {\r\n    try {\r\n      console.log('üîå Connecting to Rekursing services...');\r\n      \r\n      // Connect to main API\r\n      const apiResponse = await fetch(`${this.baseUrl}/health`);\r\n      if (!apiResponse.ok) {\r\n        throw new Error('Main API unavailable');\r\n      }\r\n      \r\n      // Connect to LM Studio\r\n      const lmResponse = await fetch(`${this.lmStudioUrl}/v1/models`)"
    },
    {
      "id": "src\\game\\mechanics\\FPSEnhancement.js",
      "path": "src\\game\\mechanics\\FPSEnhancement.js",
      "type": "code",
      "size": 66161,
      "modified": "2025-07-20T10:54:11.492Z",
      "metadata": {
        "lines": 1847,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-20T10:54:11.492Z",
        "keywords": [
          "EnhancedFPSSystem",
          "weapons",
          "weapon",
          "now",
          "projectiles",
          "hit",
          "damage",
          "index",
          "cameraDirection",
          "spread"
        ]
      },
      "content": "/**\r\n * Enhanced FPS System\r\n * Based on Browser FPS Template insights with relative rating integration\r\n */\r\n\r\nimport * as THREE from 'three';\r\nimport ChainOfThoughtMonitor from './chain-of-thought-monitor.js';\r\n\r\nexport class EnhancedFPSSystem {\r\n    constructor(game, config = {}) {\r\n        this.game = game;\r\n        this.config = {\r\n            enableThoughtMonitoring: true,\r\n            enableAdvancedWeapons: true,\r\n            enablePlayerMovement: true,\r\n            enablePhysics: true,\r\n            enableAI: true,\r\n            ...config\r\n        };\r\n\r\n        // Thought monitoring system\r\n        this.thoughtMonitor = this.config.enableThoughtMonitoring ? \r\n            new ChainOfThoughtMonitor({\r\n                enableRealTimeMonitoring: true,\r\n                enableGitIntegration: true,\r\n                enableAPIIntegration: true\r\n            }) : null;\r\n\r\n        // Enhanced weapon system\r\n        this.weapons = this.initializeWeapons();\r\n        this.currentWeapon = 'rifle'"
    },
    {
      "id": "src\\game\\mechanics\\MeanReversionRSI.js",
      "path": "src\\game\\mechanics\\MeanReversionRSI.js",
      "type": "code",
      "size": 11442,
      "modified": "2025-07-21T04:27:56.353Z",
      "metadata": {
        "lines": 353,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:27:56.353Z",
        "keywords": [
          "MeanReversionRSI",
          "change",
          "rs",
          "rsi",
          "sum",
          "sma",
          "slice",
          "variance",
          "standardDeviation",
          "bollinger"
        ]
      },
      "content": "/**\r\n * Mean Reversion RSI Strategy Implementation\r\n * Based on https://jesse.trade/strategies/meanreversionrsi\r\n * RSI-based mean reversion trading strategy for game mechanics\r\n */\r\n\r\nexport class MeanReversionRSI {\r\n  constructor(config = {}) {\r\n    this.config = {\r\n      rsiPeriod: config.rsiPeriod || 14,\r\n      rsiOverbought: config.rsiOverbought || 70,\r\n      rsiOversold: config.rsiOversold || 30,\r\n      smaPeriod: config.smaPeriod || 20,\r\n      bollingerPeriod: config.bollingerPeriod || 20,\r\n      bollingerStdDev: config.bollingerStdDev || 2,\r\n      riskRewardRatio: config.riskRewardRatio || 2,\r\n      ...config\r\n    };\r\n\r\n    this.prices = [];\r\n    this.rsiValues = [];\r\n    this.smaValues = [];\r\n    this.bollingerValues = [];\r\n    this.signals = [];\r\n    this.positions = [];\r\n  }\r\n\r\n  // Calculate RSI (Relative Strength Index)\r\n  calculateRSI(prices, period = 14) {\r\n    if (prices.length < period + 1) {\r\n      return null;\r\n    }\r\n\r\n    let gains = 0;\r\n    let losses = 0;\r\n\r\n    "
    },
    {
      "id": "src\\game\\physics\\PhysicsEngine.js",
      "path": "src\\game\\physics\\PhysicsEngine.js",
      "type": "code",
      "size": 17106,
      "modified": "2025-07-05T01:39:08.749Z",
      "metadata": {
        "lines": 505,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:39:08.749Z",
        "keywords": [
          "AdvancedPhysics",
          "groundMaterial",
          "playerMaterial",
          "bulletMaterial",
          "destructibleMaterial",
          "groundPlayerContact",
          "bulletDestructibleContact",
          "shape",
          "body",
          "size"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-ADVPHYS-01: Advanced Physics Module\r\nimport * as CANNON from 'cannon-es';\r\n\r\nclass AdvancedPhysics {\r\n    constructor() {\r\n        this.world = null;\r\n        this.bodies = new Map();\r\n        this.constraints = new Map();\r\n        this.destructibleObjects = new Map();\r\n        this.ragdolls = new Map();\r\n        this.vehicles = new Map();\r\n        this.fluids = new Map();\r\n        \r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        // Create physics world with advanced settings\r\n        this.world = new CANNON.World({\r\n            gravity: new CANNON.Vec3(0, -30, 0),\r\n            allowSleep: true,\r\n            solver: {\r\n                iterations: 10,\r\n                tolerance: 0.001\r\n            }\r\n        });\r\n\r\n        // Add contact material for realistic interactions\r\n        this.setupContactMaterials();\r\n        \r\n        // Add broadphase for better performance\r\n        this.world.broadphase = new C"
    },
    {
      "id": "src\\graphics\\effects\\artist-controls.js",
      "path": "src\\graphics\\effects\\artist-controls.js",
      "type": "code",
      "size": 27422,
      "modified": "2025-07-05T11:11:28.224Z",
      "metadata": {
        "lines": 948,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-05T11:11:28.224Z",
        "keywords": [
          "ArtistControlPanel",
          "TreePresetManager",
          "EditHistory",
          "CollaborationManager",
          "RealTimePreview",
          "style",
          "rangeInputs",
          "input",
          "valueSpan",
          "value"
        ]
      },
      "content": "// Artist Controls System - Real-time tree manipulation and editing\r\n// Implements artist-friendly controls, presets, and collaborative editing\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. ARTIST-FRIENDLY CONTROL INTERFACE\r\n// ============================================================================\r\n\r\nclass ArtistControlPanel {\r\n  constructor(container, treeGenerator) {\r\n    this.container = container;\r\n    this.treeGenerator = treeGenerator;\r\n    this.controls = new Map();\r\n    this.presets = new TreePresetManager();\r\n    this.history = new EditHistory();\r\n    this.collaboration = new CollaborationManager();\r\n    \r\n    this.createInterface();\r\n    this.bindEvents();\r\n  }\r\n\r\n  createInterface() {\r\n    this.container.innerHTML = `\r\n      <div class=\"artist-panel\">\r\n        <div class=\"panel-section\">\r\n          <h3>Tree Structure</h3>\r\n          <div class=\"control-group\">\r\n            <label"
    },
    {
      "id": "src\\graphics\\geometry\\adaptive-tessellation.js",
      "path": "src\\graphics\\geometry\\adaptive-tessellation.js",
      "type": "code",
      "size": 21632,
      "modified": "2025-07-05T11:22:00.812Z",
      "metadata": {
        "lines": 709,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T11:22:00.812Z",
        "keywords": [
          "AdaptiveTessellationManager",
          "AdaptiveLODManager",
          "InteractionRefiner",
          "PerformanceMonitor",
          "AdaptiveTessellationSystem",
          "factors",
          "screenError",
          "curvatureError",
          "distanceError",
          "interactionError"
        ]
      },
      "content": "// Adaptive Tessellation System - Implementation based on detailed specifications\r\n// Implements adaptive mesh tessellation with real-time LOD and interaction refinement\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. ADAPTIVE TESSELLATION MANAGER\r\n// ============================================================================\r\n\r\nclass AdaptiveTessellationManager {\r\n  constructor() {\r\n    this.tessellationFactors = new Map();\r\n    this.interactionPoints = new Map();\r\n    this.curvatureCache = new Map();\r\n    this.performanceMetrics = new PerformanceMonitor();\r\n    this.lodManager = new AdaptiveLODManager();\r\n    this.interactionRefiner = new InteractionRefiner();\r\n    \r\n    this.config = {\r\n      minTessellation: 4,\r\n      maxTessellation: 32,\r\n      baseTessellation: 8,\r\n      curvatureThreshold: 0.1,\r\n      distanceThreshold: 50,\r\n      screenSpaceThreshold: 10,\r\n      interactionRadius: 2.0,\r\n  "
    },
    {
      "id": "src\\graphics\\geometry\\autoregressive-mesh-generator.js",
      "path": "src\\graphics\\geometry\\autoregressive-mesh-generator.js",
      "type": "code",
      "size": 26091,
      "modified": "2025-07-05T11:19:33.325Z",
      "metadata": {
        "lines": 891,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T11:19:33.325Z",
        "keywords": [
          "AutoregressiveTransformer",
          "TokenEmbedding",
          "PositionalEncoding",
          "TransformerLayer",
          "MultiHeadAttention",
          "FeedForward",
          "LinearLayer",
          "LayerNormalization",
          "TreeSequenceEncoder",
          "MeshTokenization"
        ]
      },
      "content": "// Autoregressive Mesh Generator - Implementation based on detailed specifications\r\n// Implements autoregressive Transformer for mesh generation with tree-structured sequences\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. AUTOREGRESSIVE TRANSFORMER ARCHITECTURE\r\n// ============================================================================\r\n\r\nclass AutoregressiveTransformer {\r\n  constructor(config = {}) {\r\n    this.config = {\r\n      dModel: config.dModel || 512,\r\n      nHeads: config.nHeads || 8,\r\n      nLayers: config.nLayers || 6,\r\n      dFF: config.dFF || 2048,\r\n      maxSeqLength: config.maxSeqLength || 1024,\r\n      vocabSize: config.vocabSize || 1000,\r\n      dropout: config.dropout || 0.1,\r\n      ...config\r\n    };\r\n    \r\n    this.layers = [];\r\n    this.embedding = null;\r\n    this.positionalEncoding = null;\r\n    this.outputProjection = null;\r\n    \r\n    this.initializeLayers();\r\n  }\r\n\r\n  init"
    },
    {
      "id": "src\\graphics\\geometry\\branch.js",
      "path": "src\\graphics\\geometry\\branch.js",
      "type": "code",
      "size": 853,
      "modified": "2025-07-05T03:51:28.834Z",
      "metadata": {
        "lines": 33,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T03:51:28.834Z",
        "keywords": [
          "Branch",
          "class",
          "three"
        ]
      },
      "content": "// IDX-BRANCH-01: Modular Branch Class\r\n// See PROMPTS.md for biological realism prompt\r\nimport * as THREE from 'three';\r\n\r\nexport class Branch {\r\n  /**\r\n   * @param {THREE.Vector3} origin\r\n   * @param {THREE.Euler} orientation\r\n   * @param {number} length\r\n   * @param {number} radius\r\n   * @param {number} level\r\n   * @param {number} sectionCount\r\n   * @param {number} segmentCount\r\n   */\r\n  constructor(\r\n    origin = new THREE.Vector3(),\r\n    orientation = new THREE.Euler(),\r\n    length = 0,\r\n    radius = 0,\r\n    level = 0,\r\n    sectionCount = 0,\r\n    segmentCount = 0,\r\n  ) {\r\n    this.origin = origin.clone();\r\n    this.orientation = orientation.clone();\r\n    this.length = length;\r\n    this.radius = radius;\r\n    this.level = level;\r\n    this.sectionCount = sectionCount;\r\n    this.segmentCount = segmentCount;\r\n    this.children = [];\r\n  }\r\n} "
    },
    {
      "id": "src\\graphics\\geometry\\gpu-procedural-generator.js",
      "path": "src\\graphics\\geometry\\gpu-procedural-generator.js",
      "type": "code",
      "size": 31485,
      "modified": "2025-07-05T11:16:06.705Z",
      "metadata": {
        "lines": 1000,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T11:16:06.705Z",
        "keywords": [
          "GPUMeshNodeGraph",
          "ContinuousLODSystem",
          "GPUProceduralGenerator",
          "canvas",
          "branchVertexShader",
          "branchFragmentShader",
          "junctionVertexShader",
          "junctionFragmentShader",
          "gl",
          "vertexShader"
        ]
      },
      "content": "// GPU Procedural Generator - Implementation based on detailed specifications\r\n// Implements GPU-based real-time tree generation with mesh nodes and continuous LOD\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. GPU MESH NODE GRAPH SYSTEM\r\n// ============================================================================\r\n\r\nclass GPUMeshNodeGraph {\r\n  constructor() {\r\n    this.nodes = new Map();\r\n    this.connections = new Map();\r\n    this.gpuContext = null;\r\n    this.shaderPrograms = new Map();\r\n    this.nodeTypes = {\r\n      BRANCH_GENERATOR: 'branch_generator',\r\n      JUNCTION_BLENDER: 'junction_blender',\r\n      MATERIAL_APPLIER: 'material_applier',\r\n      LOD_CONTROLLER: 'lod_controller',\r\n      SEASONAL_MODIFIER: 'seasonal_modifier'\r\n    };\r\n    \r\n    this.initGPUContext();\r\n    this.createShaderPrograms();\r\n  }\r\n\r\n  initGPUContext() {\r\n    // Initialize WebGL context for GPU computation\r\n    cons"
    },
    {
      "id": "src\\graphics\\geometry\\MarchingCubes.js",
      "path": "src\\graphics\\geometry\\MarchingCubes.js",
      "type": "code",
      "size": 38037,
      "modified": "2025-07-05T09:48:01.460Z",
      "metadata": {
        "lines": 1177,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T09:48:01.460Z",
        "keywords": [
          "MarchingCubes",
          "lerp",
          "VIntX",
          "VIntY",
          "VIntZ",
          "compNorm",
          "polygonize",
          "posnormtriv",
          "geometry",
          "scope"
        ]
      },
      "content": "import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tColor,\n\tDynamicDrawUsage,\n\tMesh,\n\tSphere,\n\tVector3\n} from './three.module.js';\n\n/**\n * Port of http://webglsamples.org/blob/blob.html\n */\n\nclass MarchingCubes extends Mesh {\n\n\tconstructor( resolution, material, enableUvs = false, enableColors = false, maxPolyCount = 10000 ) {\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isMarchingCubes = true;\n\n\t\tconst scope = this;\n\n\t\t// temp buffers used in polygonize\n\n\t\tconst vlist = new Float32Array( 12 * 3 );\n\t\tconst nlist = new Float32Array( 12 * 3 );\n\t\tconst clist = new Float32Array( 12 * 3 );\n\n\t\tthis.enableUvs = enableUvs;\n\t\tthis.enableColors = enableColors;\n\n\t\t// functions have to be object properties\n\t\t// prototype functions kill performance\n\t\t// (tested and it was 4x slower !!!)\n\n\t\tthis.init = function ( resolution ) {\n\n\t\t\tthis.resolution = resolution;\n\n\t\t\t// parameters\n\n\t\t\tthis.isolation = 80.0;\n\n\t\t\t// size of field, 32 is pushing it in Javascript :)\n\n\t\t\tthis."
    },
    {
      "id": "src\\graphics\\geometry\\MeshGenerators.js",
      "path": "src\\graphics\\geometry\\MeshGenerators.js",
      "type": "code",
      "size": 32933,
      "modified": "2025-07-05T11:07:40.094Z",
      "metadata": {
        "lines": 1077,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-05T11:07:40.094Z",
        "keywords": [
          "AdaptiveTessellationSystem",
          "TreeLODManager",
          "InteractionTessellation",
          "NormalSmoother",
          "JunctionAnalyzer",
          "MetaballMeshGenerator",
          "TubeMeshGenerator",
          "MaterialAnimator",
          "SeasonalEffectSystem",
          "AdvancedMeshGenerator"
        ]
      },
      "content": "// Advanced Mesh Generator - Implementation based on detailed specifications\r\n// Implements adaptive tessellation, metaball/tube blending, and real-time materials\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. ADAPTIVE TESSELLATION SYSTEM\r\n// ============================================================================\r\n\r\nclass AdaptiveTessellationSystem {\r\n  constructor() {\r\n    this.lodManager = new TreeLODManager();\r\n    this.interactionTessellation = new InteractionTessellation();\r\n    this.smoothingSystem = new NormalSmoother();\r\n  }\r\n\r\n  computeScreenSpaceError(obj, camera, renderer) {\r\n    // Get object's bounding box in world space\r\n    const box = new THREE.Box3().setFromObject(obj);\r\n    const size = box.getSize(new THREE.Vector3());\r\n    const center = box.getCenter(new THREE.Vector3());\r\n    \r\n    // Transform center to camera space\r\n    const cameraSpace = center.clone().applyMatrix4(c"
    },
    {
      "id": "src\\graphics\\geometry\\SimpleTreeGenerator.js",
      "path": "src\\graphics\\geometry\\SimpleTreeGenerator.js",
      "type": "code",
      "size": 18267,
      "modified": "2025-07-05T09:55:03.646Z",
      "metadata": {
        "lines": 435,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T09:55:03.646Z",
        "keywords": [
          "TreeOptions",
          "Branch",
          "testStep1",
          "generateTreeRecursive",
          "sphericalDirection",
          "testStep2",
          "extractSegments",
          "testStep3",
          "generateMetaballMesh",
          "addMetaballMeshesRecursive"
        ]
      },
      "content": "// Simple, robust procedural tree generator (step-by-step rebuild)\r\n// Step 1: Minimal TreeOptions and Branch classes\r\n\r\nimport { MarchingCubes } from './MarchingCubes.js';\r\n\r\nexport class TreeOptions {\r\n    constructor({\r\n        levels = 2,\r\n        angle = 30,\r\n        length = 10,\r\n        children = 2,\r\n        radius = 1\r\n    } = {}) {\r\n        this.levels = levels;\r\n        this.angle = angle; // degrees\r\n        this.length = length;\r\n        this.children = children;\r\n        this.radius = radius;\r\n    }\r\n}\r\n\r\nexport class Branch {\r\n    constructor({\r\n        origin = { x: 0, y: 0, z: 0 },\r\n        direction = { x: 0, y: 1, z: 0 },\r\n        length = 10,\r\n        radius = 1,\r\n        level = 0\r\n    } = {}) {\r\n        this.origin = { ...origin };\r\n        this.direction = { ...direction };\r\n        this.length = length;\r\n        this.radius = radius;\r\n        this.level = level;\r\n        this.children = [];\r\n    }\r\n}\r\n\r\n// Step 1 Test/Validation\r\nexport function testStep1() {\r\n "
    },
    {
      "id": "src\\graphics\\geometry\\tree-options.js",
      "path": "src\\graphics\\geometry\\tree-options.js",
      "type": "code",
      "size": 1607,
      "modified": "2025-07-05T03:51:23.428Z",
      "metadata": {
        "lines": 55,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T03:51:23.428Z",
        "keywords": [
          "TreeOptions",
          "key",
          "class"
        ]
      },
      "content": "// IDX-TREEOPT-01: Modular Tree Options Object\r\n// See PROMPTS.md for biological realism prompt\r\n\r\nexport default class TreeOptions {\r\n  constructor() {\r\n    this.seed = 0;\r\n    this.type = 'broadleaf'; // or 'pine', etc.\r\n    // Bark parameters\r\n    this.bark = {\r\n      type: 'oak',\r\n      tint: 0xffffff,\r\n      flatShading: false,\r\n      textured: true,\r\n      textureScale: { x: 1, y: 1 },\r\n    };\r\n    // Branch parameters (per-level)\r\n    this.branch = {\r\n      levels: 3,\r\n      angle: { 1: 70, 2: 60, 3: 60 },\r\n      children: { 0: 7, 1: 7, 2: 5 },\r\n      force: { direction: { x: 0, y: 1, z: 0 }, strength: 0.01 },\r\n      gnarliness: { 0: 0.15, 1: 0.2, 2: 0.3, 3: 0.02 },\r\n      length: { 0: 20, 1: 20, 2: 10, 3: 1 },\r\n      radius: { 0: 1.5, 1: 0.7, 2: 0.7, 3: 0.7 },\r\n      sections: { 0: 12, 1: 10, 2: 8, 3: 6 },\r\n      segments: { 0: 8, 1: 6, 2: 4, 3: 3 },\r\n      start: { 1: 0.4, 2: 0.3, 3: 0.3 },\r\n      taper: { 0: 0.7, 1: 0.7, 2: 0.7, 3: 0.7 },\r\n      twist: { 0: 0, 1: 0, 2: 0, 3: "
    },
    {
      "id": "src\\graphics\\geometry\\TreeGenerators.js",
      "path": "src\\graphics\\geometry\\TreeGenerators.js",
      "type": "code",
      "size": 10819,
      "modified": "2025-07-05T01:59:29.181Z",
      "metadata": {
        "lines": 239,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:59:29.181Z",
        "keywords": [
          "ProceduralTreeGenerator",
          "response",
          "options",
          "treeObject",
          "trunkParams",
          "branchOptions",
          "worldOrigin",
          "childCount",
          "childLevel",
          "startRatio"
        ]
      },
      "content": "import * as THREE from 'three';\r\n\r\n// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-TREEGEN-OUTLINE: Realistic Tree Generator Improvement Plan\r\n//\r\n// IDX-TREEGEN-01: Increase Polygon Count and Smoothness\r\n//   - Use more radial segments for rings\r\n//   - Add more points along each branch for smoother curves\r\n//\r\n// IDX-TREEGEN-02: Improve Branch Junctions\r\n//   - Blend geometry at splits using mesh merging or implicit surfaces\r\n//   - Consider marching cubes or metaball techniques for seamless transitions\r\n//\r\n// IDX-TREEGEN-03: Add Bark and Leaf Texture\r\n//   - Apply procedural or image-based textures to bark\r\n//   - Add UVs to geometry\r\n//\r\n// IDX-TREEGEN-04: Enhance Foliage Distribution\r\n//   - Distribute leaves along branches, not just at tips\r\n//   - Use instanced geometry or billboards for dense foliage\r\n//\r\n// IDX-TREEGEN-05: Add More Hierarchical Branching\r\n//   - Support multiple levels of branching, down to twigs\r\n//\r\n// IDX-TREEGEN-06: Introduce Mor"
    },
    {
      "id": "src\\graphics\\geometry\\voxel-object-generator.js",
      "path": "src\\graphics\\geometry\\voxel-object-generator.js",
      "type": "code",
      "size": 3003,
      "modified": "2025-07-05T01:39:52.931Z",
      "metadata": {
        "lines": 81,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:39:52.931Z",
        "keywords": [
          "VoxelObjectGenerator",
          "effect",
          "point",
          "distance",
          "index",
          "value",
          "line",
          "closestPoint",
          "i",
          "j"
        ]
      },
      "content": "import * as THREE from 'three';\r\nimport { MarchingCubes } from 'three/examples/jsm/objects/MarchingCubes.js';\r\n\r\n// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-VOXELGEN-01: Voxel Object Generator Module\r\n\r\nclass VoxelObjectGenerator {\r\n    constructor(resolution) {\r\n        this.resolution = resolution;\r\n        this.data = new Float32Array(resolution * resolution * resolution);\r\n        this.size = new THREE.Vector3(1, 1, 1);\r\n        this.isolation = 0; \r\n    }\r\n\r\n    fill(value) {\r\n        this.data.fill(value);\r\n    }\r\n\r\n    generateMesh(material) {\r\n        const effect = new MarchingCubes(this.resolution, material, true, true, this.data.length);\r\n        effect.position.set(0, 0, 0);\r\n        effect.scale.set(this.size.x, this.size.y, this.size.z);\r\n        effect.isolation = this.isolation;\r\n        effect.field = this.data;\r\n\r\n        return effect;\r\n    }\r\n\r\n    getIndex(x, y, z) {\r\n        return Math.floor(x) + this.resolution * (Math.floor(y) + th"
    },
    {
      "id": "src\\graphics\\geometry\\VoxelGenerators.js",
      "path": "src\\graphics\\geometry\\VoxelGenerators.js",
      "type": "code",
      "size": 43061,
      "modified": "2025-07-14T11:08:46.912Z",
      "metadata": {
        "lines": 1081,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T11:08:46.912Z",
        "keywords": [
          "LSystemSkeleton",
          "SpaceColonization",
          "VoxelTree",
          "extractBranch",
          "logOutput",
          "TREE_TYPES",
          "endPos",
          "tropismEffect",
          "randomOffset",
          "state"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-TREEVOX-01: Procedural Tree Voxel Module\r\n// Advanced Procedural Voxel Tree Generator\r\n// Generates a 3D voxel matrix for trunk, branches, and leaves, then creates a mesh with smooth branch-to-trunk connections\r\n// IDX-TREEVOX-02: Voxel Matrix Generation\r\n// IDX-TREEHYBRID-PLAN: Hybrid L-System + Space Colonization Tree Generator\r\n// See PROMPTS.md for biological realism prompt\r\n//\r\n// ## Overview\r\n// This module will implement a procedural tree generator that combines:\r\n//   - L-Systems (Lindenmayer Systems) for the main trunk and primary branches (global structure)\r\n//   - Space Colonization Algorithm for secondary/tertiary branches and leaf distribution (local realism)\r\n//\r\n// ## Industry Standards & References\r\n// - L-Systems: Prusinkiewicz & Lindenmayer, \"The Algorithmic Beauty of Plants\" (1990)\r\n// - Space Colonization: Runions et al., \"Modeling Trees with a Space Colonization Algorithm\" (2007)\r\n// - Used i"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\ad-injection-service.js",
      "path": "src\\graphics\\gpu-streaming\\ad-injection-service.js",
      "type": "code",
      "size": 10102,
      "modified": "2025-07-20T06:58:29.579Z",
      "metadata": {
        "lines": 346,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T06:58:29.579Z",
        "keywords": [
          "AdInjectionService",
          "promptKeywords",
          "userPrefs",
          "relevantAds",
          "selectedAd",
          "adInjectedPrompt",
          "words",
          "keywordMatches",
          "promptLength",
          "maxAds"
        ]
      },
      "content": "/**\r\n * Ad Injection Service\r\n * Intelligently injects ads into LLM prompts and tracks revenue\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\n\r\nexport class AdInjectionService extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.adInventory = new Map();\r\n    this.userPreferences = new Map();\r\n    this.revenueTracking = {\r\n      daily: new Map(),\r\n      monthly: new Map(),\r\n      total: 0\r\n    };\r\n    \r\n    this.adCategories = {\r\n      technology: ['AI', 'software', 'gaming', 'computers'],\r\n      finance: ['investment', 'money', 'business', 'trading'],\r\n      health: ['fitness', 'nutrition', 'wellness', 'medical'],\r\n      entertainment: ['movies', 'music', 'games', 'streaming'],\r\n      education: ['learning', 'courses', 'books', 'training']\r\n    };\r\n    \r\n    this.initializeAdInventory();\r\n  }\r\n\r\n  initializeAdInventory() {\r\n    // Technology Ads\r\n    this.addAd({\r\n      id: 'tech_001',\r\n      category: 'technology',\r\n      content: 'üöÄ Try our new AI-powered development t"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\client\\gpu-streaming-client.js",
      "path": "src\\graphics\\gpu-streaming\\client\\gpu-streaming-client.js",
      "type": "code",
      "size": 9107,
      "modified": "2025-07-20T07:02:21.876Z",
      "metadata": {
        "lines": 313,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T07:02:21.876Z",
        "keywords": [
          "GPUStreamingClient",
          "GPUStreamingHelper",
          "data",
          "response",
          "requestData",
          "streamData",
          "streamId",
          "tokens",
          "onToken",
          "onComplete"
        ]
      },
      "content": "/**\r\n * GPU Streaming Client\r\n * Client application for accessing distributed GPU-powered LLM inference\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\n\r\nexport class GPUStreamingClient extends EventEmitter {\r\n  constructor(serverUrl = 'http://localhost:3002') {\r\n    super();\r\n    this.serverUrl = serverUrl;\r\n    this.socket = null;\r\n    this.userId = null;\r\n    this.isConnected = false;\r\n    this.availableModels = [];\r\n    this.systemStatus = null;\r\n    \r\n    this.connect();\r\n  }\r\n\r\n  async connect() {\r\n    try {\r\n      // Connect to WebSocket\r\n      this.socket = new WebSocket(`ws://${this.serverUrl.replace('http', 'ws')}`);\r\n      \r\n      this.socket.onopen = () => {\r\n        this.isConnected = true;\r\n        console.log('üîå Connected to GPU Streaming Service');\r\n        this.emit('connected');\r\n        this.fetchAvailableModels();\r\n        this.fetchSystemStatus();\r\n      };\r\n      \r\n      this.socket.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        t"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\gpu-provider.js",
      "path": "src\\graphics\\gpu-streaming\\gpu-provider.js",
      "type": "code",
      "size": 6837,
      "modified": "2025-07-20T07:00:00.737Z",
      "metadata": {
        "lines": 266,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T07:00:00.737Z",
        "keywords": [
          "GPUProvider",
          "streamDuration",
          "now",
          "uptimeMs",
          "totalUptimeMs",
          "efficiency",
          "uptime",
          "modelRequirements",
          "baseRequirements",
          "base"
        ]
      },
      "content": "/**\r\n * GPU Provider\r\n * Represents an individual GPU provider in the distributed network\r\n */\r\n\r\nexport class GPUProvider {\r\n  constructor(id, config) {\r\n    this.id = id;\r\n    this.gpuInfo = config.gpuInfo;\r\n    this.capabilities = config.capabilities;\r\n    this.pricing = config.pricing;\r\n    this.status = config.status || 'idle';\r\n    this.registeredAt = config.registeredAt || new Date();\r\n    this.totalEarnings = config.totalEarnings || 0;\r\n    this.totalInference = config.totalInference || 0;\r\n    \r\n    // Performance tracking\r\n    this.performance = {\r\n      averageLatency: 0,\r\n      totalRequests: 0,\r\n      successRate: 1.0,\r\n      uptime: 100,\r\n      lastHeartbeat: new Date()\r\n    };\r\n    \r\n    // Current stream info\r\n    this.currentStream = null;\r\n    this.streamStartTime = null;\r\n    \r\n    // GPU monitoring\r\n    this.gpuMetrics = {\r\n      temperature: 0,\r\n      memoryUsage: 0,\r\n      utilization: 0,\r\n      powerDraw: 0\r\n    };\r\n  }\r\n\r\n  updateStatus(newStatus) {\r\n    this.st"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\gpu-streaming-app.js",
      "path": "src\\graphics\\gpu-streaming\\gpu-streaming-app.js",
      "type": "code",
      "size": 15431,
      "modified": "2025-07-20T08:16:57.709Z",
      "metadata": {
        "lines": 442,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T08:16:57.709Z",
        "keywords": [
          "GPUStreamingApp",
          "userId",
          "result",
          "plugins",
          "plugin",
          "connection",
          "earnings",
          "stats",
          "providerId",
          "streamId"
        ]
      },
      "content": "/**\r\n * GPU Streaming Application\r\n * Allows users to stream their GPU power for distributed LLM inference\r\n * with ad injection and monetization capabilities\r\n */\r\n\r\nimport express from 'express';\r\nimport { Server } from 'socket.io';\r\nimport http from 'http';\r\nimport cors from 'cors';\r\nimport { GPUStreamingManager } from './gpu-streaming-manager.js';\r\nimport { AdInjectionService } from './ad-injection-service.js';\r\nimport { LLMInferenceEngine } from './llm-inference-engine.js';\r\nimport { PaymentProcessor } from './payment-processor.js';\r\nimport { StreamQualityManager } from './stream-quality-manager.js';\r\nimport { UserPluginManager } from './user-plugin-manager.js';\r\nimport { LMStudioBridge } from './lm-studio-bridge.js';\r\n\r\nclass GPUStreamingApp {\r\n  constructor() {\r\n    this.app = express();\r\n    this.server = http.createServer(this.app);\r\n    this.io = new Server(this.server, {\r\n      cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"]\r\n      }\r\n    });\r\n    \r\n    this."
    },
    {
      "id": "src\\graphics\\gpu-streaming\\gpu-streaming-manager.js",
      "path": "src\\graphics\\gpu-streaming\\gpu-streaming-manager.js",
      "type": "code",
      "size": 8226,
      "modified": "2025-07-20T06:57:38.797Z",
      "metadata": {
        "lines": 263,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T06:57:38.797Z",
        "keywords": [
          "GPUStreamingManager",
          "providerId",
          "provider",
          "streamId",
          "stream",
          "duration",
          "tokensPerSecond",
          "earnings",
          "availableProviders",
          "scoredProviders"
        ]
      },
      "content": "/**\r\n * GPU Streaming Manager\r\n * Manages distributed GPU providers and load balancing for LLM inference\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\nimport { GPUProvider } from './gpu-provider.js';\r\nimport { StreamQualityManager } from './stream-quality-manager.js';\r\n\r\nexport class GPUStreamingManager extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.providers = new Map();\r\n    this.activeStreams = new Map();\r\n    this.qualityManager = new StreamQualityManager();\r\n    this.nextProviderId = 1;\r\n    this.nextStreamId = 1;\r\n    \r\n    // Performance tracking\r\n    this.usageStats = {\r\n      totalInference: 0,\r\n      totalTokens: 0,\r\n      totalRevenue: 0,\r\n      averageLatency: 0\r\n    };\r\n  }\r\n\r\n  async registerProvider(gpuInfo, capabilities, pricing) {\r\n    const providerId = `provider_${this.nextProviderId++}`;\r\n    \r\n    const provider = new GPUProvider(providerId, {\r\n      gpuInfo,\r\n      capabilities,\r\n      pricing,\r\n      status: 'idle',\r\n      registeredAt: new D"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\llm-inference-engine.js",
      "path": "src\\graphics\\gpu-streaming\\llm-inference-engine.js",
      "type": "code",
      "size": 9287,
      "modified": "2025-07-20T06:59:26.016Z",
      "metadata": {
        "lines": 330,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T06:59:26.016Z",
        "keywords": [
          "LLMInferenceEngine",
          "startTime",
          "config",
          "result",
          "endTime",
          "latency",
          "cost",
          "adRevenue",
          "streamId",
          "stream"
        ]
      },
      "content": "/**\r\n * LLM Inference Engine\r\n * Handles distributed LLM inference across GPU providers with streaming\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\n\r\nexport class LLMInferenceEngine extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.activeStreams = new Map();\r\n    this.modelConfigs = new Map();\r\n    this.performanceMetrics = new Map();\r\n    \r\n    this.initializeModelConfigs();\r\n  }\r\n\r\n  initializeModelConfigs() {\r\n    // Popular LLM models with their configurations\r\n    this.modelConfigs.set('llama-3-70b', {\r\n      maxTokens: 4096,\r\n      temperature: 0.7,\r\n      topP: 0.9,\r\n      baseCost: 0.0001, // per token\r\n      minVRAM: 24, // GB\r\n      supportedProviders: ['nvidia', 'amd']\r\n    });\r\n\r\n    this.modelConfigs.set('gpt-4', {\r\n      maxTokens: 8192,\r\n      temperature: 0.7,\r\n      topP: 0.9,\r\n      baseCost: 0.0003,\r\n      minVRAM: 16,\r\n      supportedProviders: ['nvidia', 'amd']\r\n    });\r\n\r\n    this.modelConfigs.set('claude-3-opus', {\r\n      maxTokens: 200000,\r\n  "
    },
    {
      "id": "src\\graphics\\gpu-streaming\\lm-studio-bridge.js",
      "path": "src\\graphics\\gpu-streaming\\lm-studio-bridge.js",
      "type": "code",
      "size": 9105,
      "modified": "2025-07-20T08:18:04.246Z",
      "metadata": {
        "lines": 346,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T08:18:04.246Z",
        "keywords": [
          "LMStudioBridge",
          "connection",
          "response",
          "data",
          "capabilities",
          "model",
          "modelName",
          "availableConnections",
          "requestBody",
          "status"
        ]
      },
      "content": "/**\r\n * LM Studio Bridge\r\n * Handles connection and communication with LM Studio instances\r\n */\r\n\r\nimport fetch from 'node-fetch';\r\n\r\nexport class LMStudioBridge {\r\n  constructor() {\r\n    this.connections = new Map();\r\n    this.defaultUrl = 'http://10.3.129.26:1234';\r\n    this.healthCheckInterval = 30000; // 30 seconds\r\n    this.initializeConnections();\r\n  }\r\n\r\n  /**\r\n   * Initialize connections to LM Studio instances\r\n   */\r\n  async initializeConnections() {\r\n    try {\r\n      // Connect to default LM Studio instance\r\n      await this.addConnection('default', this.defaultUrl);\r\n      \r\n      // Start health check\r\n      this.startHealthCheck();\r\n      \r\n      console.log('üîó LM Studio Bridge initialized');\r\n    } catch (error) {\r\n      console.error('Failed to initialize LM Studio Bridge:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a new LM Studio connection\r\n   */\r\n  async addConnection(name, url) {\r\n    try {\r\n      const connection = {\r\n        name,\r\n        url,\r\n        status: 'con"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\lm-studio-detector.js",
      "path": "src\\graphics\\gpu-streaming\\lm-studio-detector.js",
      "type": "code",
      "size": 7035,
      "modified": "2025-07-20T07:17:31.406Z",
      "metadata": {
        "lines": 228,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T07:17:31.406Z",
        "keywords": [
          "LMStudioDetector",
          "instance",
          "isAvailable",
          "instanceInfo",
          "instanceKey",
          "networkRanges",
          "range",
          "baseIPParts",
          "maskBits",
          "networkAddress"
        ]
      },
      "content": "/**\r\n * LM Studio Detector\r\n * Discovers and connects to LM Studio instances on the network\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\n\r\nexport class LMStudioDetector extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.discoveredInstances = new Map();\r\n    this.knownInstances = [\r\n      { host: '10.3.129.26', port: 1234, name: 'User LM Studio' },\r\n      { host: 'localhost', port: 1234, name: 'Local LM Studio' },\r\n      { host: '127.0.0.1', port: 1234, name: 'Localhost LM Studio' }\r\n    ];\r\n    this.scanning = false;\r\n  }\r\n\r\n  async scanNetwork() {\r\n    if (this.scanning) return;\r\n    \r\n    this.scanning = true;\r\n    console.log('üîç Scanning for LM Studio instances...');\r\n    \r\n    try {\r\n      // Scan known instances first\r\n      await this.scanKnownInstances();\r\n      \r\n      // Scan common network ranges\r\n      await this.scanNetworkRanges();\r\n      \r\n      console.log(`‚úÖ Network scan complete. Found ${this.discoveredInstances.size} LM Studio instances`);\r\n      th"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\payment-processor.js",
      "path": "src\\graphics\\gpu-streaming\\payment-processor.js",
      "type": "code",
      "size": 10026,
      "modified": "2025-07-20T07:00:45.566Z",
      "metadata": {
        "lines": 312,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T07:00:45.566Z",
        "keywords": [
          "PaymentProcessor",
          "currentBalance",
          "newBalance",
          "transactionId",
          "transaction",
          "methodConfig",
          "processingFee",
          "netAmount",
          "balance",
          "paymentMethod"
        ]
      },
      "content": "/**\r\n * Payment Processor\r\n * Handles earnings, withdrawals, and payment processing for GPU providers\r\n */\r\n\r\nimport { EventEmitter } from 'events';\r\n\r\nexport class PaymentProcessor extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n    this.balances = new Map();\r\n    this.transactions = new Map();\r\n    this.paymentMethods = new Map();\r\n    this.nextTransactionId = 1;\r\n    \r\n    // Payment processing settings\r\n    this.settings = {\r\n      minimumWithdrawal: 10.00, // $10 minimum\r\n      processingFee: 0.029, // 2.9% processing fee\r\n      processingFeeFixed: 0.30, // $0.30 fixed fee\r\n      autoPayoutThreshold: 50.00, // Auto-payout at $50\r\n      payoutSchedule: 'weekly' // weekly, bi-weekly, monthly\r\n    };\r\n    \r\n    // Supported payment methods\r\n    this.supportedMethods = {\r\n      paypal: { fee: 0.029, fixedFee: 0.30, minAmount: 1.00 },\r\n      stripe: { fee: 0.029, fixedFee: 0.30, minAmount: 0.50 },\r\n      bank_transfer: { fee: 0.01, fixedFee: 0.00, minAmount: 10.00 },\r\n      cr"
    },
    {
      "id": "src\\graphics\\gpu-streaming\\stream-quality-manager.js",
      "path": "src\\graphics\\gpu-streaming\\stream-quality-manager.js",
      "type": "code",
      "size": 7729,
      "modified": "2025-07-20T07:01:44.821Z",
      "metadata": {
        "lines": 246,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T07:01:44.821Z",
        "keywords": [
          "StreamQualityManager",
          "level",
          "multiplier",
          "modelRequirements",
          "providerMemory",
          "suitableQualities",
          "requiredMemory",
          "latencySuitableQualities",
          "estimatedLatency",
          "baseRequirements"
        ]
      },
      "content": "/**\r\n * Stream Quality Manager\r\n * Manages different quality levels and their impact on performance and pricing\r\n */\r\n\r\nexport class StreamQualityManager {\r\n  constructor() {\r\n    this.qualityLevels = {\r\n      low: {\r\n        name: 'Low Quality',\r\n        description: 'Fast inference with basic quality',\r\n        multiplier: 0.7,\r\n        latencyMultiplier: 0.5,\r\n        memoryMultiplier: 0.7,\r\n        costMultiplier: 0.8,\r\n        maxTokens: 2048,\r\n        temperature: 0.9,\r\n        topP: 0.95\r\n      },\r\n      standard: {\r\n        name: 'Standard Quality',\r\n        description: 'Balanced performance and quality',\r\n        multiplier: 1.0,\r\n        latencyMultiplier: 1.0,\r\n        memoryMultiplier: 1.0,\r\n        costMultiplier: 1.0,\r\n        maxTokens: 4096,\r\n        temperature: 0.7,\r\n        topP: 0.9\r\n      },\r\n      high: {\r\n        name: 'High Quality',\r\n        description: 'Enhanced quality with moderate performance impact',\r\n        multiplier: 1.3,\r\n        latencyMultiplier: "
    },
    {
      "id": "src\\graphics\\gpu-streaming\\user-plugin-manager.js",
      "path": "src\\graphics\\gpu-streaming\\user-plugin-manager.js",
      "type": "code",
      "size": 7642,
      "modified": "2025-07-20T08:13:54.441Z",
      "metadata": {
        "lines": 258,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-20T08:13:54.441Z",
        "keywords": [
          "UserPluginManager",
          "pluginId",
          "plugin",
          "provider",
          "connection",
          "userPlugins",
          "connected",
          "availablePlugins",
          "compatiblePlugins",
          "selectedPlugin"
        ]
      },
      "content": "/**\r\n * User Plugin Manager\r\n * Manages user-installed plugins that allow rekursing.com to access their GPU resources\r\n */\r\n\r\nimport crypto from 'crypto';\r\nimport { GPUProvider } from './gpu-provider.js';\r\n\r\nexport class UserPluginManager {\r\n  constructor() {\r\n    this.installedPlugins = new Map();\r\n    this.pluginConnections = new Map();\r\n    this.pluginStats = new Map();\r\n  }\r\n\r\n  /**\r\n   * Register a new user plugin installation\r\n   */\r\n  async registerPlugin(userId, pluginData) {\r\n    const pluginId = crypto.randomUUID();\r\n    const plugin = {\r\n      id: pluginId,\r\n      userId,\r\n      name: pluginData.name || 'GPU Streaming Plugin',\r\n      version: pluginData.version || '1.0.0',\r\n      gpuInfo: pluginData.gpuInfo,\r\n      lmStudioUrl: pluginData.lmStudioUrl,\r\n      capabilities: pluginData.capabilities || [],\r\n      pricing: pluginData.pricing || 0.0001,\r\n      status: 'installed',\r\n      installedAt: new Date(),\r\n      lastSeen: new Date(),\r\n      connectionToken: crypto.randomByt"
    },
    {
      "id": "src\\graphics\\materials\\MaterialSystem.js",
      "path": "src\\graphics\\materials\\MaterialSystem.js",
      "type": "code",
      "size": 23583,
      "modified": "2025-07-14T10:53:41.817Z",
      "metadata": {
        "lines": 765,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T10:53:41.817Z",
        "keywords": [
          "MaterialAnimator",
          "SeasonalEffectSystem",
          "DynamicTextureGenerator",
          "RealTimeMaterialSystem",
          "seasonColors",
          "trunkColor",
          "branchColor",
          "leafColor",
          "transitionTime",
          "progress"
        ]
      },
      "content": "// Real-Time Material System - Implementation based on detailed specifications\r\n// Implements real-time material updates, seasonal effects, and dynamic texture generation\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. REAL-TIME MATERIAL ANIMATOR\r\n// ============================================================================\r\n\r\nclass MaterialAnimator {\r\n  constructor() {\r\n    this.animations = new Map();\r\n    this.time = 0;\r\n    this.seasonalEffects = new SeasonalEffectSystem();\r\n    this.textureGenerator = new DynamicTextureGenerator();\r\n    this.materialCache = new Map();\r\n    \r\n    this.config = {\r\n      animationSpeed: 1.0,\r\n      transitionDuration: 2.0,\r\n      enableSeasonalEffects: true,\r\n      enableDynamicTextures: true,\r\n      enableWeatherEffects: true\r\n    };\r\n  }\r\n\r\n  animateMaterial(material, season, time, weather = null) {\r\n    this.time = time;\r\n    \r\n    // Get seasonal colors\r\n  "
    },
    {
      "id": "src\\graphics\\renderers\\AdvancedRenderer.js",
      "path": "src\\graphics\\renderers\\AdvancedRenderer.js",
      "type": "code",
      "size": 26610,
      "modified": "2025-07-05T01:39:13.708Z",
      "metadata": {
        "lines": 679,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:39:13.708Z",
        "keywords": [
          "AdvancedRenderer",
          "renderPass",
          "ssaoPass",
          "bloomPass",
          "fxaaPass",
          "outputPass",
          "lightProbe",
          "dirLight",
          "light",
          "particleCount"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-ADVREND-01: Advanced Renderer Module\r\nimport * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js';\r\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js';\r\nimport { OutputPass } from 'three/examples/jsm/postprocessing/OutputPass.js';\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js';\r\n\r\nclass AdvancedRenderer {\r\n    constructor(scene, camera, renderer) {\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this.renderer = renderer;\r\n        this.composer = null;\r\n        this.postProcessing = {};\r\n        this.shaders = {};\r\n        this.particleSystems = [];"
    },
    {
      "id": "src\\graphics\\renderers\\CrysisEnhancement.js",
      "path": "src\\graphics\\renderers\\CrysisEnhancement.js",
      "type": "code",
      "size": 35513,
      "modified": "2025-07-14T11:20:54.488Z",
      "metadata": {
        "lines": 1023,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T11:20:54.488Z",
        "keywords": [
          "PBRMaterialSystem",
          "DynamicLightingSystem",
          "PostProcessingSystem",
          "AdvancedShaderSystem",
          "CrysisEnhancementSystem",
          "envMap",
          "size",
          "canvas",
          "ctx",
          "gradient"
        ]
      },
      "content": "// Crysis-Level Enhancement System\r\n// Implements advanced graphics features comparable to Crysis 1 (2007)\r\n// Features: PBR materials, dynamic lighting, post-processing, advanced shaders\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. PBR MATERIAL SYSTEM\r\n// ============================================================================\r\n\r\nclass PBRMaterialSystem {\r\n    constructor() {\r\n        this.materials = new Map();\r\n        this.textureLoader = new THREE.TextureLoader();\r\n        this.cubeTextureLoader = new THREE.CubeTextureLoader();\r\n        this.irradianceMap = null;\r\n        this.radianceMap = null;\r\n        this.brdfLUT = null;\r\n        \r\n        this.initializePBR();\r\n    }\r\n\r\n    async initializePBR() {\r\n        // Load environment maps for PBR\r\n        await this.loadEnvironmentMaps();\r\n        await this.generateBRDFLUT();\r\n    }\r\n\r\n    async loadEnvironmentMaps() {\r\n        // Create"
    },
    {
      "id": "src\\graphics\\renderers\\three.module.js",
      "path": "src\\graphics\\renderers\\three.module.js",
      "type": "code",
      "size": 1178963,
      "modified": "2025-07-05T03:23:29.616Z",
      "metadata": {
        "lines": 50442,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": true,
        "hasDocs": true,
        "lastModified": "2025-07-05T03:23:29.616Z",
        "keywords": [
          "EventDispatcher",
          "Vector2",
          "Matrix3",
          "Quaternion",
          "Vector3",
          "ImageUtils",
          "Source",
          "Texture",
          "Vector4",
          "WebGLRenderTarget"
        ]
      },
      "content": "/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '150';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor "
    },
    {
      "id": "src\\main.jsx",
      "path": "src\\main.jsx",
      "type": "code",
      "size": 7077,
      "modified": "2025-07-21T04:18:07.059Z",
      "metadata": {
        "lines": 236,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:18:07.059Z",
        "keywords": [
          "initializeApp",
          "setupPerformanceMonitoring",
          "showErrorState",
          "registerServiceWorker",
          "container",
          "root",
          "memory",
          "observer",
          "entry",
          "registration"
        ]
      },
      "content": "/**\r\n * Rekursing - Unified Application Entry Point\r\n * Recursive AI Gaming System\r\n * \r\n * This is the single, unified entry point for the Rekursing application.\r\n * It integrates React UI, AI systems, and game components efficiently.\r\n */\r\n\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './ui/App.jsx';\r\nimport './ui/styles/global.css';\r\n\r\n// Import core systems\r\nimport { LLMManager } from './ai/llm/LLMManager.js';\r\nimport AIAgentManager from './ai/agents/AIAgentManager.js';\r\n\r\n// Import configuration\r\nimport { APP_CONFIG, FEATURE_FLAGS } from './core/config/app.config.js';\r\n\r\n// Global application state\r\nwindow.RekursingApp = {\r\n  // Core systems\r\n  llmManager: null,\r\n  aiAgentSystem: null,\r\n  gameSystem: null,\r\n  \r\n  // UI state\r\n  currentView: 'home',\r\n  isLoading: true,\r\n  \r\n  // Configuration\r\n  config: APP_CONFIG,\r\n  features: FEATURE_FLAGS,\r\n  \r\n  // Utility methods\r\n  getSystemStat"
    },
    {
      "id": "src\\ui\\App.jsx",
      "path": "src\\ui\\App.jsx",
      "type": "code",
      "size": 6046,
      "modified": "2025-07-21T04:51:02.220Z",
      "metadata": {
        "lines": 173,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:51:02.220Z",
        "keywords": [
          "App",
          "initializeApp",
          "connection",
          "stats",
          "handleRekursingReady",
          "setupRealtimeUpdates",
          "statsInterval",
          "healthInterval",
          "healthy",
          "appContext"
        ]
      },
      "content": "import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport NavBar from './components/NavBar';\r\nimport Home from './pages/Home';\r\nimport Play from './pages/Play';\r\nimport AIAgentDashboard from './pages/AIAgentDashboard';\r\nimport GenLab from './pages/GenLab';\r\nimport Docs from './pages/Docs';\r\nimport Tools from './pages/Tools';\r\nimport Settings from './pages/Settings';\r\nimport SocialAI from './pages/SocialAI';\r\nimport ContextDashboard from './pages/ContextDashboard';\r\nimport unifiedService from '../core/services/unifiedService';\r\nimport './styles/global.css';\r\n\r\nexport default function App() {\r\n  const [systemStatus, setSystemStatus] = useState('initializing');\r\n  const [connectionStatus, setConnectionStatus] = useState({});\r\n  const [systemStats, setSystemStats] = useState({});\r\n\r\n  // Initialize the application\r\n  useEffect(() => {\r\n    const initializeApp = async () => {\r\n      try {\r\n        setSys"
    },
    {
      "id": "src\\ui\\components\\NavBar.jsx",
      "path": "src\\ui\\components\\NavBar.jsx",
      "type": "code",
      "size": 1754,
      "modified": "2025-07-21T04:51:24.631Z",
      "metadata": {
        "lines": 52,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:51:24.631Z",
        "keywords": [
          "NavBar",
          "location",
          "navItems",
          "function",
          "react",
          "react-router-dom"
        ]
      },
      "content": "import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nexport default function NavBar() {\r\n  const location = useLocation();\r\n\r\n  const navItems = [\r\n    { path: '/', label: 'Home', icon: 'üè†' },\r\n    { path: '/play', label: 'Play', icon: 'üéÆ' },\r\n    { path: '/ai-dashboard', label: 'AI Agents', icon: 'ü§ñ' },\r\n    { path: '/genlab', label: 'GenLab', icon: 'üß¨' },\r\n    { path: '/social-ai', label: 'Social AI', icon: 'ÔøΩÔøΩ' },\r\n    { path: '/context', label: 'Context', icon: 'üß†' },\r\n    { path: '/tools', label: 'Tools', icon: 'üõ†Ô∏è' },\r\n    { path: '/docs', label: 'Docs', icon: 'üìö' },\r\n    { path: '/settings', label: 'Settings', icon: '‚öôÔ∏è' }\r\n  ];\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-container\">\r\n        <div className=\"navbar-brand\">\r\n          <Link to=\"/\" className=\"brand-link\">\r\n            <span className=\"brand-icon\">üåå</span>\r\n            <span className=\"brand-text\">Rekursing</span>\r\n       "
    },
    {
      "id": "src\\ui\\pages\\AIAgentDashboard.jsx",
      "path": "src\\ui\\pages\\AIAgentDashboard.jsx",
      "type": "code",
      "size": 262,
      "modified": "2025-07-21T04:36:42.576Z",
      "metadata": {
        "lines": 10,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:36:42.576Z",
        "keywords": [
          "AIAgentDashboard",
          "function",
          "react"
        ]
      },
      "content": "import React from 'react';\r\n\r\nexport default function AIAgentDashboard({ appContext }) {\r\n  return (\r\n    <div className=\"ai-dashboard-page\">\r\n      <h1>ü§ñ AI Agent Dashboard</h1>\r\n      <p>AI agent management interface coming soon...</p>\r\n    </div>\r\n  );\r\n} "
    },
    {
      "id": "src\\ui\\pages\\ContextDashboard.jsx",
      "path": "src\\ui\\pages\\ContextDashboard.jsx",
      "type": "code",
      "size": 11410,
      "modified": "2025-07-21T04:49:11.435Z",
      "metadata": {
        "lines": 302,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:49:11.435Z",
        "keywords": [
          "ContextDashboard",
          "loadContextStats",
          "stats",
          "handleSearch",
          "results",
          "renderOverview",
          "renderSearch",
          "renderKnowledgeGraph",
          "renderMemory",
          "react"
        ]
      },
      "content": "import React, { useState, useEffect } from 'react';\r\nimport './ContextDashboard.css';\r\n\r\nconst ContextDashboard = () => {\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n  const [contextStats, setContextStats] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Load context statistics\r\n    loadContextStats();\r\n  }, []);\r\n\r\n  const loadContextStats = async () => {\r\n    try {\r\n      // This would be loaded from the actual context system\r\n      const stats = {\r\n        totalFiles: 156,\r\n        totalCodeItems: 89,\r\n        totalDocsItems: 34,\r\n        totalTestsItems: 33,\r\n        totalMemoryItems: 247,\r\n        totalGraphNodes: 189,\r\n        totalGraphEdges: 312,\r\n        recentActivity: [\r\n          { type: 'file-indexed', file: 'src/core/context/ContextIndexer.js', timestamp: Date.now() - 1000 },\r\n          {"
    },
    {
      "id": "src\\ui\\pages\\Docs.jsx",
      "path": "src\\ui\\pages\\Docs.jsx",
      "type": "code",
      "size": 221,
      "modified": "2025-07-21T04:36:56.890Z",
      "metadata": {
        "lines": 10,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:36:56.890Z",
        "keywords": [
          "Docs",
          "function",
          "react"
        ]
      },
      "content": "import React from 'react';\r\n\r\nexport default function Docs({ appContext }) {\r\n  return (\r\n    <div className=\"docs-page\">\r\n      <h1>üìö Documentation</h1>\r\n      <p>Documentation coming soon...</p>\r\n    </div>\r\n  );\r\n} "
    },
    {
      "id": "src\\ui\\pages\\GenLab.jsx",
      "path": "src\\ui\\pages\\GenLab.jsx",
      "type": "code",
      "size": 236,
      "modified": "2025-07-21T04:36:50.008Z",
      "metadata": {
        "lines": 10,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:36:50.008Z",
        "keywords": [
          "GenLab",
          "function",
          "react"
        ]
      },
      "content": "import React from 'react';\r\n\r\nexport default function GenLab({ appContext }) {\r\n  return (\r\n    <div className=\"genlab-page\">\r\n      <h1>üß¨ GenLab</h1>\r\n      <p>Generation laboratory interface coming soon...</p>\r\n    </div>\r\n  );\r\n} "
    },
    {
      "id": "src\\ui\\pages\\Home.jsx",
      "path": "src\\ui\\pages\\Home.jsx",
      "type": "code",
      "size": 923,
      "modified": "2025-07-21T04:36:21.288Z",
      "metadata": {
        "lines": 26,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:36:21.288Z",
        "keywords": [
          "Home",
          "function",
          "react"
        ]
      },
      "content": "import React from 'react';\r\n\r\nexport default function Home({ appContext }) {\r\n  return (\r\n    <div className=\"home-page\">\r\n      <div className=\"hero-section\">\r\n        <h1>üåå Welcome to Rekursing</h1>\r\n        <p>Recursive AI Gaming System</p>\r\n        <div className=\"hero-stats\">\r\n          <div className=\"stat\">\r\n            <span className=\"stat-number\">{appContext?.getAgentCount() || 0}</span>\r\n            <span className=\"stat-label\">AI Agents</span>\r\n          </div>\r\n          <div className=\"stat\">\r\n            <span className=\"stat-number\">{appContext?.getPlayerCount() || 0}</span>\r\n            <span className=\"stat-label\">Players</span>\r\n          </div>\r\n          <div className=\"stat\">\r\n            <span className=\"stat-number\">{appContext?.getJobCount() || 0}</span>\r\n            <span className=\"stat-label\">Active Jobs</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "
    },
    {
      "id": "src\\ui\\pages\\Play.jsx",
      "path": "src\\ui\\pages\\Play.jsx",
      "type": "code",
      "size": 223,
      "modified": "2025-07-21T04:36:35.768Z",
      "metadata": {
        "lines": 10,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:36:35.768Z",
        "keywords": [
          "Play",
          "function",
          "react"
        ]
      },
      "content": "import React from 'react';\r\n\r\nexport default function Play({ appContext }) {\r\n  return (\r\n    <div className=\"play-page\">\r\n      <h1>üéÆ Play Rekursing</h1>\r\n      <p>Game interface coming soon...</p>\r\n    </div>\r\n  );\r\n} "
    },
    {
      "id": "src\\ui\\pages\\Settings.jsx",
      "path": "src\\ui\\pages\\Settings.jsx",
      "type": "code",
      "size": 231,
      "modified": "2025-07-21T04:37:12.854Z",
      "metadata": {
        "lines": 10,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:37:12.854Z",
        "keywords": [
          "Settings",
          "function",
          "react"
        ]
      },
      "content": "import React from 'react';\r\n\r\nexport default function Settings({ appContext }) {\r\n  return (\r\n    <div className=\"settings-page\">\r\n      <h1>‚öôÔ∏è Settings</h1>\r\n      <p>Settings interface coming soon...</p>\r\n    </div>\r\n  );\r\n} "
    },
    {
      "id": "src\\ui\\pages\\SocialAI.jsx",
      "path": "src\\ui\\pages\\SocialAI.jsx",
      "type": "code",
      "size": 13731,
      "modified": "2025-07-21T04:31:32.269Z",
      "metadata": {
        "lines": 365,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:31:32.269Z",
        "keywords": [
          "SocialAI",
          "newSocialAI",
          "createDemoUsers",
          "demoUsers",
          "createProfile",
          "userId",
          "profile",
          "userMatches",
          "findMatches",
          "createSession"
        ]
      },
      "content": "import React, { useState, useEffect } from 'react';\r\nimport SocialAIMatching from '../../ai/social/SocialAIMatching';\r\nimport './SocialAI.css';\r\n\r\nexport default function SocialAI({ appContext }) {\r\n  const [socialAI, setSocialAI] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [matches, setMatches] = useState([]);\r\n  const [activeSession, setActiveSession] = useState(null);\r\n  const [showProfileForm, setShowProfileForm] = useState(false);\r\n  const [showMatches, setShowMatches] = useState(false);\r\n  const [showSessions, setShowSessions] = useState(false);\r\n\r\n  // Initialize Social AI system\r\n  useEffect(() => {\r\n    if (!socialAI) {\r\n      const newSocialAI = new SocialAIMatching();\r\n      setSocialAI(newSocialAI);\r\n      \r\n      // Create demo users\r\n      createDemoUsers(newSocialAI);\r\n    }\r\n  }, [socialAI]);\r\n\r\n  // Create demo users for testing\r\n  const createDemoUsers = (ai) => {\r\n    const demoUsers = [\r\n      {\r\n        id: 'user1',\r\n        "
    },
    {
      "id": "src\\ui\\pages\\Tools.jsx",
      "path": "src\\ui\\pages\\Tools.jsx",
      "type": "code",
      "size": 222,
      "modified": "2025-07-21T04:37:05.950Z",
      "metadata": {
        "lines": 10,
        "hasComments": false,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:37:05.950Z",
        "keywords": [
          "Tools",
          "function",
          "react"
        ]
      },
      "content": "import React from 'react';\r\n\r\nexport default function Tools({ appContext }) {\r\n  return (\r\n    <div className=\"tools-page\">\r\n      <h1>üõ†Ô∏è Tools</h1>\r\n      <p>Development tools coming soon...</p>\r\n    </div>\r\n  );\r\n} "
    },
    {
      "id": "src\\utils\\data\\SpatialMatrix.js",
      "path": "src\\utils\\data\\SpatialMatrix.js",
      "type": "code",
      "size": 400,
      "modified": "2025-07-05T01:39:56.646Z",
      "metadata": {
        "lines": 9,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:39:56.646Z",
        "keywords": [
          "SpatialFunctionClusteringMatrix",
          "class",
          "three"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-SFCM-01: Spatial Function Clustering Matrix Module\r\n// Spatial Function Clustering Matrix\r\n// Positions functions in 3D space based on calling relationships and frequency\r\nimport * as THREE from 'three';\r\n\r\nexport default class SpatialFunctionClusteringMatrix {\r\n    // ... (full implementation as previously provided) ...\r\n} "
    },
    {
      "id": "src\\utils\\data\\SystemMatrix.js",
      "path": "src\\utils\\data\\SystemMatrix.js",
      "type": "code",
      "size": 21585,
      "modified": "2025-07-05T01:40:09.016Z",
      "metadata": {
        "lines": 563,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:40:09.016Z",
        "keywords": [
          "SystemInterconnectivityMatrix",
          "this",
          "ambientLight",
          "directionalLight",
          "node",
          "nodeGroup",
          "geometry",
          "material",
          "mesh",
          "positions"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-SIM-01: System Interconnectivity Matrix Module\r\n// System Interconnectivity Matrix Visualizer\r\n// Implements the Matrix concept: visualizing all program interconnectivity and butterfly effects\r\nimport * as THREE from 'three';\r\n\r\nexport default class SystemInterconnectivityMatrix {\r\n    constructor(scene, mathematicalEngine) {\r\n        this.scene = scene;\r\n        this.mathematicalEngine = mathematicalEngine;\r\n        \r\n        // Matrix visualization components\r\n        this.matrixContainer = new THREE.Group();\r\n        this.scene.add(this.matrixContainer);\r\n        \r\n        // System nodes and connections\r\n        this.systemNodes = new Map();\r\n        this.connectionLines = new Map();\r\n        this.dataFlowParticles = new Map();\r\n        \r\n        // Matrix state\r\n        this.matrixState = {\r\n            isActive: false,\r\n            visualizationMode: 'interconnectivity', // 'interconnectivity', 'butterfly-e"
    },
    {
      "id": "src\\utils\\helpers\\advanced-optimization.js",
      "path": "src\\utils\\helpers\\advanced-optimization.js",
      "type": "code",
      "size": 27419,
      "modified": "2025-07-14T11:37:28.167Z",
      "metadata": {
        "lines": 834,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": true,
        "hasDocs": false,
        "lastModified": "2025-07-14T11:37:28.167Z",
        "keywords": [
          "LODSystem",
          "FrustumCullingSystem",
          "ObjectPool",
          "WebGLOptimizationSystem",
          "MobileOptimizationSystem",
          "AdvancedOptimizationSystem",
          "lods",
          "level",
          "geometry",
          "material"
        ]
      },
      "content": "// Advanced Optimization System - Phase 7 Implementation\r\n// Implements LOD, frustum culling, object pooling, and WebGL optimizations\r\n\r\nimport * as THREE from './three.module.js';\r\n\r\n// ============================================================================\r\n// 1. LEVEL OF DETAIL (LOD) SYSTEM\r\n// ============================================================================\r\n\r\nclass LODSystem {\r\n    constructor() {\r\n        this.lodLevels = new Map();\r\n        this.lodObjects = new Map();\r\n        this.transitionThresholds = [0, 10, 50, 100]; // distance thresholds\r\n        this.qualityLevels = ['ultra', 'high', 'medium', 'low'];\r\n        this.currentLOD = new Map();\r\n        \r\n        this.config = {\r\n            enableLOD: true,\r\n            autoLOD: true,\r\n            transitionSmoothness: 0.1,\r\n            maxLODDistance: 200,\r\n            minLODDistance: 5\r\n        };\r\n    }\r\n\r\n    createLODLevels(object, levels = ['ultra', 'high', 'medium', 'low']) {\r\n        const lods = [];"
    },
    {
      "id": "src\\utils\\helpers\\comfyui-integration.js",
      "path": "src\\utils\\helpers\\comfyui-integration.js",
      "type": "code",
      "size": 16130,
      "modified": "2025-07-21T04:37:24.909Z",
      "metadata": {
        "lines": 438,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-21T04:37:24.909Z",
        "keywords": [
          "ComfyUIIntegration",
          "response",
          "prompts",
          "workflow",
          "result",
          "promptId",
          "maxAttempts",
          "poll",
          "history",
          "outputs"
        ]
      },
      "content": "/**\r\n * ComfyUI Integration Module\r\n * Provides AI-powered texture and material generation for procedural content\r\n * IDX-COMFYUI-001: Core integration module\r\n */\r\n\r\nimport * as THREE from '../../graphics/renderers/three.module.js';\r\n\r\nclass ComfyUIIntegration {\r\n    constructor() {\r\n        this.baseUrl = 'http://127.0.0.1:8188'; // Default ComfyUI server\r\n        this.isConnected = false;\r\n        this.workflowQueue = [];\r\n        this.generatedTextures = new Map();\r\n        this.materialCache = new Map();\r\n        \r\n        // Default workflow templates\r\n        this.workflowTemplates = {\r\n            terrain: this.createTerrainWorkflow(),\r\n            tree: this.createTreeWorkflow(),\r\n            skybox: this.createSkyboxWorkflow(),\r\n            material: this.createMaterialWorkflow()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initialize connection to ComfyUI server\r\n     * IDX-COMFYUI-002: Connection management\r\n     */\r\n    async initialize() {\r\n        try {\r\n            const respo"
    },
    {
      "id": "src\\utils\\helpers\\FlowVisualizer.js",
      "path": "src\\utils\\helpers\\FlowVisualizer.js",
      "type": "code",
      "size": 5663,
      "modified": "2025-07-05T01:39:17.932Z",
      "metadata": {
        "lines": 167,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:39:17.932Z",
        "keywords": [
          "FlowDiagramVisualizer",
          "response",
          "data",
          "nodeGroup",
          "edgeLine",
          "geometry",
          "material",
          "mesh",
          "edges",
          "line"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-FLOW-01: Flow Diagram Visualizer Module\r\nimport * as THREE from 'three';\r\n\r\nexport default class FlowDiagramVisualizer {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.nodes = new Map();\r\n        this.container = new THREE.Group();\r\n        this.scene.add(this.container);\r\n        this.clock = new THREE.Clock();\r\n    }\r\n\r\n    async loadAndRender(url) {\r\n        try {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            this.renderDiagram(data);\r\n        } catch (error) {\r\n            console.error('Error loading or rendering flow diagram:', error);\r\n        }\r\n    }\r\n\r\n    renderDiagram(data) {\r\n        // First, create all the node meshes\r\n        data.nodes.forEach(nodeData => {\r\n            const nodeGroup = this.createNode(nodeData);\r\n            this.nodes.set(nodeData.id, nodeGroup);\r\n            this.container.add(nodeGroup);\r\n "
    },
    {
      "id": "src\\utils\\helpers\\thought-history-git.js",
      "path": "src\\utils\\helpers\\thought-history-git.js",
      "type": "code",
      "size": 23651,
      "modified": "2025-07-20T10:07:05.005Z",
      "metadata": {
        "lines": 721,
        "hasComments": true,
        "hasImports": true,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-20T10:07:05.005Z",
        "keywords": [
          "ThoughtHistoryGit",
          "structure",
          "filePath",
          "now",
          "today",
          "timestamp",
          "batchId",
          "thoughtsByAgent",
          "groups",
          "agentId"
        ]
      },
      "content": "/**\r\n * Thought History Git Integration\r\n * Advanced Git repository management for thought history\r\n */\r\n\r\nimport { execSync } from 'child_process';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\n\r\nexport class ThoughtHistoryGit {\r\n    constructor(config = {}) {\r\n        this.config = {\r\n            repoPath: './thought-history',\r\n            branchPrefix: 'thoughts',\r\n            commitInterval: 30000, // 30 seconds\r\n            maxCommitsPerDay: 100,\r\n            enableBranches: true,\r\n            enableTags: true,\r\n            enableCollaboration: false,\r\n            remoteUrl: null,\r\n            ...config\r\n        };\r\n\r\n        this.pendingThoughts = [];\r\n        this.lastCommit = Date.now();\r\n        this.dailyCommits = 0;\r\n        this.lastCommitDate = new Date().toDateString();\r\n        \r\n        this.branches = new Set();\r\n        this.tags = new Map();\r\n        this.collaborators = new Set();\r\n        \r\n        this.initialize();\r\n    }\r\n\r\n    async initialize() {\r\n"
    },
    {
      "id": "src\\utils\\math\\MathEngine.js",
      "path": "src\\utils\\math\\MathEngine.js",
      "type": "code",
      "size": 40771,
      "modified": "2025-07-05T01:39:26.343Z",
      "metadata": {
        "lines": 1064,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:39:26.343Z",
        "keywords": [
          "MathematicalEngine",
          "based",
          "const",
          "magnitude",
          "phase",
          "z",
          "c",
          "x2",
          "y2",
          "result"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-MATHENG-01: Mathematical Engine Module\r\n// Mathematical Engine - Core Implementation\r\n// Integrates fractal rooting, fine structure constant (137), and complex number relationships\r\n\r\nclass MathematicalEngine {\r\n    constructor() {\r\n        // Mathematical constants with enhanced precision\r\n        this.ALPHA = 1 / 137.035999084; // Fine structure constant\r\n        this.SQRT_MINUS_ONE = { x: 0, y: 1 }; // ‚àö(-1) = i\r\n        this.SQRT_POINT_ONE = { x: 0.316227766, y: 0 }; // ‚àö(0.1)\r\n        this.SQRT_TEN = { x: 3.16227766, y: 0 }; // ‚àö(10)\r\n        this.SQRT_PRODUCT = { x: 1, y: 0 }; // ‚àö(10) √ó ‚àö(0.1) = 1\r\n        \r\n        // Enhanced fractal system\r\n        this.maxFractalIterations = 137;\r\n        this.fractalIterations = 0;\r\n        this.fractalThreshold = 4.0;\r\n        this.fractalComplexity = 0;\r\n        this.fractalEvolution = 0;\r\n        \r\n        // Enhanced quantum system\r\n        this.quantumStates = ne"
    },
    {
      "id": "src\\utils\\math\\MathVisualizer.js",
      "path": "src\\utils\\math\\MathVisualizer.js",
      "type": "code",
      "size": 43832,
      "modified": "2025-07-05T01:39:38.869Z",
      "metadata": {
        "lines": 1092,
        "hasComments": true,
        "hasImports": false,
        "hasExports": true,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-05T01:39:38.869Z",
        "keywords": [
          "MathematicalVisualizer",
          "const",
          "particleCount",
          "geometry",
          "material",
          "particle",
          "angle",
          "radius",
          "indicatorCount",
          "indicator"
        ]
      },
      "content": "// IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md\r\n// IDX-MATHVIS-01: Mathematical Visualizer Module\r\n// Mathematical Visualizer - Real-time visualization of mathematical effects\r\n// Shows fractal patterns, quantum states, complex number relationships, and fine structure constant effects\r\n\r\nclass MathematicalVisualizer {\r\n    constructor(scene, camera, renderer) {\r\n        this.scene = scene;\r\n        this.camera = camera;\r\n        this.renderer = renderer;\r\n        \r\n        // Visualization objects with mathematical integration\r\n        this.fractalParticles = [];\r\n        this.quantumIndicators = [];\r\n        this.complexNumberLines = [];\r\n        this.fineStructureEffects = [];\r\n        this.mathematicalConstants = [];\r\n        \r\n        // Advanced mathematical features with enhanced integration\r\n        this.entanglementLines = [];\r\n        this.mathematicalParticles = [];\r\n        this.enhancedFractals = [];\r\n        this.mathematicalWaves = [];\r\n        this.qua"
    },
    {
      "id": "public\\gpu-streaming-plugin\\background.js",
      "path": "public\\gpu-streaming-plugin\\background.js",
      "type": "code",
      "size": 9057,
      "modified": "2025-07-20T08:14:51.397Z",
      "metadata": {
        "lines": 354,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-20T08:14:51.397Z",
        "keywords": [
          "initializePlugin",
          "detectSystemCapabilities",
          "connectToService",
          "registerPlugin",
          "disconnectFromService",
          "handleSocketMessage",
          "handleInferenceRequest",
          "callLMStudio",
          "processLocally",
          "calculateCost"
        ]
      },
      "content": "/**\r\n * Background Service Worker for GPU Streaming Plugin\r\n * Manages connection to rekursing.com GPU streaming service\r\n */\r\n\r\nlet socket = null;\r\nlet pluginId = null;\r\nlet connectionToken = null;\r\nlet gpuInfo = null;\r\nlet lmStudioUrl = null;\r\nlet isConnected = false;\r\n\r\n// Initialize plugin on installation\r\nchrome.runtime.onInstalled.addListener(async (details) => {\r\n  if (details.reason === 'install') {\r\n    console.log('üîå GPU Streaming Plugin installed');\r\n    await initializePlugin();\r\n  }\r\n});\r\n\r\n// Handle messages from popup and content scripts\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n  switch (request.action) {\r\n    case 'getStatus':\r\n      sendResponse({ isConnected, gpuInfo, lmStudioUrl });\r\n      break;\r\n    \r\n    case 'connect':\r\n      connectToService().then(sendResponse);\r\n      return true;\r\n    \r\n    case 'disconnect':\r\n      disconnectFromService().then(sendResponse);\r\n      return true;\r\n    \r\n    case 'updateSettings':\r\n      upda"
    },
    {
      "id": "public\\gpu-streaming-plugin\\popup.js",
      "path": "public\\gpu-streaming-plugin\\popup.js",
      "type": "code",
      "size": 7217,
      "modified": "2025-07-20T08:15:48.078Z",
      "metadata": {
        "lines": 276,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-20T08:15:48.078Z",
        "keywords": [
          "initializePopup",
          "updateStatusDisplay",
          "loadSettings",
          "loadEarnings",
          "setupEventListeners",
          "connectToService",
          "disconnectFromService",
          "saveSettings",
          "refreshStatus",
          "showLoading"
        ]
      },
      "content": "/**\r\n * Popup JavaScript for GPU Streaming Plugin\r\n * Handles user interface interactions\r\n */\r\n\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n  await initializePopup();\r\n});\r\n\r\n/**\r\n * Initialize the popup\r\n */\r\nasync function initializePopup() {\r\n  try {\r\n    // Get current status\r\n    const status = await chrome.runtime.sendMessage({ action: 'getStatus' });\r\n    \r\n    // Hide loading, show content\r\n    document.getElementById('loading').style.display = 'none';\r\n    document.getElementById('content').style.display = 'block';\r\n    \r\n    // Update UI with status\r\n    updateStatusDisplay(status);\r\n    \r\n    // Load settings\r\n    await loadSettings();\r\n    \r\n    // Load earnings\r\n    await loadEarnings();\r\n    \r\n    // Setup event listeners\r\n    setupEventListeners();\r\n    \r\n  } catch (error) {\r\n    console.error('Failed to initialize popup:', error);\r\n    showError('Failed to load plugin status');\r\n  }\r\n}\r\n\r\n/**\r\n * Update status display\r\n */\r\nfunction updateStatusDispla"
    },
    {
      "id": "public\\js\\game-launcher.js",
      "path": "public\\js\\game-launcher.js",
      "type": "code",
      "size": 13671,
      "modified": "2025-07-14T04:57:49.404Z",
      "metadata": {
        "lines": 477,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T04:57:49.404Z",
        "keywords": [
          "initLauncher",
          "initEventListeners",
          "startSystemCheck",
          "performSystemCheck",
          "checkWebGL",
          "checkES6Support",
          "checkNetworkConnection",
          "checkMemoryAvailable",
          "startAssetLoading",
          "startNetworkConnection"
        ]
      },
      "content": "/**\r\n * Coordinates - Game Launcher JavaScript\r\n * Handles game initialization and launch process\r\n * IDX-GAME-001: Game launcher functionality\r\n */\r\n\r\n// ===== GLOBAL VARIABLES =====\r\nlet currentStep = 0;\r\nlet isLaunching = false;\r\nlet launchProgress = 0;\r\n\r\n// ===== DOM ELEMENTS =====\r\nconst progressFill = document.getElementById('progressFill');\r\nconst progressText = document.getElementById('progressText');\r\nconst statusText = document.querySelector('.status-text');\r\nconst steps = document.querySelectorAll('.step');\r\nconst launchBtn = document.getElementById('launchBtn');\r\nconst backBtn = document.getElementById('backBtn');\r\nconst errorDisplay = document.getElementById('errorDisplay');\r\nconst errorMessage = document.getElementById('errorMessage');\r\nconst retryBtn = document.getElementById('retryBtn');\r\n\r\n// Game info elements\r\nconst currentPlanetEl = document.getElementById('currentPlanet');\r\nconst playerCountEl = document.getElementById('playerCount');\r\nconst serverStatusEl = docum"
    },
    {
      "id": "public\\js\\main.js",
      "path": "public\\js\\main.js",
      "type": "code",
      "size": 15191,
      "modified": "2025-07-14T04:53:03.624Z",
      "metadata": {
        "lines": 484,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T04:53:03.624Z",
        "keywords": [
          "for",
          "from",
          "to",
          "initNavigation",
          "toggleMobileMenu",
          "handleNavbarScroll",
          "initPlanetInteractions",
          "setActivePlanet",
          "updatePlanetShowcase",
          "initAnimations"
        ]
      },
      "content": "/**\r\n * Coordinates - Main JavaScript\r\n * Public website functionality for rekursing.com\r\n * IDX-WEB-001: Main website JavaScript\r\n */\r\n\r\n// ===== GLOBAL VARIABLES =====\r\nlet isNavOpen = false;\r\nlet currentPlanet = 'earth';\r\nlet scrollPosition = 0;\r\n\r\n// ===== DOM ELEMENTS =====\r\nconst navbar = document.getElementById('navbar');\r\nconst navMenu = document.getElementById('nav-menu');\r\nconst navToggle = document.getElementById('nav-toggle');\r\nconst planetCards = document.querySelectorAll('.planet-card');\r\nconst contactForm = document.getElementById('contactForm');\r\n\r\n// ===== NAVIGATION =====\r\nfunction initNavigation() {\r\n    // Mobile menu toggle\r\n    if (navToggle) {\r\n        navToggle.addEventListener('click', toggleMobileMenu);\r\n    }\r\n\r\n    // Smooth scrolling for navigation links\r\n    const navLinks = document.querySelectorAll('.nav-link');\r\n    navLinks.forEach(link => {\r\n        link.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n            const targetId = "
    },
    {
      "id": "public\\sw.js",
      "path": "public\\sw.js",
      "type": "code",
      "size": 9158,
      "modified": "2025-07-14T04:58:39.278Z",
      "metadata": {
        "lines": 293,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-14T04:58:39.278Z",
        "keywords": [
          "handleStaticFile",
          "handleAPIRequest",
          "handleDynamicRequest",
          "isStaticFile",
          "isAPIRequest",
          "performBackgroundSync",
          "cleanupOldCaches",
          "CACHE_NAME",
          "STATIC_CACHE",
          "DYNAMIC_CACHE"
        ]
      },
      "content": "/**\r\n * Coordinates - Service Worker\r\n * Provides offline functionality and caching for the public website\r\n * IDX-SW-001: Service worker implementation\r\n */\r\n\r\nconst CACHE_NAME = 'coordinates-v1.0.0';\r\nconst STATIC_CACHE = 'coordinates-static-v1.0.0';\r\nconst DYNAMIC_CACHE = 'coordinates-dynamic-v1.0.0';\r\n\r\n// Files to cache immediately\r\nconst STATIC_FILES = [\r\n    '/',\r\n    '/css/main.css',\r\n    '/css/game-launcher.css',\r\n    '/js/main.js',\r\n    '/js/game-launcher.js',\r\n    '/assets/favicon.ico',\r\n    '/assets/apple-touch-icon.png',\r\n    '/robots.txt',\r\n    '/sitemap.xml'\r\n];\r\n\r\n// API endpoints to cache\r\nconst API_CACHE = [\r\n    '/api/status',\r\n    '/api/players',\r\n    '/api/servers'\r\n];\r\n\r\n// ===== INSTALL EVENT =====\r\nself.addEventListener('install', (event) => {\r\n    console.log('üöÄ Service Worker installing...');\r\n    \r\n    event.waitUntil(\r\n        caches.open(STATIC_CACHE)\r\n            .then((cache) => {\r\n                console.log('üì¶ Caching static files...');\r\n             "
    }
  ],
  "docs": [
    {
      "id": "docs\\code\\ai\\agents\\ai-agent-automation.md",
      "path": "docs\\code\\ai\\agents\\ai-agent-automation.md",
      "type": "docs",
      "size": 641,
      "modified": "2025-07-21T04:53:32.500Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.500Z"
      },
      "content": "# ai-agent-automation\n\n## Overview\nAuto-generated documentation for `src\\ai\\agents\\ai-agent-automation.js`\n\n## File Information\n- **Path**: `src\\ai\\agents\\ai-agent-automation.js`\n- **Type**: code\n- **Size**: 16465 bytes\n- **Last Modified**: Mon Jul 14 2025 15:31:16 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AIAgentAutomation`\n- `FileChangeMonitor`\n- `PerformanceMonitor`\n- `AISystemsMonitor`\n- `AUTOMATION_RULES`\n- `files`\n- `file`\n- `metrics`\n- `codebase`\n- `trainingData`\n\n## Dependencies\n- `src\\ai\\agents\\ai-agent-system.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\agents\\ai-agent-dashboard.md",
      "path": "docs\\code\\ai\\agents\\ai-agent-dashboard.md",
      "type": "docs",
      "size": 628,
      "modified": "2025-07-21T04:53:32.503Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.503Z"
      },
      "content": "# ai-agent-dashboard\n\n## Overview\nAuto-generated documentation for `src\\ai\\agents\\ai-agent-dashboard.js`\n\n## File Information\n- **Path**: `src\\ai\\agents\\ai-agent-dashboard.js`\n- **Type**: code\n- **Size**: 20122 bytes\n- **Last Modified**: Mon Jul 14 2025 15:31:06 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AIAgentDashboard`\n- `stats`\n- `statsContainer`\n- `agentsStatus`\n- `agentsGrid`\n- `jobQueue`\n- `queueContainer`\n- `jobHistory`\n- `historyContainer`\n- `modal`\n\n## Dependencies\n- `src\\ai\\agents\\ai-agent-system.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\agents\\ai-agent-manager.md",
      "path": "docs\\code\\ai\\agents\\ai-agent-manager.md",
      "type": "docs",
      "size": 607,
      "modified": "2025-07-21T04:53:32.505Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.505Z"
      },
      "content": "# ai-agent-manager\n\n## Overview\nAuto-generated documentation for `src\\ai\\agents\\ai-agent-manager.js`\n\n## File Information\n- **Path**: `src\\ai\\agents\\ai-agent-manager.js`\n- **Type**: code\n- **Size**: 14435 bytes\n- **Last Modified**: Mon Jul 14 2025 15:30:56 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ManagerAgent`\n- `managerId`\n- `agents`\n- `agent`\n- `update`\n- `issues`\n- `performance`\n- `creativeAgentId`\n- `creativeAgent`\n- `baseLifespan`\n\n## Dependencies\n- `src\\ai\\agents\\ai-agent-system.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\agents\\AIAgentManager.md",
      "path": "docs\\code\\ai\\agents\\AIAgentManager.md",
      "type": "docs",
      "size": 753,
      "modified": "2025-07-21T04:53:32.507Z",
      "metadata": {
        "lines": 38,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.507Z"
      },
      "content": "# AIAgentManager\n\n## Overview\nAuto-generated documentation for `src\\ai\\agents\\AIAgentManager.js`\n\n## File Information\n- **Path**: `src\\ai\\agents\\AIAgentManager.js`\n- **Type**: code\n- **Size**: 52077 bytes\n- **Last Modified**: Mon Jul 21 2025 14:35:20 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AgentMemory`\n- `AIAgent`\n- `AIAgentManager`\n- `AGENT_ROLES`\n- `JOB_TYPES`\n- `relativity`\n- `leastRelevantKey`\n- `leastImportantKey`\n- `context`\n- `relevance`\n\n## Dependencies\n- `src\\ai\\neural\\MathematicalAI.js`\n- `src\\utils\\helpers\\comfyui-integration.js`\n- `src\\ai\\llm\\LLMManager.js`\n- `src\\core\\relativity\\project-objectives.js`\n- `src\\main.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\llm\\LLMManager.md",
      "path": "docs\\code\\ai\\llm\\LLMManager.md",
      "type": "docs",
      "size": 611,
      "modified": "2025-07-21T04:53:32.510Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.510Z"
      },
      "content": "# LLMManager\n\n## Overview\nAuto-generated documentation for `src\\ai\\llm\\LLMManager.js`\n\n## File Information\n- **Path**: `src\\ai\\llm\\LLMManager.js`\n- **Type**: code\n- **Size**: 40240 bytes\n- **Last Modified**: Mon Jul 21 2025 13:56:25 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `TerminalAccess`\n- `LLMService`\n- `LLMManager`\n- `AgentLLMEnhancer`\n- `LLM_PROVIDERS`\n- `LLM_CONFIGS`\n- `response`\n- `startTime`\n- `latency`\n- `messageId`\n\n## Dependencies\n- `src\\ai\\agents\\AIAgentManager.js`\n- `src\\main.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\neural\\MathematicalAI.md",
      "path": "docs\\code\\ai\\neural\\MathematicalAI.md",
      "type": "docs",
      "size": 629,
      "modified": "2025-07-21T04:53:32.513Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.513Z"
      },
      "content": "# MathematicalAI\n\n## Overview\nAuto-generated documentation for `src\\ai\\neural\\MathematicalAI.js`\n\n## File Information\n- **Path**: `src\\ai\\neural\\MathematicalAI.js`\n- **Type**: code\n- **Size**: 14016 bytes\n- **Last Modified**: Mon Jul 21 2025 14:37:47 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `MathematicalAI`\n- `with`\n- `currentLayer`\n- `nextLayer`\n- `neuronWeights`\n- `weight`\n- `analysis`\n- `position`\n- `velocity`\n- `magnitude`\n\n## Dependencies\n- `src\\ai\\agents\\AIAgentManager.js`\n- `src\\utils\\math\\MathEngine.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\social\\SocialAIMatching.md",
      "path": "docs\\code\\ai\\social\\SocialAIMatching.md",
      "type": "docs",
      "size": 612,
      "modified": "2025-07-21T04:53:32.515Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.515Z"
      },
      "content": "# SocialAIMatching\n\n## Overview\nAuto-generated documentation for `src\\ai\\social\\SocialAIMatching.js`\n\n## File Information\n- **Path**: `src\\ai\\social\\SocialAIMatching.js`\n- **Type**: code\n- **Size**: 18665 bytes\n- **Last Modified**: Mon Jul 21 2025 14:29:47 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `SocialAIMatching`\n- `userProfile`\n- `needEntry`\n- `abilityEntry`\n- `user`\n- `matches`\n- `potentialHelpers`\n- `helper`\n- `matchScore`\n- `potentialClients`\n\n## Dependencies\n- `src\\ui\\pages\\SocialAI.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\thinking\\ChainOfThought.md",
      "path": "docs\\code\\ai\\thinking\\ChainOfThought.md",
      "type": "docs",
      "size": 625,
      "modified": "2025-07-21T04:53:32.518Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.518Z"
      },
      "content": "# ChainOfThought\n\n## Overview\nAuto-generated documentation for `src\\ai\\thinking\\ChainOfThought.js`\n\n## File Information\n- **Path**: `src\\ai\\thinking\\ChainOfThought.js`\n- **Type**: code\n- **Size**: 21325 bytes\n- **Last Modified**: Sun Jul 20 2025 20:04:39 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ChainOfThoughtAPI`\n- `thoughtRecord`\n- `thoughts`\n- `paginatedThoughts`\n- `analysis`\n- `patterns`\n- `metrics`\n- `progress`\n- `results`\n- `thoughtData`\n\n## Dependencies\n- `src\\ai\\thinking\\chain-of-thought-monitor.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\thinking\\ReasoningEngine.md",
      "path": "docs\\code\\ai\\thinking\\ReasoningEngine.md",
      "type": "docs",
      "size": 613,
      "modified": "2025-07-21T04:53:32.522Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.522Z"
      },
      "content": "# ReasoningEngine\n\n## Overview\nAuto-generated documentation for `src\\ai\\thinking\\ReasoningEngine.js`\n\n## File Information\n- **Path**: `src\\ai\\thinking\\ReasoningEngine.js`\n- **Type**: code\n- **Size**: 32212 bytes\n- **Last Modified**: Sun Jul 20 2025 20:02:40 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ChainOfThoughtMonitor`\n- `thoughtRecord`\n- `depth`\n- `coherence`\n- `evidenceUsage`\n- `alternatives`\n- `text`\n- `wordCount`\n- `sentenceCount`\n- `uniqueWords`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ai\\thinking\\ThoughtFrames.md",
      "path": "docs\\code\\ai\\thinking\\ThoughtFrames.md",
      "type": "docs",
      "size": 697,
      "modified": "2025-07-21T04:53:32.524Z",
      "metadata": {
        "lines": 36,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.524Z"
      },
      "content": "# ThoughtFrames\n\n## Overview\nAuto-generated documentation for `src\\ai\\thinking\\ThoughtFrames.js`\n\n## File Information\n- **Path**: `src\\ai\\thinking\\ThoughtFrames.js`\n- **Type**: code\n- **Size**: 18127 bytes\n- **Last Modified**: Mon Jul 21 2025 14:47:21 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ThoughtFrames`\n- `codeContext`\n- `docsContext`\n- `testContext`\n- `pastDecisions`\n- `relevantCode`\n- `relevantDocs`\n- `pastUpgrades`\n- `frame`\n- `tradingCode`\n\n## Dependencies\n- `src\\core\\context\\ContextIndexer.js`\n- `src\\core\\context\\KnowledgeGraph.js`\n- `src\\core\\context\\ContextMemory.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\constants\\app.constants.md",
      "path": "docs\\code\\constants\\app.constants.md",
      "type": "docs",
      "size": 641,
      "modified": "2025-07-21T04:53:32.526Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.526Z"
      },
      "content": "# app.constants\n\n## Overview\nAuto-generated documentation for `src\\constants\\app.constants.js`\n\n## File Information\n- **Path**: `src\\constants\\app.constants.js`\n- **Type**: code\n- **Size**: 3764 bytes\n- **Last Modified**: Mon Jul 21 2025 14:17:30 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `MATH_CONSTANTS`\n- `COORDINATE_CONSTANTS`\n- `AI_CONSTANTS`\n- `GRAPHICS_CONSTANTS`\n- `GAME_CONSTANTS`\n- `UI_CONSTANTS`\n- `PERFORMANCE_CONSTANTS`\n- `ERROR_CODES`\n- `STATUS_CODES`\n- `PRIORITY_LEVELS`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\config\\app.config.md",
      "path": "docs\\code\\core\\config\\app.config.md",
      "type": "docs",
      "size": 501,
      "modified": "2025-07-21T04:53:32.529Z",
      "metadata": {
        "lines": 29,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.529Z"
      },
      "content": "# app.config\n\n## Overview\nAuto-generated documentation for `src\\core\\config\\app.config.js`\n\n## File Information\n- **Path**: `src\\core\\config\\app.config.js`\n- **Type**: code\n- **Size**: 2853 bytes\n- **Last Modified**: Mon Jul 21 2025 14:17:07 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `APP_CONFIG`\n- `FEATURE_FLAGS`\n- `DEV_CONFIG`\n- `PROD_CONFIG`\n- `const`\n\n## Dependencies\n- `src\\main.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\context\\BuildHook.md",
      "path": "docs\\code\\core\\context\\BuildHook.md",
      "type": "docs",
      "size": 650,
      "modified": "2025-07-21T04:53:32.532Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.532Z"
      },
      "content": "# BuildHook\n\n## Overview\nAuto-generated documentation for `src\\core\\context\\BuildHook.js`\n\n## File Information\n- **Path**: `src\\core\\context\\BuildHook.js`\n- **Type**: code\n- **Size**: 4821 bytes\n- **Last Modified**: Mon Jul 21 2025 14:50:24 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `BuildHook`\n- `startTime`\n- `duration`\n- `codeFiles`\n- `file`\n- `generatedTests`\n- `generatedDocs`\n- `class`\n- `./ContextAutomation.js`\n- `./ContextMemory.js`\n\n## Dependencies\n- `src\\core\\context\\ContextAutomation.js`\n- `src\\core\\context\\ContextMemory.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\context\\ContextAutomation.md",
      "path": "docs\\code\\core\\context\\ContextAutomation.md",
      "type": "docs",
      "size": 701,
      "modified": "2025-07-21T04:53:32.534Z",
      "metadata": {
        "lines": 37,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.534Z"
      },
      "content": "# ContextAutomation\n\n## Overview\nAuto-generated documentation for `src\\core\\context\\ContextAutomation.js`\n\n## File Information\n- **Path**: `src\\core\\context\\ContextAutomation.js`\n- **Type**: code\n- **Size**: 11512 bytes\n- **Last Modified**: Mon Jul 21 2025 14:48:21 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ContextAutomation`\n- `startTime`\n- `dir`\n- `files`\n- `file`\n- `duration`\n- `scan`\n- `items`\n- `item`\n- `fullPath`\n\n## Dependencies\n- `src\\core\\context\\BuildHook.js`\n- `src\\core\\context\\ContextIndexer.js`\n- `src\\core\\context\\KnowledgeGraph.js`\n- `src\\core\\context\\ContextMemory.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\context\\ContextIndexer.md",
      "path": "docs\\code\\core\\context\\ContextIndexer.md",
      "type": "docs",
      "size": 561,
      "modified": "2025-07-21T04:53:32.537Z",
      "metadata": {
        "lines": 30,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.537Z"
      },
      "content": "# ContextIndexer\n\n## Overview\nAuto-generated documentation for `src\\core\\context\\ContextIndexer.js`\n\n## File Information\n- **Path**: `src\\core\\context\\ContextIndexer.js`\n- **Type**: code\n- **Size**: 1475 bytes\n- **Last Modified**: Mon Jul 21 2025 14:42:17 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ContextIndexer`\n- `existing`\n- `class`\n- `fs`\n- `path`\n\n## Dependencies\n- `src\\ai\\thinking\\ThoughtFrames.js`\n- `src\\core\\context\\ContextAutomation.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\context\\ContextMemory.md",
      "path": "docs\\code\\core\\context\\ContextMemory.md",
      "type": "docs",
      "size": 578,
      "modified": "2025-07-21T04:53:32.539Z",
      "metadata": {
        "lines": 30,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.539Z"
      },
      "content": "# ContextMemory\n\n## Overview\nAuto-generated documentation for `src\\core\\context\\ContextMemory.js`\n\n## File Information\n- **Path**: `src\\core\\context\\ContextMemory.js`\n- **Type**: code\n- **Size**: 1126 bytes\n- **Last Modified**: Mon Jul 21 2025 14:42:28 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ContextMemory`\n- `class`\n- `fs`\n- `path`\n\n## Dependencies\n- `src\\ai\\thinking\\ThoughtFrames.js`\n- `src\\core\\context\\BuildHook.js`\n- `src\\core\\context\\ContextAutomation.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\context\\KnowledgeGraph.md",
      "path": "docs\\code\\core\\context\\KnowledgeGraph.md",
      "type": "docs",
      "size": 544,
      "modified": "2025-07-21T04:53:32.541Z",
      "metadata": {
        "lines": 28,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.541Z"
      },
      "content": "# KnowledgeGraph\n\n## Overview\nAuto-generated documentation for `src\\core\\context\\KnowledgeGraph.js`\n\n## File Information\n- **Path**: `src\\core\\context\\KnowledgeGraph.js`\n- **Type**: code\n- **Size**: 1252 bytes\n- **Last Modified**: Mon Jul 21 2025 14:42:23 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `KnowledgeGraph`\n- `related`\n- `class`\n\n## Dependencies\n- `src\\ai\\thinking\\ThoughtFrames.js`\n- `src\\core\\context\\ContextAutomation.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\relativity\\project-objectives.md",
      "path": "docs\\code\\core\\relativity\\project-objectives.md",
      "type": "docs",
      "size": 651,
      "modified": "2025-07-21T04:53:32.543Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.543Z"
      },
      "content": "# project-objectives\n\n## Overview\nAuto-generated documentation for `src\\core\\relativity\\project-objectives.js`\n\n## File Information\n- **Path**: `src\\core\\relativity\\project-objectives.js`\n- **Type**: code\n- **Size**: 5746 bytes\n- **Last Modified**: Sun Jul 20 2025 16:49:08 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ProjectObjectives`\n- `objective`\n- `objectiveScore`\n- `weightedScore`\n- `relativityRating`\n- `taskKeywords`\n- `contextKeywords`\n- `allKeywords`\n- `criterion`\n- `keyword`\n\n## Dependencies\n- `src\\ai\\agents\\AIAgentManager.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\core\\services\\unifiedService.md",
      "path": "docs\\code\\core\\services\\unifiedService.md",
      "type": "docs",
      "size": 594,
      "modified": "2025-07-21T04:53:32.546Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.546Z"
      },
      "content": "# unifiedService\n\n## Overview\nAuto-generated documentation for `src\\core\\services\\unifiedService.js`\n\n## File Information\n- **Path**: `src\\core\\services\\unifiedService.js`\n- **Type**: code\n- **Size**: 10630 bytes\n- **Last Modified**: Mon Jul 21 2025 14:07:12 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `UnifiedService`\n- `apiResponse`\n- `lmResponse`\n- `lmConnected`\n- `response`\n- `data`\n- `prompt`\n- `result`\n- `eventListeners`\n- `unifiedService`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\game\\mechanics\\FPSEnhancement.md",
      "path": "docs\\code\\game\\mechanics\\FPSEnhancement.md",
      "type": "docs",
      "size": 609,
      "modified": "2025-07-21T04:53:32.550Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.550Z"
      },
      "content": "# FPSEnhancement\n\n## Overview\nAuto-generated documentation for `src\\game\\mechanics\\FPSEnhancement.js`\n\n## File Information\n- **Path**: `src\\game\\mechanics\\FPSEnhancement.js`\n- **Type**: code\n- **Size**: 66161 bytes\n- **Last Modified**: Sun Jul 20 2025 20:54:11 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `EnhancedFPSSystem`\n- `weapons`\n- `weapon`\n- `now`\n- `projectiles`\n- `hit`\n- `damage`\n- `index`\n- `cameraDirection`\n- `spread`\n\n## Dependencies\n- `src\\game\\mechanics\\chain-of-thought-monitor.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\game\\mechanics\\MeanReversionRSI.md",
      "path": "docs\\code\\game\\mechanics\\MeanReversionRSI.md",
      "type": "docs",
      "size": 584,
      "modified": "2025-07-21T04:53:32.552Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.552Z"
      },
      "content": "# MeanReversionRSI\n\n## Overview\nAuto-generated documentation for `src\\game\\mechanics\\MeanReversionRSI.js`\n\n## File Information\n- **Path**: `src\\game\\mechanics\\MeanReversionRSI.js`\n- **Type**: code\n- **Size**: 11442 bytes\n- **Last Modified**: Mon Jul 21 2025 14:27:56 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `MeanReversionRSI`\n- `change`\n- `rs`\n- `rsi`\n- `sum`\n- `sma`\n- `slice`\n- `variance`\n- `standardDeviation`\n- `bollinger`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\game\\physics\\PhysicsEngine.md",
      "path": "docs\\code\\game\\physics\\PhysicsEngine.md",
      "type": "docs",
      "size": 633,
      "modified": "2025-07-21T04:53:32.554Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.554Z"
      },
      "content": "# PhysicsEngine\n\n## Overview\nAuto-generated documentation for `src\\game\\physics\\PhysicsEngine.js`\n\n## File Information\n- **Path**: `src\\game\\physics\\PhysicsEngine.js`\n- **Type**: code\n- **Size**: 17106 bytes\n- **Last Modified**: Sat Jul 05 2025 11:39:08 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AdvancedPhysics`\n- `groundMaterial`\n- `playerMaterial`\n- `bulletMaterial`\n- `destructibleMaterial`\n- `groundPlayerContact`\n- `bulletDestructibleContact`\n- `shape`\n- `body`\n- `size`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\effects\\artist-controls.md",
      "path": "docs\\code\\graphics\\effects\\artist-controls.md",
      "type": "docs",
      "size": 643,
      "modified": "2025-07-21T04:53:32.557Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.557Z"
      },
      "content": "# artist-controls\n\n## Overview\nAuto-generated documentation for `src\\graphics\\effects\\artist-controls.js`\n\n## File Information\n- **Path**: `src\\graphics\\effects\\artist-controls.js`\n- **Type**: code\n- **Size**: 27422 bytes\n- **Last Modified**: Sat Jul 05 2025 21:11:28 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ArtistControlPanel`\n- `TreePresetManager`\n- `EditHistory`\n- `CollaborationManager`\n- `RealTimePreview`\n- `style`\n- `rangeInputs`\n- `input`\n- `valueSpan`\n- `value`\n\n## Dependencies\n- `src\\graphics\\effects\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\adaptive-tessellation.md",
      "path": "docs\\code\\graphics\\geometry\\adaptive-tessellation.md",
      "type": "docs",
      "size": 716,
      "modified": "2025-07-21T04:53:32.560Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.560Z"
      },
      "content": "# adaptive-tessellation\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\adaptive-tessellation.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\adaptive-tessellation.js`\n- **Type**: code\n- **Size**: 21632 bytes\n- **Last Modified**: Sat Jul 05 2025 21:22:00 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AdaptiveTessellationManager`\n- `AdaptiveLODManager`\n- `InteractionRefiner`\n- `PerformanceMonitor`\n- `AdaptiveTessellationSystem`\n- `factors`\n- `screenError`\n- `curvatureError`\n- `distanceError`\n- `interactionError`\n\n## Dependencies\n- `src\\graphics\\geometry\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\autoregressive-mesh-generator.md",
      "path": "docs\\code\\graphics\\geometry\\autoregressive-mesh-generator.md",
      "type": "docs",
      "size": 738,
      "modified": "2025-07-21T04:53:32.562Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.562Z"
      },
      "content": "# autoregressive-mesh-generator\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\autoregressive-mesh-generator.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\autoregressive-mesh-generator.js`\n- **Type**: code\n- **Size**: 26091 bytes\n- **Last Modified**: Sat Jul 05 2025 21:19:33 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AutoregressiveTransformer`\n- `TokenEmbedding`\n- `PositionalEncoding`\n- `TransformerLayer`\n- `MultiHeadAttention`\n- `FeedForward`\n- `LinearLayer`\n- `LayerNormalization`\n- `TreeSequenceEncoder`\n- `MeshTokenization`\n\n## Dependencies\n- `src\\graphics\\geometry\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\branch.md",
      "path": "docs\\code\\graphics\\geometry\\branch.md",
      "type": "docs",
      "size": 485,
      "modified": "2025-07-21T04:53:32.565Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.565Z"
      },
      "content": "# branch\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\branch.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\branch.js`\n- **Type**: code\n- **Size**: 853 bytes\n- **Last Modified**: Sat Jul 05 2025 13:51:28 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `Branch`\n- `class`\n- `three`\n\n## Dependencies\n- `src\\graphics\\geometry\\VoxelGenerators.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\gpu-procedural-generator.md",
      "path": "docs\\code\\graphics\\geometry\\gpu-procedural-generator.md",
      "type": "docs",
      "size": 714,
      "modified": "2025-07-21T04:53:32.567Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.567Z"
      },
      "content": "# gpu-procedural-generator\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\gpu-procedural-generator.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\gpu-procedural-generator.js`\n- **Type**: code\n- **Size**: 31485 bytes\n- **Last Modified**: Sat Jul 05 2025 21:16:06 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `GPUMeshNodeGraph`\n- `ContinuousLODSystem`\n- `GPUProceduralGenerator`\n- `canvas`\n- `branchVertexShader`\n- `branchFragmentShader`\n- `junctionVertexShader`\n- `junctionFragmentShader`\n- `gl`\n- `vertexShader`\n\n## Dependencies\n- `src\\graphics\\geometry\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\MarchingCubes.md",
      "path": "docs\\code\\graphics\\geometry\\MarchingCubes.md",
      "type": "docs",
      "size": 605,
      "modified": "2025-07-21T04:53:32.569Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.569Z"
      },
      "content": "# MarchingCubes\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\MarchingCubes.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\MarchingCubes.js`\n- **Type**: code\n- **Size**: 38037 bytes\n- **Last Modified**: Sat Jul 05 2025 19:48:01 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `MarchingCubes`\n- `lerp`\n- `VIntX`\n- `VIntY`\n- `VIntZ`\n- `compNorm`\n- `polygonize`\n- `posnormtriv`\n- `geometry`\n- `scope`\n\n## Dependencies\n- `src\\graphics\\geometry\\SimpleTreeGenerator.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\MeshGenerators.md",
      "path": "docs\\code\\graphics\\geometry\\MeshGenerators.md",
      "type": "docs",
      "size": 715,
      "modified": "2025-07-21T04:53:32.571Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.571Z"
      },
      "content": "# MeshGenerators\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\MeshGenerators.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\MeshGenerators.js`\n- **Type**: code\n- **Size**: 32933 bytes\n- **Last Modified**: Sat Jul 05 2025 21:07:40 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AdaptiveTessellationSystem`\n- `TreeLODManager`\n- `InteractionTessellation`\n- `NormalSmoother`\n- `JunctionAnalyzer`\n- `MetaballMeshGenerator`\n- `TubeMeshGenerator`\n- `MaterialAnimator`\n- `SeasonalEffectSystem`\n- `AdvancedMeshGenerator`\n\n## Dependencies\n- `src\\graphics\\geometry\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\SimpleTreeGenerator.md",
      "path": "docs\\code\\graphics\\geometry\\SimpleTreeGenerator.md",
      "type": "docs",
      "size": 687,
      "modified": "2025-07-21T04:53:32.573Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.573Z"
      },
      "content": "# SimpleTreeGenerator\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\SimpleTreeGenerator.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\SimpleTreeGenerator.js`\n- **Type**: code\n- **Size**: 18267 bytes\n- **Last Modified**: Sat Jul 05 2025 19:55:03 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `TreeOptions`\n- `Branch`\n- `testStep1`\n- `generateTreeRecursive`\n- `sphericalDirection`\n- `testStep2`\n- `extractSegments`\n- `testStep3`\n- `generateMetaballMesh`\n- `addMetaballMeshesRecursive`\n\n## Dependencies\n- `src\\graphics\\geometry\\MarchingCubes.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\tree-options.md",
      "path": "docs\\code\\graphics\\geometry\\tree-options.md",
      "type": "docs",
      "size": 507,
      "modified": "2025-07-21T04:53:32.576Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.576Z"
      },
      "content": "# tree-options\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\tree-options.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\tree-options.js`\n- **Type**: code\n- **Size**: 1607 bytes\n- **Last Modified**: Sat Jul 05 2025 13:51:23 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `TreeOptions`\n- `key`\n- `class`\n\n## Dependencies\n- `src\\graphics\\geometry\\VoxelGenerators.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\TreeGenerators.md",
      "path": "docs\\code\\graphics\\geometry\\TreeGenerators.md",
      "type": "docs",
      "size": 625,
      "modified": "2025-07-21T04:53:32.579Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.579Z"
      },
      "content": "# TreeGenerators\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\TreeGenerators.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\TreeGenerators.js`\n- **Type**: code\n- **Size**: 10819 bytes\n- **Last Modified**: Sat Jul 05 2025 11:59:29 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ProceduralTreeGenerator`\n- `response`\n- `options`\n- `treeObject`\n- `trunkParams`\n- `branchOptions`\n- `worldOrigin`\n- `childCount`\n- `childLevel`\n- `startRatio`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\voxel-object-generator.md",
      "path": "docs\\code\\graphics\\geometry\\voxel-object-generator.md",
      "type": "docs",
      "size": 602,
      "modified": "2025-07-21T04:53:32.580Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.580Z"
      },
      "content": "# voxel-object-generator\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\voxel-object-generator.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\voxel-object-generator.js`\n- **Type**: code\n- **Size**: 3003 bytes\n- **Last Modified**: Sat Jul 05 2025 11:39:52 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `VoxelObjectGenerator`\n- `effect`\n- `point`\n- `distance`\n- `index`\n- `value`\n- `line`\n- `closestPoint`\n- `i`\n- `j`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\geometry\\VoxelGenerators.md",
      "path": "docs\\code\\graphics\\geometry\\VoxelGenerators.md",
      "type": "docs",
      "size": 726,
      "modified": "2025-07-21T04:53:32.584Z",
      "metadata": {
        "lines": 36,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.584Z"
      },
      "content": "# VoxelGenerators\n\n## Overview\nAuto-generated documentation for `src\\graphics\\geometry\\VoxelGenerators.js`\n\n## File Information\n- **Path**: `src\\graphics\\geometry\\VoxelGenerators.js`\n- **Type**: code\n- **Size**: 43061 bytes\n- **Last Modified**: Mon Jul 14 2025 21:08:46 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `LSystemSkeleton`\n- `SpaceColonization`\n- `VoxelTree`\n- `extractBranch`\n- `logOutput`\n- `TREE_TYPES`\n- `endPos`\n- `tropismEffect`\n- `randomOffset`\n- `state`\n\n## Dependencies\n- `src\\graphics\\geometry\\tree-options.js`\n- `src\\graphics\\geometry\\branch.js`\n- `src\\graphics\\geometry\\procedural-tree-voxel.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\ad-injection-service.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\ad-injection-service.md",
      "type": "docs",
      "size": 680,
      "modified": "2025-07-21T04:53:32.586Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.586Z"
      },
      "content": "# ad-injection-service\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\ad-injection-service.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\ad-injection-service.js`\n- **Type**: code\n- **Size**: 10102 bytes\n- **Last Modified**: Sun Jul 20 2025 16:58:29 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AdInjectionService`\n- `promptKeywords`\n- `userPrefs`\n- `relevantAds`\n- `selectedAd`\n- `adInjectedPrompt`\n- `words`\n- `keywordMatches`\n- `promptLength`\n- `maxAds`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\client\\gpu-streaming-client.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\client\\gpu-streaming-client.md",
      "type": "docs",
      "size": 653,
      "modified": "2025-07-21T04:53:32.589Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.589Z"
      },
      "content": "# gpu-streaming-client\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\client\\gpu-streaming-client.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\client\\gpu-streaming-client.js`\n- **Type**: code\n- **Size**: 9107 bytes\n- **Last Modified**: Sun Jul 20 2025 17:02:21 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `GPUStreamingClient`\n- `GPUStreamingHelper`\n- `data`\n- `response`\n- `requestData`\n- `streamData`\n- `streamId`\n- `tokens`\n- `onToken`\n- `onComplete`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\gpu-provider.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\gpu-provider.md",
      "type": "docs",
      "size": 700,
      "modified": "2025-07-21T04:53:32.592Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.592Z"
      },
      "content": "# gpu-provider\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\gpu-provider.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\gpu-provider.js`\n- **Type**: code\n- **Size**: 6837 bytes\n- **Last Modified**: Sun Jul 20 2025 17:00:00 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `GPUProvider`\n- `streamDuration`\n- `now`\n- `uptimeMs`\n- `totalUptimeMs`\n- `efficiency`\n- `uptime`\n- `modelRequirements`\n- `baseRequirements`\n- `base`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-manager.js`\n- `src\\graphics\\gpu-streaming\\user-plugin-manager.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\gpu-streaming-app.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\gpu-streaming-app.md",
      "type": "docs",
      "size": 965,
      "modified": "2025-07-21T04:53:32.595Z",
      "metadata": {
        "lines": 40,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.595Z"
      },
      "content": "# gpu-streaming-app\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n- **Type**: code\n- **Size**: 15431 bytes\n- **Last Modified**: Sun Jul 20 2025 18:16:57 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `GPUStreamingApp`\n- `userId`\n- `result`\n- `plugins`\n- `plugin`\n- `connection`\n- `earnings`\n- `stats`\n- `providerId`\n- `streamId`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-manager.js`\n- `src\\graphics\\gpu-streaming\\ad-injection-service.js`\n- `src\\graphics\\gpu-streaming\\llm-inference-engine.js`\n- `src\\graphics\\gpu-streaming\\payment-processor.js`\n- `src\\graphics\\gpu-streaming\\stream-quality-manager.js`\n- `src\\graphics\\gpu-streaming\\user-plugin-manager.js`\n- `src\\graphics\\gpu-streaming\\lm-studio-bridge.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\gpu-streaming-manager.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\gpu-streaming-manager.md",
      "type": "docs",
      "size": 786,
      "modified": "2025-07-21T04:53:32.597Z",
      "metadata": {
        "lines": 36,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.597Z"
      },
      "content": "# gpu-streaming-manager\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\gpu-streaming-manager.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\gpu-streaming-manager.js`\n- **Type**: code\n- **Size**: 8226 bytes\n- **Last Modified**: Sun Jul 20 2025 16:57:38 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `GPUStreamingManager`\n- `providerId`\n- `provider`\n- `streamId`\n- `stream`\n- `duration`\n- `tokensPerSecond`\n- `earnings`\n- `availableProviders`\n- `scoredProviders`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n- `src\\graphics\\gpu-streaming\\gpu-provider.js`\n- `src\\graphics\\gpu-streaming\\stream-quality-manager.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\llm-inference-engine.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\llm-inference-engine.md",
      "type": "docs",
      "size": 644,
      "modified": "2025-07-21T04:53:32.600Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.600Z"
      },
      "content": "# llm-inference-engine\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\llm-inference-engine.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\llm-inference-engine.js`\n- **Type**: code\n- **Size**: 9287 bytes\n- **Last Modified**: Sun Jul 20 2025 16:59:26 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `LLMInferenceEngine`\n- `startTime`\n- `config`\n- `result`\n- `endTime`\n- `latency`\n- `cost`\n- `adRevenue`\n- `streamId`\n- `stream`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\lm-studio-bridge.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\lm-studio-bridge.md",
      "type": "docs",
      "size": 651,
      "modified": "2025-07-21T04:53:32.602Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.602Z"
      },
      "content": "# lm-studio-bridge\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\lm-studio-bridge.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\lm-studio-bridge.js`\n- **Type**: code\n- **Size**: 9105 bytes\n- **Last Modified**: Sun Jul 20 2025 18:18:04 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `LMStudioBridge`\n- `connection`\n- `response`\n- `data`\n- `capabilities`\n- `model`\n- `modelName`\n- `availableConnections`\n- `requestBody`\n- `status`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\lm-studio-detector.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\lm-studio-detector.md",
      "type": "docs",
      "size": 642,
      "modified": "2025-07-21T04:53:32.605Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.605Z"
      },
      "content": "# lm-studio-detector\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\lm-studio-detector.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\lm-studio-detector.js`\n- **Type**: code\n- **Size**: 7035 bytes\n- **Last Modified**: Sun Jul 20 2025 17:17:31 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `LMStudioDetector`\n- `instance`\n- `isAvailable`\n- `instanceInfo`\n- `instanceKey`\n- `networkRanges`\n- `range`\n- `baseIPParts`\n- `maskBits`\n- `networkAddress`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\payment-processor.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\payment-processor.md",
      "type": "docs",
      "size": 674,
      "modified": "2025-07-21T04:53:32.607Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.607Z"
      },
      "content": "# payment-processor\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\payment-processor.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\payment-processor.js`\n- **Type**: code\n- **Size**: 10026 bytes\n- **Last Modified**: Sun Jul 20 2025 17:00:45 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `PaymentProcessor`\n- `currentBalance`\n- `newBalance`\n- `transactionId`\n- `transaction`\n- `methodConfig`\n- `processingFee`\n- `netAmount`\n- `balance`\n- `paymentMethod`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\stream-quality-manager.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\stream-quality-manager.md",
      "type": "docs",
      "size": 779,
      "modified": "2025-07-21T04:53:32.610Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.610Z"
      },
      "content": "# stream-quality-manager\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\stream-quality-manager.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\stream-quality-manager.js`\n- **Type**: code\n- **Size**: 7729 bytes\n- **Last Modified**: Sun Jul 20 2025 17:01:44 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `StreamQualityManager`\n- `level`\n- `multiplier`\n- `modelRequirements`\n- `providerMemory`\n- `suitableQualities`\n- `requiredMemory`\n- `latencySuitableQualities`\n- `estimatedLatency`\n- `baseRequirements`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n- `src\\graphics\\gpu-streaming\\gpu-streaming-manager.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\gpu-streaming\\user-plugin-manager.md",
      "path": "docs\\code\\graphics\\gpu-streaming\\user-plugin-manager.md",
      "type": "docs",
      "size": 724,
      "modified": "2025-07-21T04:53:32.612Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.612Z"
      },
      "content": "# user-plugin-manager\n\n## Overview\nAuto-generated documentation for `src\\graphics\\gpu-streaming\\user-plugin-manager.js`\n\n## File Information\n- **Path**: `src\\graphics\\gpu-streaming\\user-plugin-manager.js`\n- **Type**: code\n- **Size**: 7642 bytes\n- **Last Modified**: Sun Jul 20 2025 18:13:54 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `UserPluginManager`\n- `pluginId`\n- `plugin`\n- `provider`\n- `connection`\n- `userPlugins`\n- `connected`\n- `availablePlugins`\n- `compatiblePlugins`\n- `selectedPlugin`\n\n## Dependencies\n- `src\\graphics\\gpu-streaming\\gpu-streaming-app.js`\n- `src\\graphics\\gpu-streaming\\gpu-provider.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\materials\\MaterialSystem.md",
      "path": "docs\\code\\graphics\\materials\\MaterialSystem.md",
      "type": "docs",
      "size": 675,
      "modified": "2025-07-21T04:53:32.615Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.615Z"
      },
      "content": "# MaterialSystem\n\n## Overview\nAuto-generated documentation for `src\\graphics\\materials\\MaterialSystem.js`\n\n## File Information\n- **Path**: `src\\graphics\\materials\\MaterialSystem.js`\n- **Type**: code\n- **Size**: 23583 bytes\n- **Last Modified**: Mon Jul 14 2025 20:53:41 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `MaterialAnimator`\n- `SeasonalEffectSystem`\n- `DynamicTextureGenerator`\n- `RealTimeMaterialSystem`\n- `seasonColors`\n- `trunkColor`\n- `branchColor`\n- `leafColor`\n- `transitionTime`\n- `progress`\n\n## Dependencies\n- `src\\graphics\\materials\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\renderers\\AdvancedRenderer.md",
      "path": "docs\\code\\graphics\\renderers\\AdvancedRenderer.md",
      "type": "docs",
      "size": 617,
      "modified": "2025-07-21T04:53:32.617Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.617Z"
      },
      "content": "# AdvancedRenderer\n\n## Overview\nAuto-generated documentation for `src\\graphics\\renderers\\AdvancedRenderer.js`\n\n## File Information\n- **Path**: `src\\graphics\\renderers\\AdvancedRenderer.js`\n- **Type**: code\n- **Size**: 26610 bytes\n- **Last Modified**: Sat Jul 05 2025 11:39:13 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AdvancedRenderer`\n- `renderPass`\n- `ssaoPass`\n- `bloomPass`\n- `fxaaPass`\n- `outputPass`\n- `lightProbe`\n- `dirLight`\n- `light`\n- `particleCount`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\renderers\\CrysisEnhancement.md",
      "path": "docs\\code\\graphics\\renderers\\CrysisEnhancement.md",
      "type": "docs",
      "size": 667,
      "modified": "2025-07-21T04:53:32.619Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.619Z"
      },
      "content": "# CrysisEnhancement\n\n## Overview\nAuto-generated documentation for `src\\graphics\\renderers\\CrysisEnhancement.js`\n\n## File Information\n- **Path**: `src\\graphics\\renderers\\CrysisEnhancement.js`\n- **Type**: code\n- **Size**: 35513 bytes\n- **Last Modified**: Mon Jul 14 2025 21:20:54 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `PBRMaterialSystem`\n- `DynamicLightingSystem`\n- `PostProcessingSystem`\n- `AdvancedShaderSystem`\n- `CrysisEnhancementSystem`\n- `envMap`\n- `size`\n- `canvas`\n- `ctx`\n- `gradient`\n\n## Dependencies\n- `src\\graphics\\renderers\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\graphics\\renderers\\three.module.md",
      "path": "docs\\code\\graphics\\renderers\\three.module.md",
      "type": "docs",
      "size": 669,
      "modified": "2025-07-21T04:53:32.622Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.622Z"
      },
      "content": "# three.module\n\n## Overview\nAuto-generated documentation for `src\\graphics\\renderers\\three.module.js`\n\n## File Information\n- **Path**: `src\\graphics\\renderers\\three.module.js`\n- **Type**: code\n- **Size**: 1178963 bytes\n- **Last Modified**: Sat Jul 05 2025 13:23:29 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `EventDispatcher`\n- `Vector2`\n- `Matrix3`\n- `Quaternion`\n- `Vector3`\n- `ImageUtils`\n- `Source`\n- `Texture`\n- `Vector4`\n- `WebGLRenderTarget`\n\n## Dependencies\n- `src\\graphics\\renderers\\CrysisEnhancement.js`\n- `src\\utils\\helpers\\comfyui-integration.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\main.md",
      "path": "docs\\code\\main.md",
      "type": "docs",
      "size": 656,
      "modified": "2025-07-21T04:53:32.626Z",
      "metadata": {
        "lines": 37,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.626Z"
      },
      "content": "# main\n\n## Overview\nAuto-generated documentation for `src\\main.jsx`\n\n## File Information\n- **Path**: `src\\main.jsx`\n- **Type**: code\n- **Size**: 7077 bytes\n- **Last Modified**: Mon Jul 21 2025 14:18:07 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `initializeApp`\n- `setupPerformanceMonitoring`\n- `showErrorState`\n- `registerServiceWorker`\n- `container`\n- `root`\n- `memory`\n- `observer`\n- `entry`\n- `registration`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n- `src\\ai\\llm\\LLMManager.js`\n- `src\\ai\\agents\\AIAgentManager.js`\n- `src\\core\\config\\app.config.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\App.md",
      "path": "docs\\code\\ui\\App.md",
      "type": "docs",
      "size": 897,
      "modified": "2025-07-21T04:53:32.628Z",
      "metadata": {
        "lines": 45,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.628Z"
      },
      "content": "# App\n\n## Overview\nAuto-generated documentation for `src\\ui\\App.jsx`\n\n## File Information\n- **Path**: `src\\ui\\App.jsx`\n- **Type**: code\n- **Size**: 6046 bytes\n- **Last Modified**: Mon Jul 21 2025 14:51:02 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `App`\n- `initializeApp`\n- `connection`\n- `stats`\n- `handleRekursingReady`\n- `setupRealtimeUpdates`\n- `statsInterval`\n- `healthInterval`\n- `healthy`\n- `appContext`\n\n## Dependencies\n- `src\\main.jsx`\n- `src\\ui\\components\\NavBar.jsx`\n- `src\\ui\\pages\\Home.jsx`\n- `src\\ui\\pages\\Play.jsx`\n- `src\\ui\\pages\\AIAgentDashboard.jsx`\n- `src\\ui\\pages\\GenLab.jsx`\n- `src\\ui\\pages\\Docs.jsx`\n- `src\\ui\\pages\\Tools.jsx`\n- `src\\ui\\pages\\Settings.jsx`\n- `src\\ui\\pages\\SocialAI.jsx`\n- `src\\ui\\pages\\ContextDashboard.jsx`\n- `src\\core\\services\\unifiedService.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\components\\NavBar.md",
      "path": "docs\\code\\ui\\components\\NavBar.md",
      "type": "docs",
      "size": 504,
      "modified": "2025-07-21T04:53:32.630Z",
      "metadata": {
        "lines": 30,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.630Z"
      },
      "content": "# NavBar\n\n## Overview\nAuto-generated documentation for `src\\ui\\components\\NavBar.jsx`\n\n## File Information\n- **Path**: `src\\ui\\components\\NavBar.jsx`\n- **Type**: code\n- **Size**: 1754 bytes\n- **Last Modified**: Mon Jul 21 2025 14:51:24 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `NavBar`\n- `location`\n- `navItems`\n- `function`\n- `react`\n- `react-router-dom`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\AIAgentDashboard.md",
      "path": "docs\\code\\ui\\pages\\AIAgentDashboard.md",
      "type": "docs",
      "size": 486,
      "modified": "2025-07-21T04:53:32.634Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.634Z"
      },
      "content": "# AIAgentDashboard\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\AIAgentDashboard.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\AIAgentDashboard.jsx`\n- **Type**: code\n- **Size**: 262 bytes\n- **Last Modified**: Mon Jul 21 2025 14:36:42 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `AIAgentDashboard`\n- `function`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\ContextDashboard.md",
      "path": "docs\\code\\ui\\pages\\ContextDashboard.md",
      "type": "docs",
      "size": 613,
      "modified": "2025-07-21T04:53:32.637Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.637Z"
      },
      "content": "# ContextDashboard\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\ContextDashboard.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\ContextDashboard.jsx`\n- **Type**: code\n- **Size**: 11410 bytes\n- **Last Modified**: Mon Jul 21 2025 14:49:11 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ContextDashboard`\n- `loadContextStats`\n- `stats`\n- `handleSearch`\n- `results`\n- `renderOverview`\n- `renderSearch`\n- `renderKnowledgeGraph`\n- `renderMemory`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\Docs.md",
      "path": "docs\\code\\ui\\pages\\Docs.md",
      "type": "docs",
      "size": 438,
      "modified": "2025-07-21T04:53:32.640Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.640Z"
      },
      "content": "# Docs\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\Docs.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\Docs.jsx`\n- **Type**: code\n- **Size**: 221 bytes\n- **Last Modified**: Mon Jul 21 2025 14:36:56 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `Docs`\n- `function`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\GenLab.md",
      "path": "docs\\code\\ui\\pages\\GenLab.md",
      "type": "docs",
      "size": 446,
      "modified": "2025-07-21T04:53:32.642Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.642Z"
      },
      "content": "# GenLab\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\GenLab.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\GenLab.jsx`\n- **Type**: code\n- **Size**: 236 bytes\n- **Last Modified**: Mon Jul 21 2025 14:36:50 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `GenLab`\n- `function`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\Home.md",
      "path": "docs\\code\\ui\\pages\\Home.md",
      "type": "docs",
      "size": 438,
      "modified": "2025-07-21T04:53:32.644Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.644Z"
      },
      "content": "# Home\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\Home.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\Home.jsx`\n- **Type**: code\n- **Size**: 923 bytes\n- **Last Modified**: Mon Jul 21 2025 14:36:21 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `Home`\n- `function`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\Play.md",
      "path": "docs\\code\\ui\\pages\\Play.md",
      "type": "docs",
      "size": 438,
      "modified": "2025-07-21T04:53:32.647Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.647Z"
      },
      "content": "# Play\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\Play.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\Play.jsx`\n- **Type**: code\n- **Size**: 223 bytes\n- **Last Modified**: Mon Jul 21 2025 14:36:35 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `Play`\n- `function`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\Settings.md",
      "path": "docs\\code\\ui\\pages\\Settings.md",
      "type": "docs",
      "size": 454,
      "modified": "2025-07-21T04:53:32.650Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.650Z"
      },
      "content": "# Settings\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\Settings.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\Settings.jsx`\n- **Type**: code\n- **Size**: 231 bytes\n- **Last Modified**: Mon Jul 21 2025 14:37:12 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `Settings`\n- `function`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\SocialAI.md",
      "path": "docs\\code\\ui\\pages\\SocialAI.md",
      "type": "docs",
      "size": 612,
      "modified": "2025-07-21T04:53:32.654Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.654Z"
      },
      "content": "# SocialAI\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\SocialAI.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\SocialAI.jsx`\n- **Type**: code\n- **Size**: 13731 bytes\n- **Last Modified**: Mon Jul 21 2025 14:31:32 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `SocialAI`\n- `newSocialAI`\n- `createDemoUsers`\n- `demoUsers`\n- `createProfile`\n- `userId`\n- `profile`\n- `userMatches`\n- `findMatches`\n- `createSession`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n- `src\\ai\\social\\SocialAIMatching.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\ui\\pages\\Tools.md",
      "path": "docs\\code\\ui\\pages\\Tools.md",
      "type": "docs",
      "size": 442,
      "modified": "2025-07-21T04:53:32.657Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.657Z"
      },
      "content": "# Tools\n\n## Overview\nAuto-generated documentation for `src\\ui\\pages\\Tools.jsx`\n\n## File Information\n- **Path**: `src\\ui\\pages\\Tools.jsx`\n- **Type**: code\n- **Size**: 222 bytes\n- **Last Modified**: Mon Jul 21 2025 14:37:05 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `Tools`\n- `function`\n- `react`\n\n## Dependencies\n- `src\\ui\\App.jsx`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\data\\SpatialMatrix.md",
      "path": "docs\\code\\utils\\data\\SpatialMatrix.md",
      "type": "docs",
      "size": 499,
      "modified": "2025-07-21T04:53:32.660Z",
      "metadata": {
        "lines": 27,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.660Z"
      },
      "content": "# SpatialMatrix\n\n## Overview\nAuto-generated documentation for `src\\utils\\data\\SpatialMatrix.js`\n\n## File Information\n- **Path**: `src\\utils\\data\\SpatialMatrix.js`\n- **Type**: code\n- **Size**: 400 bytes\n- **Last Modified**: Sat Jul 05 2025 11:39:56 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `SpatialFunctionClusteringMatrix`\n- `class`\n- `three`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\data\\SystemMatrix.md",
      "path": "docs\\code\\utils\\data\\SystemMatrix.md",
      "type": "docs",
      "size": 595,
      "modified": "2025-07-21T04:53:32.662Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.662Z"
      },
      "content": "# SystemMatrix\n\n## Overview\nAuto-generated documentation for `src\\utils\\data\\SystemMatrix.js`\n\n## File Information\n- **Path**: `src\\utils\\data\\SystemMatrix.js`\n- **Type**: code\n- **Size**: 21585 bytes\n- **Last Modified**: Sat Jul 05 2025 11:40:09 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `SystemInterconnectivityMatrix`\n- `this`\n- `ambientLight`\n- `directionalLight`\n- `node`\n- `nodeGroup`\n- `geometry`\n- `material`\n- `mesh`\n- `positions`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\helpers\\advanced-optimization.md",
      "path": "docs\\code\\utils\\helpers\\advanced-optimization.md",
      "type": "docs",
      "size": 673,
      "modified": "2025-07-21T04:53:32.665Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.665Z"
      },
      "content": "# advanced-optimization\n\n## Overview\nAuto-generated documentation for `src\\utils\\helpers\\advanced-optimization.js`\n\n## File Information\n- **Path**: `src\\utils\\helpers\\advanced-optimization.js`\n- **Type**: code\n- **Size**: 27419 bytes\n- **Last Modified**: Mon Jul 14 2025 21:37:28 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `LODSystem`\n- `FrustumCullingSystem`\n- `ObjectPool`\n- `WebGLOptimizationSystem`\n- `MobileOptimizationSystem`\n- `AdvancedOptimizationSystem`\n- `lods`\n- `level`\n- `geometry`\n- `material`\n\n## Dependencies\n- `src\\utils\\helpers\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\helpers\\comfyui-integration.md",
      "path": "docs\\code\\utils\\helpers\\comfyui-integration.md",
      "type": "docs",
      "size": 655,
      "modified": "2025-07-21T04:53:32.668Z",
      "metadata": {
        "lines": 35,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.668Z"
      },
      "content": "# comfyui-integration\n\n## Overview\nAuto-generated documentation for `src\\utils\\helpers\\comfyui-integration.js`\n\n## File Information\n- **Path**: `src\\utils\\helpers\\comfyui-integration.js`\n- **Type**: code\n- **Size**: 16130 bytes\n- **Last Modified**: Mon Jul 21 2025 14:37:24 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ComfyUIIntegration`\n- `response`\n- `prompts`\n- `workflow`\n- `result`\n- `promptId`\n- `maxAttempts`\n- `poll`\n- `history`\n- `outputs`\n\n## Dependencies\n- `src\\ai\\agents\\AIAgentManager.js`\n- `src\\graphics\\renderers\\three.module.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\helpers\\FlowVisualizer.md",
      "path": "docs\\code\\utils\\helpers\\FlowVisualizer.md",
      "type": "docs",
      "size": 582,
      "modified": "2025-07-21T04:53:32.670Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.670Z"
      },
      "content": "# FlowVisualizer\n\n## Overview\nAuto-generated documentation for `src\\utils\\helpers\\FlowVisualizer.js`\n\n## File Information\n- **Path**: `src\\utils\\helpers\\FlowVisualizer.js`\n- **Type**: code\n- **Size**: 5663 bytes\n- **Last Modified**: Sat Jul 05 2025 11:39:17 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `FlowDiagramVisualizer`\n- `response`\n- `data`\n- `nodeGroup`\n- `edgeLine`\n- `geometry`\n- `material`\n- `mesh`\n- `edges`\n- `line`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\helpers\\thought-history-git.md",
      "path": "docs\\code\\utils\\helpers\\thought-history-git.md",
      "type": "docs",
      "size": 605,
      "modified": "2025-07-21T04:53:32.675Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.675Z"
      },
      "content": "# thought-history-git\n\n## Overview\nAuto-generated documentation for `src\\utils\\helpers\\thought-history-git.js`\n\n## File Information\n- **Path**: `src\\utils\\helpers\\thought-history-git.js`\n- **Type**: code\n- **Size**: 23651 bytes\n- **Last Modified**: Sun Jul 20 2025 20:07:05 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `ThoughtHistoryGit`\n- `structure`\n- `filePath`\n- `now`\n- `today`\n- `timestamp`\n- `batchId`\n- `thoughtsByAgent`\n- `groups`\n- `agentId`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\math\\MathEngine.md",
      "path": "docs\\code\\utils\\math\\MathEngine.md",
      "type": "docs",
      "size": 549,
      "modified": "2025-07-21T04:53:32.677Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.677Z"
      },
      "content": "# MathEngine\n\n## Overview\nAuto-generated documentation for `src\\utils\\math\\MathEngine.js`\n\n## File Information\n- **Path**: `src\\utils\\math\\MathEngine.js`\n- **Type**: code\n- **Size**: 40771 bytes\n- **Last Modified**: Sat Jul 05 2025 11:39:26 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `MathematicalEngine`\n- `based`\n- `const`\n- `magnitude`\n- `phase`\n- `z`\n- `c`\n- `x2`\n- `y2`\n- `result`\n\n## Dependencies\n- `src\\ai\\neural\\MathematicalAI.js`\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\code\\utils\\math\\MathVisualizer.md",
      "path": "docs\\code\\utils\\math\\MathVisualizer.md",
      "type": "docs",
      "size": 596,
      "modified": "2025-07-21T04:53:32.680Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.680Z"
      },
      "content": "# MathVisualizer\n\n## Overview\nAuto-generated documentation for `src\\utils\\math\\MathVisualizer.js`\n\n## File Information\n- **Path**: `src\\utils\\math\\MathVisualizer.js`\n- **Type**: code\n- **Size**: 43832 bytes\n- **Last Modified**: Sat Jul 05 2025 11:39:38 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `MathematicalVisualizer`\n- `const`\n- `particleCount`\n- `geometry`\n- `material`\n- `particle`\n- `angle`\n- `radius`\n- `indicatorCount`\n- `indicator`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\public\\gpu-streaming-plugin\\background.md",
      "path": "docs\\public\\gpu-streaming-plugin\\background.md",
      "type": "docs",
      "size": 682,
      "modified": "2025-07-21T04:53:32.683Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.683Z"
      },
      "content": "# background\n\n## Overview\nAuto-generated documentation for `public\\gpu-streaming-plugin\\background.js`\n\n## File Information\n- **Path**: `public\\gpu-streaming-plugin\\background.js`\n- **Type**: code\n- **Size**: 9057 bytes\n- **Last Modified**: Sun Jul 20 2025 18:14:51 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `initializePlugin`\n- `detectSystemCapabilities`\n- `connectToService`\n- `registerPlugin`\n- `disconnectFromService`\n- `handleSocketMessage`\n- `handleInferenceRequest`\n- `callLMStudio`\n- `processLocally`\n- `calculateCost`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\public\\gpu-streaming-plugin\\popup.md",
      "path": "docs\\public\\gpu-streaming-plugin\\popup.md",
      "type": "docs",
      "size": 646,
      "modified": "2025-07-21T04:53:32.685Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.685Z"
      },
      "content": "# popup\n\n## Overview\nAuto-generated documentation for `public\\gpu-streaming-plugin\\popup.js`\n\n## File Information\n- **Path**: `public\\gpu-streaming-plugin\\popup.js`\n- **Type**: code\n- **Size**: 7217 bytes\n- **Last Modified**: Sun Jul 20 2025 18:15:48 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `initializePopup`\n- `updateStatusDisplay`\n- `loadSettings`\n- `loadEarnings`\n- `setupEventListeners`\n- `connectToService`\n- `disconnectFromService`\n- `saveSettings`\n- `refreshStatus`\n- `showLoading`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\public\\js\\game-launcher.md",
      "path": "docs\\public\\js\\game-launcher.md",
      "type": "docs",
      "size": 655,
      "modified": "2025-07-21T04:53:32.687Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.687Z"
      },
      "content": "# game-launcher\n\n## Overview\nAuto-generated documentation for `public\\js\\game-launcher.js`\n\n## File Information\n- **Path**: `public\\js\\game-launcher.js`\n- **Type**: code\n- **Size**: 13671 bytes\n- **Last Modified**: Mon Jul 14 2025 14:57:49 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `initLauncher`\n- `initEventListeners`\n- `startSystemCheck`\n- `performSystemCheck`\n- `checkWebGL`\n- `checkES6Support`\n- `checkNetworkConnection`\n- `checkMemoryAvailable`\n- `startAssetLoading`\n- `startNetworkConnection`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\public\\js\\main.md",
      "path": "docs\\public\\js\\main.md",
      "type": "docs",
      "size": 586,
      "modified": "2025-07-21T04:53:32.689Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.689Z"
      },
      "content": "# main\n\n## Overview\nAuto-generated documentation for `public\\js\\main.js`\n\n## File Information\n- **Path**: `public\\js\\main.js`\n- **Type**: code\n- **Size**: 15191 bytes\n- **Last Modified**: Mon Jul 14 2025 14:53:03 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `for`\n- `from`\n- `to`\n- `initNavigation`\n- `toggleMobileMenu`\n- `handleNavbarScroll`\n- `initPlanetInteractions`\n- `setActivePlanet`\n- `updatePlanetShowcase`\n- `initAnimations`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    },
    {
      "id": "docs\\public\\sw.md",
      "path": "docs\\public\\sw.md",
      "type": "docs",
      "size": 593,
      "modified": "2025-07-21T04:53:32.692Z",
      "metadata": {
        "lines": 34,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:53:32.692Z"
      },
      "content": "# sw\n\n## Overview\nAuto-generated documentation for `public\\sw.js`\n\n## File Information\n- **Path**: `public\\sw.js`\n- **Type**: code\n- **Size**: 9158 bytes\n- **Last Modified**: Mon Jul 14 2025 14:58:39 GMT+1000 (Australian Eastern Standard Time)\n\n## Keywords\n- `handleStaticFile`\n- `handleAPIRequest`\n- `handleDynamicRequest`\n- `isStaticFile`\n- `isAPIRequest`\n- `performBackgroundSync`\n- `cleanupOldCaches`\n- `CACHE_NAME`\n- `STATIC_CACHE`\n- `DYNAMIC_CACHE`\n\n## Dependencies\n- No dependencies detected\n\n## Usage\n```javascript\n// TODO: Add usage examples\n```\n\n---\n*Generated by ContextAutomation*\n"
    }
  ],
  "tests": [],
  "stories": [],
  "frames": [
    {
      "id": "system-upgrade-1753073556465",
      "type": "system-upgrade",
      "priority": "critical",
      "status": "planning",
      "timestamp": 1753073556465,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastUpgrades": 0,
        "lessonsLearned": []
      }
    },
    {
      "id": "mean-reversion-rsi-1753073556466",
      "type": "trading-strategy",
      "priority": "medium",
      "status": "designing",
      "timestamp": 1753073556466,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastStrategies": 0,
        "lessonsLearned": []
      }
    },
    {
      "id": "social-ai-matching-1753073556467",
      "type": "social-system",
      "priority": "high",
      "status": "designing",
      "timestamp": 1753073556467,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastSocialFeatures": 0,
        "lessonsLearned": []
      }
    },
    {
      "id": "system-upgrade-1753073556581",
      "type": "system-upgrade",
      "priority": "critical",
      "status": "planning",
      "timestamp": 1753073556581,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastUpgrades": 1,
        "lessonsLearned": [
          {
            "type": "thought-frame-created",
            "frameId": "system-upgrade-1753073556465",
            "frameType": "system-upgrade",
            "tags": [
              "thought-frame",
              "system-upgrade"
            ],
            "data": {
              "id": "system-upgrade-1753073556465",
              "type": "system-upgrade",
              "priority": "critical",
              "status": "planning",
              "timestamp": 1753073556465,
              "context": {
                "relevantCode": 0,
                "relevantDocs": 0,
                "pastUpgrades": 0,
                "lessonsLearned": []
              },
              "areas": {
                "git": {
                  "status": "pending",
                  "priority": "high",
                  "tasks": [
                    "Update repository structure",
                    "Commit restructure changes",
                    "Push to main branch",
                    "Create release tag"
                  ]
                },
                "aws": {
                  "status": "pending",
                  "priority": "high",
                  "tasks": [
                    "Deploy updated build",
                    "Update CloudFront distribution",
                    "Verify SSL certificates",
                    "Test live functionality"
                  ]
                },
                "meanReversion": {
                  "status": "pending",
                  "priority": "medium",
                  "tasks": [
                    "Implement RSI strategy",
                    "Add technical indicators",
                    "Create trading signals",
                    "Integrate with game mechanics"
                  ]
                },
                "socialAI": {
                  "status": "pending",
                  "priority": "high",
                  "tasks": [
                    "Design user matching system",
                    "Implement AI session sharing",
                    "Create needs/abilities marketplace",
                    "Build actionable suggestions engine"
                  ]
                }
              },
              "strategy": {
                "phase1": "Git and AWS deployment",
                "phase2": "Mean reversion RSI integration",
                "phase3": "Social AI matching system",
                "phase4": "Testing and optimization"
              },
              "metrics": {
                "deploymentSuccess": false,
                "liveVersionWorking": false,
                "meanReversionActive": false,
                "socialMatchingActive": false,
                "userEngagement": 0
              }
            },
            "timestamp": 1753073556466
          }
        ]
      }
    },
    {
      "id": "system-upgrade-1753073570294",
      "type": "system-upgrade",
      "priority": "critical",
      "status": "planning",
      "timestamp": 1753073570294,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastUpgrades": 4,
        "lessonsLearned": [
          {
            "type": "thought-frame-created",
            "frameId": "system-upgrade-1753073556581",
            "frameType": "system-upgrade",
            "tags": [
              "thought-frame",
              "system-upgrade"
            ],
            "data": {
              "id": "system-upgrade-1753073556581",
              "type": "system-upgrade",
              "priority": "critical",
              "status": "completed",
              "timestamp": 1753073556581,
              "context": {
                "relevantCode": 0,
                "relevantDocs": 0,
                "pastUpgrades": 1,
                "lessonsLearned": [
                  {
                    "type": "thought-frame-created",
                    "frameId": "system-upgrade-1753073556465",
                    "frameType": "system-upgrade",
                    "tags": [
                      "thought-frame",
                      "system-upgrade"
                    ],
                    "data": {
                      "id": "system-upgrade-1753073556465",
                      "type": "system-upgrade",
                      "priority": "critical",
                      "status": "planning",
                      "timestamp": 1753073556465,
                      "context": {
                        "relevantCode": 0,
                        "relevantDocs": 0,
                        "pastUpgrades": 0,
                        "lessonsLearned": []
                      },
                      "areas": {
                        "git": {
                          "status": "pending",
                          "priority": "high",
                          "tasks": [
                            "Update repository structure",
                            "Commit restructure changes",
                            "Push to main branch",
                            "Create release tag"
                          ]
                        },
                        "aws": {
                          "status": "pending",
                          "priority": "high",
                          "tasks": [
                            "Deploy updated build",
                            "Update CloudFront distribution",
                            "Verify SSL certificates",
                            "Test live functionality"
                          ]
                        },
                        "meanReversion": {
                          "status": "pending",
                          "priority": "medium",
                          "tasks": [
                            "Implement RSI strategy",
                            "Add technical indicators",
                            "Create trading signals",
                            "Integrate with game mechanics"
                          ]
                        },
                        "socialAI": {
                          "status": "pending",
                          "priority": "high",
                          "tasks": [
                            "Design user matching system",
                            "Implement AI session sharing",
                            "Create needs/abilities marketplace",
                            "Build actionable suggestions engine"
                          ]
                        }
                      },
                      "strategy": {
                        "phase1": "Git and AWS deployment",
                        "phase2": "Mean reversion RSI integration",
                        "phase3": "Social AI matching system",
                        "phase4": "Testing and optimization"
                      },
                      "metrics": {
                        "deploymentSuccess": false,
                        "liveVersionWorking": false,
                        "meanReversionActive": false,
                        "socialMatchingActive": false,
                        "userEngagement": 0
                      }
                    },
                    "timestamp": 1753073556466
                  }
                ]
              },
              "areas": {
                "git": {
                  "status": "completed",
                  "priority": "high",
                  "tasks": [
                    "Update repository structure",
                    "Commit restructure changes",
                    "Push to main branch",
                    "Create release tag"
                  ]
                },
                "aws": {
                  "status": "completed",
                  "priority": "high",
                  "tasks": [
                    "Deploy updated build",
                    "Update CloudFront distribution",
                    "Verify SSL certificates",
                    "Test live functionality"
                  ]
                },
                "meanReversion": {
                  "status": "implementing",
                  "priority": "medium",
                  "tasks": [
                    "Implement RSI strategy",
                    "Add technical indicators",
                    "Create trading signals",
                    "Integrate with game mechanics"
                  ]
                },
                "socialAI": {
                  "status": "implementing",
                  "priority": "high",
                  "tasks": [
                    "Design user matching system",
                    "Implement AI session sharing",
                    "Create needs/abilities marketplace",
                    "Build actionable suggestions engine"
                  ]
                }
              },
              "strategy": {
                "phase1": "Git and AWS deployment",
                "phase2": "Mean reversion RSI integration",
                "phase3": "Social AI matching system",
                "phase4": "Testing and optimization"
              },
              "metrics": {
                "deploymentSuccess": false,
                "liveVersionWorking": false,
                "meanReversionActive": false,
                "socialMatchingActive": false,
                "userEngagement": 0
              },
              "executionStart": 1753073556581,
              "executionEnd": 1753073556583,
              "duration": 2
            },
            "timestamp": 1753073556581
          },
          {
            "type": "frame-execution-start",
            "frameId": "system-upgrade-1753073556581",
            "tags": [
              "execution",
              "system-upgrade"
            ],
            "data": {
              "status": "executing"
            },
            "timestamp": 1753073556581
          },
          {
            "type": "frame-execution-success",
            "frameId": "system-upgrade-1753073556581",
            "tags": [
              "execution",
              "success",
              "system-upgrade"
            ],
            "data": {
              "status": "completed",
              "duration": 2,
              "metrics": {
                "deploymentSuccess": false,
                "liveVersionWorking": false,
                "meanReversionActive": false,
                "socialMatchingActive": false,
                "userEngagement": 0
              }
            },
            "timestamp": 1753073556583
          }
        ]
      }
    },
    {
      "id": "mean-reversion-rsi-1753073570295",
      "type": "trading-strategy",
      "priority": "medium",
      "status": "designing",
      "timestamp": 1753073570295,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastStrategies": 1,
        "lessonsLearned": [
          {
            "type": "thought-frame-created",
            "frameId": "mean-reversion-rsi-1753073556466",
            "frameType": "trading-strategy",
            "tags": [
              "thought-frame",
              "trading-strategy"
            ],
            "data": {
              "id": "mean-reversion-rsi-1753073556466",
              "type": "trading-strategy",
              "priority": "medium",
              "status": "designing",
              "timestamp": 1753073556466,
              "context": {
                "relevantCode": 0,
                "relevantDocs": 0,
                "pastStrategies": 0,
                "lessonsLearned": []
              },
              "strategy": {
                "name": "Mean Reversion RSI Strategy",
                "source": "https://jesse.trade/strategies/meanreversionrsi",
                "description": "RSI-based mean reversion trading strategy",
                "indicators": {
                  "rsi": {
                    "period": 14,
                    "overbought": 70,
                    "oversold": 30,
                    "description": "Relative Strength Index for momentum"
                  },
                  "sma": {
                    "period": 20,
                    "description": "Simple Moving Average for trend"
                  },
                  "bollinger": {
                    "period": 20,
                    "stdDev": 2,
                    "description": "Bollinger Bands for volatility"
                  }
                },
                "rules": {
                  "entry": {
                    "rsiOversold": "RSI < 30",
                    "priceBelowSMA": "Price below 20 SMA",
                    "bollingerLower": "Price near lower Bollinger Band"
                  },
                  "exit": {
                    "rsiOverbought": "RSI > 70",
                    "priceAboveSMA": "Price above 20 SMA",
                    "takeProfit": "2:1 risk-reward ratio"
                  }
                }
              },
              "implementation": {
                "phase1": "Core RSI calculation",
                "phase2": "Moving average integration",
                "phase3": "Bollinger Bands setup",
                "phase4": "Signal generation",
                "phase5": "Game integration"
              }
            },
            "timestamp": 1753073556466
          }
        ]
      }
    },
    {
      "id": "social-ai-matching-1753073570295",
      "type": "social-system",
      "priority": "high",
      "status": "designing",
      "timestamp": 1753073570295,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastSocialFeatures": 0,
        "lessonsLearned": []
      }
    },
    {
      "id": "system-upgrade-1753073570410",
      "type": "system-upgrade",
      "priority": "critical",
      "status": "planning",
      "timestamp": 1753073570410,
      "context": {
        "relevantCode": 0,
        "relevantDocs": 0,
        "pastUpgrades": 5,
        "lessonsLearned": [
          {
            "type": "frame-execution-start",
            "frameId": "system-upgrade-1753073556581",
            "tags": [
              "execution",
              "system-upgrade"
            ],
            "data": {
              "status": "executing"
            },
            "timestamp": 1753073556581
          },
          {
            "type": "frame-execution-success",
            "frameId": "system-upgrade-1753073556581",
            "tags": [
              "execution",
              "success",
              "system-upgrade"
            ],
            "data": {
              "status": "completed",
              "duration": 2,
              "metrics": {
                "deploymentSuccess": false,
                "liveVersionWorking": false,
                "meanReversionActive": false,
                "socialMatchingActive": false,
                "userEngagement": 0
              }
            },
            "timestamp": 1753073556583
          },
          {
            "type": "thought-frame-created",
            "frameId": "system-upgrade-1753073570294",
            "frameType": "system-upgrade",
            "tags": [
              "thought-frame",
              "system-upgrade"
            ],
            "data": {
              "id": "system-upgrade-1753073570294",
              "type": "system-upgrade",
              "priority": "critical",
              "status": "planning",
              "timestamp": 1753073570294,
              "context": {
                "relevantCode": 0,
                "relevantDocs": 0,
                "pastUpgrades": 4,
                "lessonsLearned": [
                  {
                    "type": "thought-frame-created",
                    "frameId": "system-upgrade-1753073556581",
                    "frameType": "system-upgrade",
                    "tags": [
                      "thought-frame",
                      "system-upgrade"
                    ],
                    "data": {
                      "id": "system-upgrade-1753073556581",
                      "type": "system-upgrade",
                      "priority": "critical",
                      "status": "completed",
                      "timestamp": 1753073556581,
                      "context": {
                        "relevantCode": 0,
                        "relevantDocs": 0,
                        "pastUpgrades": 1,
                        "lessonsLearned": [
                          {
                            "type": "thought-frame-created",
                            "frameId": "system-upgrade-1753073556465",
                            "frameType": "system-upgrade",
                            "tags": [
                              "thought-frame",
                              "system-upgrade"
                            ],
                            "data": {
                              "id": "system-upgrade-1753073556465",
                              "type": "system-upgrade",
                              "priority": "critical",
                              "status": "planning",
                              "timestamp": 1753073556465,
                              "context": {
                                "relevantCode": 0,
                                "relevantDocs": 0,
                                "pastUpgrades": 0,
                                "lessonsLearned": []
                              },
                              "areas": {
                                "git": {
                                  "status": "pending",
                                  "priority": "high",
                                  "tasks": [
                                    "Update repository structure",
                                    "Commit restructure changes",
                                    "Push to main branch",
                                    "Create release tag"
                                  ]
                                },
                                "aws": {
                                  "status": "pending",
                                  "priority": "high",
                                  "tasks": [
                                    "Deploy updated build",
                                    "Update CloudFront distribution",
                                    "Verify SSL certificates",
                                    "Test live functionality"
                                  ]
                                },
                                "meanReversion": {
                                  "status": "pending",
                                  "priority": "medium",
                                  "tasks": [
                                    "Implement RSI strategy",
                                    "Add technical indicators",
                                    "Create trading signals",
                                    "Integrate with game mechanics"
                                  ]
                                },
                                "socialAI": {
                                  "status": "pending",
                                  "priority": "high",
                                  "tasks": [
                                    "Design user matching system",
                                    "Implement AI session sharing",
                                    "Create needs/abilities marketplace",
                                    "Build actionable suggestions engine"
                                  ]
                                }
                              },
                              "strategy": {
                                "phase1": "Git and AWS deployment",
                                "phase2": "Mean reversion RSI integration",
                                "phase3": "Social AI matching system",
                                "phase4": "Testing and optimization"
                              },
                              "metrics": {
                                "deploymentSuccess": false,
                                "liveVersionWorking": false,
                                "meanReversionActive": false,
                                "socialMatchingActive": false,
                                "userEngagement": 0
                              }
                            },
                            "timestamp": 1753073556466
                          }
                        ]
                      },
                      "areas": {
                        "git": {
                          "status": "completed",
                          "priority": "high",
                          "tasks": [
                            "Update repository structure",
                            "Commit restructure changes",
                            "Push to main branch",
                            "Create release tag"
                          ]
                        },
                        "aws": {
                          "status": "completed",
                          "priority": "high",
                          "tasks": [
                            "Deploy updated build",
                            "Update CloudFront distribution",
                            "Verify SSL certificates",
                            "Test live functionality"
                          ]
                        },
                        "meanReversion": {
                          "status": "implementing",
                          "priority": "medium",
                          "tasks": [
                            "Implement RSI strategy",
                            "Add technical indicators",
                            "Create trading signals",
                            "Integrate with game mechanics"
                          ]
                        },
                        "socialAI": {
                          "status": "implementing",
                          "priority": "high",
                          "tasks": [
                            "Design user matching system",
                            "Implement AI session sharing",
                            "Create needs/abilities marketplace",
                            "Build actionable suggestions engine"
                          ]
                        }
                      },
                      "strategy": {
                        "phase1": "Git and AWS deployment",
                        "phase2": "Mean reversion RSI integration",
                        "phase3": "Social AI matching system",
                        "phase4": "Testing and optimization"
                      },
                      "metrics": {
                        "deploymentSuccess": false,
                        "liveVersionWorking": false,
                        "meanReversionActive": false,
                        "socialMatchingActive": false,
                        "userEngagement": 0
                      },
                      "executionStart": 1753073556581,
                      "executionEnd": 1753073556583,
                      "duration": 2
                    },
                    "timestamp": 1753073556581
                  },
                  {
                    "type": "frame-execution-start",
                    "frameId": "system-upgrade-1753073556581",
                    "tags": [
                      "execution",
                      "system-upgrade"
                    ],
                    "data": {
                      "status": "executing"
                    },
                    "timestamp": 1753073556581
                  },
                  {
                    "type": "frame-execution-success",
                    "frameId": "system-upgrade-1753073556581",
                    "tags": [
                      "execution",
                      "success",
                      "system-upgrade"
                    ],
                    "data": {
                      "status": "completed",
                      "duration": 2,
                      "metrics": {
                        "deploymentSuccess": false,
                        "liveVersionWorking": false,
                        "meanReversionActive": false,
                        "socialMatchingActive": false,
                        "userEngagement": 0
                      }
                    },
                    "timestamp": 1753073556583
                  }
                ]
              },
              "areas": {
                "git": {
                  "status": "pending",
                  "priority": "high",
                  "tasks": [
                    "Update repository structure",
                    "Commit restructure changes",
                    "Push to main branch",
                    "Create release tag"
                  ]
                },
                "aws": {
                  "status": "pending",
                  "priority": "high",
                  "tasks": [
                    "Deploy updated build",
                    "Update CloudFront distribution",
                    "Verify SSL certificates",
                    "Test live functionality"
                  ]
                },
                "meanReversion": {
                  "status": "pending",
                  "priority": "medium",
                  "tasks": [
                    "Implement RSI strategy",
                    "Add technical indicators",
                    "Create trading signals",
                    "Integrate with game mechanics"
                  ]
                },
                "socialAI": {
                  "status": "pending",
                  "priority": "high",
                  "tasks": [
                    "Design user matching system",
                    "Implement AI session sharing",
                    "Create needs/abilities marketplace",
                    "Build actionable suggestions engine"
                  ]
                }
              },
              "strategy": {
                "phase1": "Git and AWS deployment",
                "phase2": "Mean reversion RSI integration",
                "phase3": "Social AI matching system",
                "phase4": "Testing and optimization"
              },
              "metrics": {
                "deploymentSuccess": false,
                "liveVersionWorking": false,
                "meanReversionActive": false,
                "socialMatchingActive": false,
                "userEngagement": 0
              }
            },
            "timestamp": 1753073570294
          }
        ]
      }
    }
  ],
  "other": [
    {
      "id": "src\\ui\\components\\NavBar.css",
      "path": "src\\ui\\components\\NavBar.css",
      "type": "other",
      "size": 3161,
      "modified": "2025-07-21T04:35:58.314Z",
      "metadata": {
        "lines": 186,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:35:58.314Z"
      },
      "content": "/* NavBar Component Styles */\r\n\r\n.navbar {\r\n  background: rgba(15, 23, 42, 0.95);\r\n  backdrop-filter: blur(10px);\r\n  -webkit-backdrop-filter: blur(10px);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 1000;\r\n  padding: 0.5rem 0;\r\n}\r\n\r\n.navbar-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.navbar-brand {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.brand-link {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.75rem;\r\n  text-decoration: none;\r\n  color: #f8fafc;\r\n  font-weight: 700;\r\n  font-size: 1.25rem;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.brand-link:hover {\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.brand-icon {\r\n  font-size: 1.5rem;\r\n  background: linear-gradient(135deg, #6366f1, #8b5cf6);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.brand-text {\r\n  backgr"
    },
    {
      "id": "src\\ui\\pages\\ContextDashboard.css",
      "path": "src\\ui\\pages\\ContextDashboard.css",
      "type": "other",
      "size": 9463,
      "modified": "2025-07-21T04:50:00.875Z",
      "metadata": {
        "lines": 567,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:50:00.875Z"
      },
      "content": ".context-dashboard {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.dashboard-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  color: white;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.dashboard-header h1 {\r\n  margin: 0 0 10px 0;\r\n  font-size: 2.5rem;\r\n  font-weight: 700;\r\n}\r\n\r\n.dashboard-header p {\r\n  margin: 0;\r\n  font-size: 1.1rem;\r\n  opacity: 0.9;\r\n}\r\n\r\n.dashboard-tabs {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 30px;\r\n  background: #f8f9fa;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.tab {\r\n  flex: 1;\r\n  padding: 12px 20px;\r\n  border: none;\r\n  background: transparent;\r\n  color: #666;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tab:hover {\r"
    },
    {
      "id": "src\\ui\\pages\\SocialAI.css",
      "path": "src\\ui\\pages\\SocialAI.css",
      "type": "other",
      "size": 10278,
      "modified": "2025-07-21T04:32:26.398Z",
      "metadata": {
        "lines": 554,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-21T04:32:26.398Z"
      },
      "content": "/* Social AI Matching Page Styles */\r\n\r\n.social-ai-page {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  min-height: 100vh;\r\n  background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);\r\n  color: #f8fafc;\r\n}\r\n\r\n.social-ai-header {\r\n  text-align: center;\r\n  margin-bottom: 3rem;\r\n  padding: 2rem;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 16px;\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.social-ai-header h1 {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n  background: linear-gradient(135deg, #6366f1, #8b5cf6, #ec4899);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n}\r\n\r\n.social-ai-header p {\r\n  font-size: 1.2rem;\r\n  color: #cbd5e1;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n/* Welcome Section */\r\n.welcome-section {\r\n  text-align: center;\r\n  padding: 4rem 2rem;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  border-radius: 16px;\r\n  backdrop-filter: blur(10px)"
    },
    {
      "id": "src\\ui\\styles\\ai-agent-dashboard.css",
      "path": "src\\ui\\styles\\ai-agent-dashboard.css",
      "type": "other",
      "size": 13462,
      "modified": "2025-07-14T05:09:59.021Z",
      "metadata": {
        "lines": 629,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T05:09:59.021Z"
      },
      "content": "/* ===== AI AGENT DASHBOARD STYLES ===== */\r\n\r\n.ai-dashboard {\r\n    background: var(--background-dark);\r\n    color: var(--text-primary);\r\n    min-height: 100vh;\r\n    padding: var(--spacing-xl);\r\n    font-family: var(--font-secondary);\r\n}\r\n\r\n/* ===== DASHBOARD HEADER ===== */\r\n.dashboard-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: var(--spacing-2xl);\r\n    padding-bottom: var(--spacing-lg);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.dashboard-header h1 {\r\n    font-family: var(--font-primary);\r\n    font-size: 2.5rem;\r\n    color: var(--primary-color);\r\n    margin: 0;\r\n}\r\n\r\n/* ===== SYSTEM STATS ===== */\r\n.system-stats {\r\n    display: flex;\r\n    gap: var(--spacing-lg);\r\n}\r\n\r\n.stats-grid {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\r\n    gap: var(--spacing-md);\r\n}\r\n\r\n.stat-item {\r\n    background: rgba(255, 255, 255, 0.05);\r\n    border: 1px solid rgba(255, 255, 255"
    },
    {
      "id": "src\\ui\\styles\\global.css",
      "path": "src\\ui\\styles\\global.css",
      "type": "other",
      "size": 3148,
      "modified": "2025-07-05T01:40:23.289Z",
      "metadata": {
        "lines": 157,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-05T01:40:23.289Z"
      },
      "content": "/* IDX-DOC-00: For index reference format, see INDEX_DESCRIBER.md */\r\n/* IDX-STYLE-01: Main Stylesheet */\r\n/* Basic styles for the Multiplayer Planetary Shooter */\r\n\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: Arial, sans-serif;\r\n    overflow: hidden;\r\n    background: #000;\r\n}\r\n\r\n#game-container {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n#ui-container {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n    z-index: 1000;\r\n}\r\n\r\n#connection-status {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n    font-size: 12px;\r\n    pointer-events: auto;\r\n}\r\n\r\n#player-stats {\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 10px;\r\n    color: white;\r\n    background: rgba(0, 0, 0, 0.7);\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    font-size: 14"
    },
    {
      "id": "public\\css\\game-launcher.css",
      "path": "public\\css\\game-launcher.css",
      "type": "other",
      "size": 8821,
      "modified": "2025-07-14T04:56:43.835Z",
      "metadata": {
        "lines": 407,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T04:56:43.835Z"
      },
      "content": "/* ===== GAME LAUNCHER STYLES ===== */\r\n\r\n.game-launcher-page {\r\n    min-height: 100vh;\r\n    background: var(--background-dark);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n/* ===== LOADING BACKGROUND ===== */\r\n.loading-background {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n}\r\n\r\n.loading-background .stars {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: \r\n        radial-gradient(2px 2px at 20px 30px, #eee, transparent),\r\n        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.8), transparent),\r\n        radial-gradient(1px 1px at 90px 40px, #fff, transparent),\r\n        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.6), transparent),\r\n        radial-gradient(2px 2px at 160px 30px, #ddd, transparent);\r\n    background-repeat: repeat;\r\n    background-size: 200px 100px;\r\n    animation: twink"
    },
    {
      "id": "public\\css\\main.css",
      "path": "public\\css\\main.css",
      "type": "other",
      "size": 22709,
      "modified": "2025-07-14T04:51:38.150Z",
      "metadata": {
        "lines": 1080,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T04:51:38.150Z"
      },
      "content": "/* ===== RESET & BASE STYLES ===== */\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n:root {\r\n    /* Colors */\r\n    --primary-color: #00d4ff;\r\n    --primary-dark: #0099cc;\r\n    --secondary-color: #ff6b35;\r\n    --accent-color: #7c3aed;\r\n    --background-dark: #0a0a0a;\r\n    --background-light: #1a1a1a;\r\n    --text-primary: #ffffff;\r\n    --text-secondary: #b3b3b3;\r\n    --text-muted: #666666;\r\n    --success-color: #10b981;\r\n    --warning-color: #f59e0b;\r\n    --error-color: #ef4444;\r\n    \r\n    /* Typography */\r\n    --font-primary: 'Orbitron', monospace;\r\n    --font-secondary: 'Inter', sans-serif;\r\n    \r\n    /* Spacing */\r\n    --spacing-xs: 0.25rem;\r\n    --spacing-sm: 0.5rem;\r\n    --spacing-md: 1rem;\r\n    --spacing-lg: 1.5rem;\r\n    --spacing-xl: 2rem;\r\n    --spacing-2xl: 3rem;\r\n    --spacing-3xl: 4rem;\r\n    \r\n    /* Border Radius */\r\n    --radius-sm: 4px;\r\n    --radius-md: 8px;\r\n    --radius-lg: 12px;\r\n    --radius-xl: 16px;\r\n    \r\n    /* Shadows */\r\n    --shadow-sm"
    },
    {
      "id": "public\\game\\index.html",
      "path": "public\\game\\index.html",
      "type": "other",
      "size": 5869,
      "modified": "2025-07-14T04:54:08.436Z",
      "metadata": {
        "lines": 142,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T04:54:08.436Z"
      },
      "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Coordinates - Game Launcher | Rekursing.com</title>\r\n    <meta name=\"description\" content=\"Launch Coordinates - the multiplayer planetary shooter game with AI-driven gameplay.\">\r\n    \r\n    <!-- Favicon -->\r\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/assets/favicon.ico\">\r\n    \r\n    <!-- Styles -->\r\n    <link rel=\"stylesheet\" href=\"/css/main.css\">\r\n    <link rel=\"stylesheet\" href=\"/css/game-launcher.css\">\r\n    \r\n    <!-- Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n</head>\r\n<body class=\"game-launcher-page\">\r\n    <!-- Loading Background -->\r\n    <div class=\"loading-backgroun"
    },
    {
      "id": "public\\gpu-streaming-plugin\\popup.html",
      "path": "public\\gpu-streaming-plugin\\popup.html",
      "type": "other",
      "size": 5513,
      "modified": "2025-07-20T08:15:19.738Z",
      "metadata": {
        "lines": 231,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-20T08:15:19.738Z"
      },
      "content": "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>GPU Streaming Plugin</title>\r\n  <style>\r\n    body {\r\n      width: 350px;\r\n      padding: 20px;\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n      color: white;\r\n      margin: 0;\r\n    }\r\n    \r\n    .header {\r\n      text-align: center;\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    .header h1 {\r\n      margin: 0;\r\n      font-size: 18px;\r\n      font-weight: 600;\r\n    }\r\n    \r\n    .status-card {\r\n      background: rgba(255, 255, 255, 0.1);\r\n      border-radius: 10px;\r\n      padding: 15px;\r\n      margin-bottom: 15px;\r\n      backdrop-filter: blur(10px);\r\n    }\r\n    \r\n    .status-indicator {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 10px;\r\n    }\r\n    \r\n    .status-dot {\r\n      width: 12px;\r\n      height: 12px;\r\n      border-radius: 50%;\r\n      margin-right: 10px;\r\n    }\r\n    \r\n    .status-dot.connected {\r\n"
    },
    {
      "id": "public\\index.html",
      "path": "public\\index.html",
      "type": "other",
      "size": 328,
      "modified": "2025-07-14T07:37:03.027Z",
      "metadata": {
        "lines": 12,
        "hasComments": false,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": false,
        "lastModified": "2025-07-14T07:37:03.027Z"
      },
      "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Coordinates Unified Project UI</title>\r\n  </head>\r\n  <body>\r\n    <div id=\"root\"></div>\r\n    <script type=\"module\" src=\"/src/main.jsx\"></script>\r\n  </body>\r\n</html> "
    },
    {
      "id": "public\\offline.html",
      "path": "public\\offline.html",
      "type": "other",
      "size": 8360,
      "modified": "2025-07-14T04:59:10.354Z",
      "metadata": {
        "lines": 259,
        "hasComments": true,
        "hasImports": false,
        "hasExports": false,
        "hasTests": false,
        "hasDocs": true,
        "lastModified": "2025-07-14T04:59:10.354Z",
        "keywords": [
          "checkConnection",
          "retryConnection",
          "goHome",
          "statusText",
          "statusDot"
        ]
      },
      "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Offline - Coordinates | Rekursing.com</title>\r\n    <meta name=\"description\" content=\"You're currently offline. Check your connection and try again.\">\r\n    \r\n    <!-- Favicon -->\r\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/assets/favicon.ico\">\r\n    \r\n    <!-- Styles -->\r\n    <link rel=\"stylesheet\" href=\"/css/main.css\">\r\n    \r\n    <!-- Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\r\n    \r\n    <style>\r\n        .offline-page {\r\n            min-height: 100vh;\r\n            background: var(--background-dark);\r\n            display: flex;\r\n            align-items: center;\r\n          "
    }
  ]
}